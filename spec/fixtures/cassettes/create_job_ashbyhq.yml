---
http_interactions:
- request:
    method: get
    uri: https://api.ashbyhq.com/posting-api/job-board/lightdash?includeCompensation=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:42:36 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01J4RSANXVT7Z9XSY3ZWGDNBWW
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 8afee69249c76555-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:42:36 GMT
- request:
    method: get
    uri: https://api.ashbyhq.com/posting-api/job-board/lightdash?includeCompensation=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:42:36 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01J4RSAP64ZBNCAGX0YT4DWF2F
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 8afee694088e4139-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJqb2JzIjpbeyJpZCI6IjMwOTcwNmJjLTEwODEtNDhiNi04OWRjLWY3NjliYmUxN2U2ZCIsInRpdGxlIjoiQW5hbHl0aWNzIEVuZ2luZWVyaW5nIEFkdm9jYXRlIiwiZGVwYXJ0bWVudCI6IkxpZ2h0ZGFzaCIsInRlYW0iOiJMaWdodGRhc2giLCJlbXBsb3ltZW50VHlwZSI6IkZ1bGxUaW1lIiwibG9jYXRpb24iOiJSZW1vdGUiLCJzaG91bGREaXNwbGF5Q29tcGVuc2F0aW9uT25Kb2JQb3N0aW5ncyI6dHJ1ZSwic2Vjb25kYXJ5TG9jYXRpb25zIjpbXSwicHVibGlzaGVkQXQiOiIyMDI0LTA3LTE1VDE2OjQ1OjE0LjcyMSswMDowMCIsImlzTGlzdGVkIjp0cnVlLCJpc1JlbW90ZSI6dHJ1ZSwiYWRkcmVzcyI6eyJwb3N0YWxBZGRyZXNzIjp7ImFkZHJlc3NDb3VudHJ5IjoiVW5pdGVkIEtpbmdkb20ifX0sImpvYlVybCI6Imh0dHBzOi8vam9icy5hc2hieWhxLmNvbS9saWdodGRhc2gvMzA5NzA2YmMtMTA4MS00OGI2LTg5ZGMtZjc2OWJiZTE3ZTZkIiwiYXBwbHlVcmwiOiJodHRwczovL2pvYnMuYXNoYnlocS5jb20vbGlnaHRkYXNoLzMwOTcwNmJjLTEwODEtNDhiNi04OWRjLWY3NjliYmUxN2U2ZC9hcHBsaWNhdGlvbiIsImRlc2NyaXB0aW9uSHRtbCI6IjxoMj5BYm91dCBMaWdodGRhc2g8L2gyPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkxpZ2h0ZGFzaCBpcyBhbiBvcGVuIHNvdXJjZSBCSSB0b29sIHRoYXQgaW5zdGFudGx5IHR1cm5zIHlvdXIgZGJ0IHByb2plY3QgaW50byBhIGZ1bGwtc3RhY2sgQkkgcGxhdGZvcm0uPC9wPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPldl4oCZcmUgYnVpbGRpbmcgdGhlIGJlc3QgQkkgdG9vbCBmb3IgYW5hbHl0aWNzIGVuZ2luZWVycyBieSBsZXR0aW5nIHRoZW0gbWFuYWdlIGV2ZXJ5dGhpbmcgYXMgY29kZSwgZnJvbSB0aGUgY29tZm9ydCBvZiB0aGVpciB0ZXh0IGVkaXRvciBhbmQgY29tbWFuZCBsaW5lLiBPbmNlIHRoZSBkYXRhIHRlYW0gaGFzIHdyaXR0ZW4gdGhlIG1ldHJpY3MsIHRoZW4gTGlnaHRkYXNoIGVuYWJsZXMgc2VsZi1zZXJ2ZSBmb3IgdGhlIGVudGlyZSBidXNpbmVzcywgc28geW91ciBkYXRhIGlzIGFjY2Vzc2libGUgZm9yIHRoZSB3aG9sZSB0ZWFtLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5XZeKAmXJlIGhlbHBpbmcgZGF0YSB0ZWFtcyBidWlsZCBkYXRhLWRyaXZlbiBjb21wYW5pZXMgc28gdGhleSBjYW4gbWFrZSBiZXR0ZXIgZGVjaXNpb25zLCBmYXN0ZXIuPC9wPjxoMj5Ib3cgd2Ugd29yayBhdCBMaWdodGRhc2g8L2gyPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZSBidWlsZCBpbiBwdWJsaWMsIGJ5IGRlZmF1bHQuPC9zdHJvbmc+IFdl4oCZcmUgYW4gb3BlbiBzb3VyY2UgcHJvZHVjdCwgc28gaGF2aW5nIHNoYXJlZCBjb250ZXh0IGlzIGltcG9ydGFudCBzbyB0aGF0IHBlb3BsZSBjYW4gY29udHJpYnV0ZSB0byBMaWdodGRhc2guIEFzIGEgdGVhbSwgd2UgYWxzbyB0aGluayB0aGF0IHdlIG1ha2UgdGhlIDxlbT48c3Ryb25nPmJlc3Q8L3N0cm9uZz48L2VtPiBkZWNpc2lvbnMgd2hlbiBldmVyeW9uZSBoYXMgYSBsb3Qgb2YgdGhlIHNhbWUgaW5mb3JtYXRpb24uIFdlIGRvbid0IG92ZXJzZWxsIGFuZCB1bmRlci1kZWxpdmVyOiB3ZSB3YW50IHRoZSBleHBlcmllbmNlIG9mIHVzaW5nIExpZ2h0ZGFzaCB0byBiZSBhcyBhd2Vzb21lIGFzIHRoZSBleHBlcmllbmNlIHdlJ3JlIHNlbGxpbmcuPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+V2UgY2hhbGxlbmdlIHByb2JsZW1zLCBub3QgcGVvcGxlLjwvc3Ryb25nPiBXZSBhc2sgb3Vyc2VsdmVzIOKAnDxlbT48c3Ryb25nPndoeTwvc3Ryb25nPjwvZW0+IGlzIHRoaXMgYnJva2VuP+KAnSBub3Qg4oCcPGVtPjxzdHJvbmc+d2hvPC9zdHJvbmc+PC9lbT4gaXMgYnJlYWtpbmcgdGhpcz/igJ08L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZeKAmXJlIGhpZ2hseSBjb2xsYWJvcmF0aXZlLjwvc3Ryb25nPiBXZeKAmXJlIGEgZ3JvdXAgb2YgcGVvcGxlIHRoYXQgYXJlIGhhcHB5IHdvcmtpbmcgaW5kZXBlbmRlbnRseSwgYnV0IGxvdmUgYmVpbmcgcGFydCBvZiBhIHRlYW0uICoqKipXZSBub3Qgb25seSB3b3JrIG9uIHByb2JsZW1zIGFzIGEgdGVhbSwgYnV0IHdlIGFsc28gbGlzdGVuIHRvIHRoZSBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkgYW5kIG91ciB1c2Vycy4gV2UgaW52ZXN0IGluIHRvb2xzIGFuZCBwcm9jZXNzZXMgdGhhdCBhbGxvdyB1cyB0byBkbyB0aGlzLCBldmVuIHdoaWxlIGZ1bGx5IHJlbW90ZS48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZSBiaWFzIHRvd2FyZHMgaW1wYWN0Ljwvc3Ryb25nPiBXZeKAmWQgcmF0aGVyIGJ1aWxkIHNvbWV0aGluZyB0byA4MCUgYW5kIGdldCBpdCBpbiBmcm9udCBvZiB1c2VycyBzbyB3ZSBjYW4gaXRlcmF0ZSBvbiBmYXN0IGZlZWRiYWNrIHRoYW4gYnVpbGQgc29tZXRoaW5nIHRvIDEwMCUganVzdCB0byBmaW5kIG91dCBpdOKAmXMgbm90IHRoZSByaWdodCB0aGluZy4gV2Ugc3BlbmQgYSBsb3Qgb2YgdGltZSB0aGlua2luZyBhYm91dCBob3cgb3VyIHdvcmsgc29sdmVzIHJlYWwgdXNlciBwcm9ibGVtcy4gV2Ugd29yayBvbiB0aGUgaGlnaGVzdCBpbXBhY3QgcHJvYmxlbXMgZXZlbiBpZiB0aGV54oCZcmUgc29tZXRoaW5nIGEgYml0IOKAnG91dCBvZiB5b3VyIHJlbWl04oCdLjwvcD48L2xpPjwvdWw+PGgyPkFib3V0IHRoZSByb2xlPC9oMj48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5BdCBMaWdodGRhc2gsIHdl4oCZcmUgb2JzZXNzZWQgd2l0aCB0aGUgc3VjY2VzcyBvZiBvdXIgdXNlcnMuIE91ciBmYXN0IGFuZCB0ZWNobmljYWwgYW5hbHl0aWNzIHN1cHBvcnQgaXMgb25lIG9mIG91ciBzdXBlcnBvd2VycyB0b2RheS4gSXQgY292ZXJzIGV2ZXJ5dGhpbmcgZnJvbSBidWlsZGluZyBkYXNoYm9hcmRzIGFuZCB3cml0aW5nIFNRTCB0byBhbmFseXRpY3MgZW5naW5lZXJpbmcgYmVzdCBwcmFjdGljZS4gSWYgeW91IGhhdmUgYSBwYXNzaW9uIGZvciBoZWxwaW5nIHRlYW1zIHdpbiB3aXRoIGRhdGEsIHdl4oCZcmUgbG9va2luZyBmb3IgYW4gQW5hbHl0aWNzIEVuZ2luZWVyaW5nIEFkdm9jYXRlIHRvIGpvaW4gdGhlIExpZ2h0ZGFzaCB0ZWFtLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5PdXIgdXNlcnPigJkgZXhwZXJpZW5jZSBvZiBMaWdodGRhc2ggZ29lcyBiZXlvbmQgb3VyIHByb2R1Y3QgZmVhdHVyZXMgYW5kIGluY2x1ZGVzIGV2ZXJ5IHRvdWNocG9pbnQgYW5kIGludGVyYWN0aW9uIHRoZXkgaGF2ZSB3aXRoIHRoZSBjb21tdW5pdHkgYW5kIHRlYW0uIEluIHRoaXMgcm9sZSwgeW914oCZbGwgYmUgdGhlIHZvaWNlIGZvciBvdXIgY29tbXVuaXR5IGFuZCByZXNwb25zaWJsZSBmb3Igb3VyIHVzZXJz4oCZIHF1ZXN0aW9ucyByZWxhdGVkIHRvIExpZ2h0ZGFzaCwgYmVzdCBwcmFjdGljZSBpbiBCSSBhbmQgYW5hbHl0aWNzIGVuZ2luZWVyaW5nLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PGgyPjxzdHJvbmc+QXJlYXMgb2YgUmVzcG9uc2liaWxpdHk6PC9zdHJvbmc+PC9oMj48dWwgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+T2JzZXNzIG92ZXIgdGhlIHN1Y2Nlc3Mgb2Ygb3VyIHVzZXJzOjwvc3Ryb25nPiBPdXIgdXNlcnPigJkgd2lucyBhcmUgb3VyIHdpbnMuIFdlIHdhbnQgdG8ga2VlcCBidWlsZGluZyBvbiBvdXIgdGVjaG5pY2FsIHN1cHBvcnQgdGhhdCBvdXIgY29tbXVuaXR5IGFuZCBjdXN0b21lcnMga25vdyBhbmQgbG92ZS4gWW914oCZbGwgcHJvdmlkZSBpbi1kZXB0aCwgcGVyc29uYWxpc2VkIGFuc3dlcnMgYW5kIHBhaXIgcHJvZ3JhbSB3aXRoIHVzZXJzIHRvIHNvbHZlIHRoZWlyIGFuYWx5dGljcyBwcm9ibGVtcyBhbmQgcHVsbCBpbiBvdGhlciBMaWdodGRhc2ggdGVhbSBtZW1iZXJzIHdoZW4gbmVlZGVkLjwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPkxpZ2h0ZGFzaCBjaGFtcGlvbjo8L3N0cm9uZz4gWW914oCZbGwgYmUgdGhlIGdvLXRvIExpZ2h0ZGFzaCBwcm8gYXQgTGlnaHRkYXNoIGFuZCBpbiB0aGUgY29tbXVuaXR5LiBZb3XigJlsbCBrZWVwIHVwIHdpdGggb3VyIGxhdGVzdCBmZWF0dXJlcyBhbmQga25vdyBob3cgdG8gdXNlIHRoZW0gKHlvdeKAmWxsIGJlIHVzaW5nIExpZ2h0ZGFzaCA8ZW0+PHN0cm9uZz5hdDwvc3Ryb25nPjwvZW0+IExpZ2h0ZGFzaCByZWd1bGFybHkhKSBhbmQgeW914oCZbGwgbWFrZSBzdXJlIHRvIHNoYXJlIHRoaXMga25vd2xlZGdlIHdpdGggdGhlIGNvbW11bml0eS4gWW914oCZbGwgYWxzbyByZXByZXNlbnQgdGhlIGNvbXBhbnkgYXQgY29tbXVuaXR5IGV2ZW50cywgY29uZmVyZW5jZXMsIGFuZCBtZWV0IHVwcy48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5UZWFjaCBhbmQgc2hhcmU6PC9zdHJvbmc+IENyZWF0ZSBhbmQgZGVsaXZlciB3b3JsZCBjbGFzcyB0dXRvcmlhbHMgYW5kIGRlbW9zIGZvciBMaWdodGRhc2ggYXMgd2VsbCBhcyBleGFtcGxlcyBvZiBiZXN0LXByYWN0aWNlIGZvciBkYXRhIGFuYWx5dGljcy4gVGhlc2UgY291bGQgYmUgYmxvZyBwb3N0cywgdmlkZW8gdHV0b3JpYWxzLCBvciBjb2RlIGV4YW1wbGVzLjwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPkNvbW11bml0eSBzdHJhdGVneTo8L3N0cm9uZz4gQnVpbGRpbmcgYW5kIGV4ZWN1dGluZyBzdHJhdGVnaWVzIHRvIGdyb3cgYW5kIGVuZ2FnZSB0aGUgYW5hbHlzdCBjb21tdW5pdHkgYXJvdW5kIExpZ2h0ZGFzaC48L3A+PC9saT48L3VsPjxoMj48c3Ryb25nPlJlcXVpcmVtZW50czo8L3N0cm9uZz48L2gyPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+RXhwZXJpZW5jZSB3aXRoIGJ1c2luZXNzIGludGVsbGlnZW5jZSBhbmQgYW5hbHl0aWNzIGVuZ2luZWVyaW5nPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPlN0cm9uZyB2ZXJiYWwgYW5kIHdyaXR0ZW4gY29tbXVuaWNhdGlvbiBza2lsbHM8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+Q29tZm9ydGFibGUgd2l0aCBkYnQsIFNRTCwgZ2l0LCBkYXRhIHZpc3VhbGl6YXRpb24sIGFuZCB0aGUgY29tbWFuZCBsaW5lPC9wPjwvbGk+PC91bD48aDI+PHN0cm9uZz5LUElzIG93bmVkIGJ5IHRoZSByb2xlIChXSVApOjwvc3Ryb25nPjwvaDI+PHVsIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Db21tdW5pdHkgc2l6ZSBhbmQgZW5nYWdlbWVudDwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5DdXN0b21lciBzdXBwb3J0IHJlc3BvbnNlIHRpbWVzIGFuZCBOUFM8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+Q29udGVudCBwdWJsaXNoZWQgYW5kIGhpdHM8L3A+PC9saT48L3VsPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj7wn5KcwqBXZSBiZWxpZXZlIHRoYXQgdG8gYnVpbGQgYSBwcm9kdWN0IHRoYXQgd29ya3MgZm9yIGEgZGl2ZXJzZSBncm91cCBvZiBwZW9wbGUsIHdlIG5lZWQgYSBkaXZlcnNlIHRlYW0uIFNvLCB3ZSBzdHJvbmdseSBlbmNvdXJhZ2UgY2FuZGlkYXRlcyBvZiBhbGwgZGlmZmVyZW50IHBlcnNwZWN0aXZlcywgZXhwZXJpZW5jZXMsIGJhY2tncm91bmRzIGFuZCBpZGVudGl0aWVzIHRvIGFwcGx5LiBXZeKAmXJlIGNvbW1pdHRlZCB0byBoaXJpbmcgcGVvcGxlIHJlZ2FyZGxlc3Mgb2YgcmFjZSwgcmVsaWdpb24sIGNvbG91ciwgbmF0aW9uYWwgb3JpZ2luLCBzZXgsIHNleHVhbCBvcmllbnRhdGlvbiwgZ2VuZGVyIGlkZW50aXR5LCBhZ2Ugb3IgZGlzYWJpbGl0eS4gQW5kIG9uY2UgeW91IGpvaW4gdXMsIHdl4oCZcmUgY29tbWl0dGVkIHRvIGJ1aWxkaW5nIGFuIGluY2x1c2l2ZSwgc3VwcG9ydGl2ZSBwbGFjZSBmb3IgeW91IHRvIGRvIHRoZSBiZXN0IHdvcmsgb2YgeW91ciBjYXJlZXIuPC9wPiIsImRlc2NyaXB0aW9uUGxhaW4iOiJBQk9VVCBMSUdIVERBU0hcblxuTGlnaHRkYXNoIGlzIGFuIG9wZW4gc291cmNlIEJJIHRvb2wgdGhhdCBpbnN0YW50bHkgdHVybnMgeW91ciBkYnQgcHJvamVjdCBpbnRvIGEgZnVsbC1zdGFjayBCSSBwbGF0Zm9ybS5cblxuV2XigJlyZSBidWlsZGluZyB0aGUgYmVzdCBCSSB0b29sIGZvciBhbmFseXRpY3MgZW5naW5lZXJzIGJ5IGxldHRpbmcgdGhlbSBtYW5hZ2UgZXZlcnl0aGluZyBhcyBjb2RlLCBmcm9tIHRoZSBjb21mb3J0IG9mIHRoZWlyIHRleHQgZWRpdG9yIGFuZCBjb21tYW5kIGxpbmUuIE9uY2UgdGhlIGRhdGEgdGVhbSBoYXMgd3JpdHRlbiB0aGUgbWV0cmljcywgdGhlbiBMaWdodGRhc2ggZW5hYmxlcyBzZWxmLXNlcnZlIGZvciB0aGUgZW50aXJlIGJ1c2luZXNzLCBzbyB5b3VyIGRhdGEgaXMgYWNjZXNzaWJsZSBmb3IgdGhlIHdob2xlIHRlYW0uXG5cbldl4oCZcmUgaGVscGluZyBkYXRhIHRlYW1zIGJ1aWxkIGRhdGEtZHJpdmVuIGNvbXBhbmllcyBzbyB0aGV5IGNhbiBtYWtlIGJldHRlciBkZWNpc2lvbnMsIGZhc3Rlci5cblxuXG5IT1cgV0UgV09SSyBBVCBMSUdIVERBU0hcblxuIC0gV2UgYnVpbGQgaW4gcHVibGljLCBieSBkZWZhdWx0LiBXZeKAmXJlIGFuIG9wZW4gc291cmNlIHByb2R1Y3QsIHNvIGhhdmluZyBzaGFyZWQgY29udGV4dCBpcyBpbXBvcnRhbnQgc28gdGhhdCBwZW9wbGUgY2FuIGNvbnRyaWJ1dGUgdG8gTGlnaHRkYXNoLiBBcyBhIHRlYW0sIHdlIGFsc28gdGhpbmsgdGhhdCB3ZSBtYWtlIHRoZSBiZXN0IGRlY2lzaW9ucyB3aGVuIGV2ZXJ5b25lIGhhcyBhIGxvdCBvZiB0aGUgc2FtZSBpbmZvcm1hdGlvbi4gV2UgZG9uJ3Qgb3ZlcnNlbGwgYW5kIHVuZGVyLWRlbGl2ZXI6IHdlIHdhbnQgdGhlIGV4cGVyaWVuY2Ugb2YgdXNpbmcgTGlnaHRkYXNoIHRvIGJlIGFzIGF3ZXNvbWUgYXMgdGhlIGV4cGVyaWVuY2Ugd2UncmUgc2VsbGluZy5cblxuIC0gV2UgY2hhbGxlbmdlIHByb2JsZW1zLCBub3QgcGVvcGxlLiBXZSBhc2sgb3Vyc2VsdmVzIOKAnHdoeSBpcyB0aGlzIGJyb2tlbj/igJ0gbm90IOKAnHdobyBpcyBicmVha2luZyB0aGlzP+KAnVxuXG4gLSBXZeKAmXJlIGhpZ2hseSBjb2xsYWJvcmF0aXZlLiBXZeKAmXJlIGEgZ3JvdXAgb2YgcGVvcGxlIHRoYXQgYXJlIGhhcHB5IHdvcmtpbmcgaW5kZXBlbmRlbnRseSwgYnV0IGxvdmUgYmVpbmcgcGFydCBvZiBhIHRlYW0uICoqKipXZSBub3Qgb25seSB3b3JrIG9uIHByb2JsZW1zIGFzIGEgdGVhbSwgYnV0IHdlIGFsc28gbGlzdGVuIHRvIHRoZSBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkgYW5kIG91ciB1c2Vycy4gV2UgaW52ZXN0IGluIHRvb2xzIGFuZCBwcm9jZXNzZXMgdGhhdCBhbGxvdyB1cyB0byBkbyB0aGlzLCBldmVuIHdoaWxlIGZ1bGx5IHJlbW90ZS5cblxuIC0gV2UgYmlhcyB0b3dhcmRzIGltcGFjdC4gV2XigJlkIHJhdGhlciBidWlsZCBzb21ldGhpbmcgdG8gODAlIGFuZCBnZXQgaXQgaW4gZnJvbnQgb2YgdXNlcnMgc28gd2UgY2FuIGl0ZXJhdGUgb24gZmFzdCBmZWVkYmFjayB0aGFuIGJ1aWxkIHNvbWV0aGluZyB0byAxMDAlIGp1c3QgdG8gZmluZCBvdXQgaXTigJlzIG5vdCB0aGUgcmlnaHQgdGhpbmcuIFdlIHNwZW5kIGEgbG90IG9mIHRpbWUgdGhpbmtpbmcgYWJvdXQgaG93IG91ciB3b3JrIHNvbHZlcyByZWFsIHVzZXIgcHJvYmxlbXMuIFdlIHdvcmsgb24gdGhlIGhpZ2hlc3QgaW1wYWN0IHByb2JsZW1zIGV2ZW4gaWYgdGhleeKAmXJlIHNvbWV0aGluZyBhIGJpdCDigJxvdXQgb2YgeW91ciByZW1pdOKAnS5cblxuXG5BQk9VVCBUSEUgUk9MRVxuXG5BdCBMaWdodGRhc2gsIHdl4oCZcmUgb2JzZXNzZWQgd2l0aCB0aGUgc3VjY2VzcyBvZiBvdXIgdXNlcnMuIE91ciBmYXN0IGFuZCB0ZWNobmljYWwgYW5hbHl0aWNzIHN1cHBvcnQgaXMgb25lIG9mIG91ciBzdXBlcnBvd2VycyB0b2RheS4gSXQgY292ZXJzIGV2ZXJ5dGhpbmcgZnJvbSBidWlsZGluZyBkYXNoYm9hcmRzIGFuZCB3cml0aW5nIFNRTCB0byBhbmFseXRpY3MgZW5naW5lZXJpbmcgYmVzdCBwcmFjdGljZS4gSWYgeW91IGhhdmUgYSBwYXNzaW9uIGZvciBoZWxwaW5nIHRlYW1zIHdpbiB3aXRoIGRhdGEsIHdl4oCZcmUgbG9va2luZyBmb3IgYW4gQW5hbHl0aWNzIEVuZ2luZWVyaW5nIEFkdm9jYXRlIHRvIGpvaW4gdGhlIExpZ2h0ZGFzaCB0ZWFtLlxuXG5PdXIgdXNlcnPigJkgZXhwZXJpZW5jZSBvZiBMaWdodGRhc2ggZ29lcyBiZXlvbmQgb3VyIHByb2R1Y3QgZmVhdHVyZXMgYW5kIGluY2x1ZGVzIGV2ZXJ5IHRvdWNocG9pbnQgYW5kIGludGVyYWN0aW9uIHRoZXkgaGF2ZSB3aXRoIHRoZSBjb21tdW5pdHkgYW5kIHRlYW0uIEluIHRoaXMgcm9sZSwgeW914oCZbGwgYmUgdGhlIHZvaWNlIGZvciBvdXIgY29tbXVuaXR5IGFuZCByZXNwb25zaWJsZSBmb3Igb3VyIHVzZXJz4oCZIHF1ZXN0aW9ucyByZWxhdGVkIHRvIExpZ2h0ZGFzaCwgYmVzdCBwcmFjdGljZSBpbiBCSSBhbmQgYW5hbHl0aWNzIGVuZ2luZWVyaW5nLlxuXG5cbkFSRUFTIE9GIFJFU1BPTlNJQklMSVRZOlxuXG4gLSBPYnNlc3Mgb3ZlciB0aGUgc3VjY2VzcyBvZiBvdXIgdXNlcnM6IE91ciB1c2Vyc+KAmSB3aW5zIGFyZSBvdXIgd2lucy4gV2Ugd2FudCB0byBrZWVwIGJ1aWxkaW5nIG9uIG91ciB0ZWNobmljYWwgc3VwcG9ydCB0aGF0IG91ciBjb21tdW5pdHkgYW5kIGN1c3RvbWVycyBrbm93IGFuZCBsb3ZlLiBZb3XigJlsbCBwcm92aWRlIGluLWRlcHRoLCBwZXJzb25hbGlzZWQgYW5zd2VycyBhbmQgcGFpciBwcm9ncmFtIHdpdGggdXNlcnMgdG8gc29sdmUgdGhlaXIgYW5hbHl0aWNzIHByb2JsZW1zIGFuZCBwdWxsIGluIG90aGVyIExpZ2h0ZGFzaCB0ZWFtIG1lbWJlcnMgd2hlbiBuZWVkZWQuXG5cbiAtIExpZ2h0ZGFzaCBjaGFtcGlvbjogWW914oCZbGwgYmUgdGhlIGdvLXRvIExpZ2h0ZGFzaCBwcm8gYXQgTGlnaHRkYXNoIGFuZCBpbiB0aGUgY29tbXVuaXR5LiBZb3XigJlsbCBrZWVwIHVwIHdpdGggb3VyIGxhdGVzdCBmZWF0dXJlcyBhbmQga25vdyBob3cgdG8gdXNlIHRoZW0gKHlvdeKAmWxsIGJlIHVzaW5nIExpZ2h0ZGFzaCBhdCBMaWdodGRhc2ggcmVndWxhcmx5ISkgYW5kIHlvdeKAmWxsIG1ha2Ugc3VyZSB0byBzaGFyZSB0aGlzIGtub3dsZWRnZSB3aXRoIHRoZSBjb21tdW5pdHkuIFlvdeKAmWxsIGFsc28gcmVwcmVzZW50IHRoZSBjb21wYW55IGF0IGNvbW11bml0eSBldmVudHMsIGNvbmZlcmVuY2VzLCBhbmQgbWVldCB1cHMuXG5cbiAtIFRlYWNoIGFuZCBzaGFyZTogQ3JlYXRlIGFuZCBkZWxpdmVyIHdvcmxkIGNsYXNzIHR1dG9yaWFscyBhbmQgZGVtb3MgZm9yIExpZ2h0ZGFzaCBhcyB3ZWxsIGFzIGV4YW1wbGVzIG9mIGJlc3QtcHJhY3RpY2UgZm9yIGRhdGEgYW5hbHl0aWNzLiBUaGVzZSBjb3VsZCBiZSBibG9nIHBvc3RzLCB2aWRlbyB0dXRvcmlhbHMsIG9yIGNvZGUgZXhhbXBsZXMuXG5cbiAtIENvbW11bml0eSBzdHJhdGVneTogQnVpbGRpbmcgYW5kIGV4ZWN1dGluZyBzdHJhdGVnaWVzIHRvIGdyb3cgYW5kIGVuZ2FnZSB0aGUgYW5hbHlzdCBjb21tdW5pdHkgYXJvdW5kIExpZ2h0ZGFzaC5cblxuXG5SRVFVSVJFTUVOVFM6XG5cbiAtIEV4cGVyaWVuY2Ugd2l0aCBidXNpbmVzcyBpbnRlbGxpZ2VuY2UgYW5kIGFuYWx5dGljcyBlbmdpbmVlcmluZ1xuXG4gLSBTdHJvbmcgdmVyYmFsIGFuZCB3cml0dGVuIGNvbW11bmljYXRpb24gc2tpbGxzXG5cbiAtIENvbWZvcnRhYmxlIHdpdGggZGJ0LCBTUUwsIGdpdCwgZGF0YSB2aXN1YWxpemF0aW9uLCBhbmQgdGhlIGNvbW1hbmQgbGluZVxuXG5cbktQSVMgT1dORUQgQlkgVEhFIFJPTEUgKFdJUCk6XG5cbiAtIENvbW11bml0eSBzaXplIGFuZCBlbmdhZ2VtZW50XG5cbiAtIEN1c3RvbWVyIHN1cHBvcnQgcmVzcG9uc2UgdGltZXMgYW5kIE5QU1xuXG4gLSBDb250ZW50IHB1Ymxpc2hlZCBhbmQgaGl0c1xuXG7wn5KcwqBXZSBiZWxpZXZlIHRoYXQgdG8gYnVpbGQgYSBwcm9kdWN0IHRoYXQgd29ya3MgZm9yIGEgZGl2ZXJzZSBncm91cCBvZiBwZW9wbGUsIHdlIG5lZWQgYSBkaXZlcnNlIHRlYW0uIFNvLCB3ZSBzdHJvbmdseSBlbmNvdXJhZ2UgY2FuZGlkYXRlcyBvZiBhbGwgZGlmZmVyZW50IHBlcnNwZWN0aXZlcywgZXhwZXJpZW5jZXMsIGJhY2tncm91bmRzIGFuZCBpZGVudGl0aWVzIHRvIGFwcGx5LiBXZeKAmXJlIGNvbW1pdHRlZCB0byBoaXJpbmcgcGVvcGxlIHJlZ2FyZGxlc3Mgb2YgcmFjZSwgcmVsaWdpb24sIGNvbG91ciwgbmF0aW9uYWwgb3JpZ2luLCBzZXgsIHNleHVhbCBvcmllbnRhdGlvbiwgZ2VuZGVyIGlkZW50aXR5LCBhZ2Ugb3IgZGlzYWJpbGl0eS4gQW5kIG9uY2UgeW91IGpvaW4gdXMsIHdl4oCZcmUgY29tbWl0dGVkIHRvIGJ1aWxkaW5nIGFuIGluY2x1c2l2ZSwgc3VwcG9ydGl2ZSBwbGFjZSBmb3IgeW91IHRvIGRvIHRoZSBiZXN0IHdvcmsgb2YgeW91ciBjYXJlZXIuIiwiY29tcGVuc2F0aW9uIjp7ImNvbXBlbnNhdGlvblRpZXJTdW1tYXJ5IjoiwqM2MEsg4oCTIMKjOTVLIOKAoiAwLjElIOKAkyAwLjMlIiwic2NyYXBlYWJsZUNvbXBlbnNhdGlvblNhbGFyeVN1bW1hcnkiOiLCozYwSyAtIMKjOTVLIiwiY29tcGVuc2F0aW9uVGllcnMiOlt7ImlkIjoiN2NjN2I5YmItM2Y4Ny00YTljLThlNDMtNjA0NTY2ZGJiYjU0IiwidGllclN1bW1hcnkiOiLCozYwSyDigJMgwqM5NUsg4oCiIDAuMSUg4oCTIDAuMyUiLCJ0aXRsZSI6bnVsbCwiYWRkaXRpb25hbEluZm9ybWF0aW9uIjpudWxsLCJjb21wb25lbnRzIjpbeyJpZCI6IjEzZDYyYmJjLTFjMTUtNGZmOS05NDgwLWZlZWY3MmU5ODQ3YSIsInN1bW1hcnkiOiIwLjElIOKAkyAwLjMlIiwiY29tcGVuc2F0aW9uVHlwZSI6IkVxdWl0eVBlcmNlbnRhZ2UiLCJpbnRlcnZhbCI6Ik5PTkUiLCJjdXJyZW5jeUNvZGUiOm51bGwsIm1pblZhbHVlIjowLjEsIm1heFZhbHVlIjowLjN9LHsiaWQiOiI1YzI2YjI3MS1kZDhiLTQ3NDktYWNkMy1iZTFhM2I5NGU4NzAiLCJzdW1tYXJ5IjoiwqM2MEsg4oCTIMKjOTVLIiwiY29tcGVuc2F0aW9uVHlwZSI6IlNhbGFyeSIsImludGVydmFsIjoiMSBZRUFSIiwiY3VycmVuY3lDb2RlIjoiR0JQIiwibWluVmFsdWUiOjYwMDAwLCJtYXhWYWx1ZSI6OTUwMDB9XX1dLCJzdW1tYXJ5Q29tcG9uZW50cyI6W3siY29tcGVuc2F0aW9uVHlwZSI6IkVxdWl0eVBlcmNlbnRhZ2UiLCJpbnRlcnZhbCI6Ik5PTkUiLCJjdXJyZW5jeUNvZGUiOm51bGwsIm1pblZhbHVlIjowLjEsIm1heFZhbHVlIjowLjN9LHsiY29tcGVuc2F0aW9uVHlwZSI6IlNhbGFyeSIsImludGVydmFsIjoiMSBZRUFSIiwiY3VycmVuY3lDb2RlIjoiR0JQIiwibWluVmFsdWUiOjYwMDAwLCJtYXhWYWx1ZSI6OTUwMDB9XX19LHsiaWQiOiI5ZWZhMjkyYS1jYzM0LTQzODgtOTBhMi0yYmVkNTEyNmFjZTQiLCJ0aXRsZSI6IkZ1bGwgU3RhY2sgRW5naW5lZXIiLCJkZXBhcnRtZW50IjoiTGlnaHRkYXNoIiwidGVhbSI6IkxpZ2h0ZGFzaCIsImVtcGxveW1lbnRUeXBlIjoiRnVsbFRpbWUiLCJsb2NhdGlvbiI6IlJlbW90ZSIsInNob3VsZERpc3BsYXlDb21wZW5zYXRpb25PbkpvYlBvc3RpbmdzIjp0cnVlLCJzZWNvbmRhcnlMb2NhdGlvbnMiOltdLCJwdWJsaXNoZWRBdCI6IjIwMjQtMDItMjhUMTI6MDI6MzAuMDMxKzAwOjAwIiwiaXNMaXN0ZWQiOnRydWUsImlzUmVtb3RlIjp0cnVlLCJhZGRyZXNzIjp7InBvc3RhbEFkZHJlc3MiOnsiYWRkcmVzc0NvdW50cnkiOiJVbml0ZWQgS2luZ2RvbSJ9fSwiam9iVXJsIjoiaHR0cHM6Ly9qb2JzLmFzaGJ5aHEuY29tL2xpZ2h0ZGFzaC85ZWZhMjkyYS1jYzM0LTQzODgtOTBhMi0yYmVkNTEyNmFjZTQiLCJhcHBseVVybCI6Imh0dHBzOi8vam9icy5hc2hieWhxLmNvbS9saWdodGRhc2gvOWVmYTI5MmEtY2MzNC00Mzg4LTkwYTItMmJlZDUxMjZhY2U0L2FwcGxpY2F0aW9uIiwiZGVzY3JpcHRpb25IdG1sIjoiPHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+V2UncmUgbG9va2luZyBmb3IgYSBmdWxsLXN0YWNrIGVuZ2luZWVyIHRvIGpvaW4gb3VyIHNtYWxsIGFuZCBncm93aW5nIHRlYW0uPC9wPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPldlIHZhbHVlIHNtYWxsIGFuZCBoaWdoIHBlcmZvcm1pbmcgdGVhbXMgYW5kIGFyZSBsb29raW5nIGZvciBhIGZ1bGwtdGltZSBzb2Z0d2FyZSBlbmdpbmVlciB0byBqb2luIGFsb25nc2lkZSB0aGUgY3VycmVudCBjb3JlIHRlYW0uIFRoZSByZXNwb25zaWJpbGl0aWVzIHdpbGwgZ28gYmV5b25kIGp1c3QgdGhlIHRlY2huaWNhbCBzdGFjaywgYW5kIHlvdSdsbCBiZSBleHBlY3RlZCB0byBjb250cmlidXRlIHRvIHRoZSBjb21wYW55IHN0cmF0ZWd5IGFuZCB3aWxsIGhhdmUgYSBsb3Qgb2YgaW5mbHVlbmNlIG92ZXIgdGhlIHByb2R1Y3QgYW5kIGNvbXBhbnkgY3VsdHVyZSBnb2luZyBmb3J3YXJkLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PGgxPlNvbWUgdGhpbmdzIHdlJ3JlIGxvb2tpbmcgZm9yOjwvaDE+PHVsIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UgaGF2ZSBleHBlcmllbmNlIG9yIGludGVyZXN0IGluIGJ1aWxkaW5nIGludGVyYWN0aXZlIHByb2R1Y3RzIHRoYXQgdGVhbXMgbG92ZTogeW91J3JlIGV4Y2l0ZWQgYWJvdXQgYnVpbGRpbmcgdGhlIG1vc3QgdXNlci1mcmllbmRseSBwcm9kdWN0cyBmb3IgdGVhbXMgdG8gdGFrZSB0aGVpciByYXcgZGF0YSBhbmQgdHVybiBpdCBpbnRvIGluc2lnaHRzLjwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UgYXBwcmVjaWF0ZSBnb29kIGRlc2lnbiAoVUkvVVgpIGFuZCBhcmUgcGFzc2lvbmF0ZSBhYm91dCBidWlsZGluZyBwcm9kdWN0cyB0aGF0IHBlb3BsZSBsb3ZlIHRvIHVzZTwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UncmUgYSBmYW50YXN0aWMgY29tbXVuaWNhdG9yLCBlc3BlY2lhbGx5IGluIGEgcmVtb3RlIHRlYW0gYW5kIGFyZSBoYXBweSB0byBjb250aW51b3VzbHkgY2hhbGxlbmdlIGV4aXN0aW5nIGlkZWFzPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPllvdSBoYXZlIGV4cGVyaWVuY2Ugb3IgYW4gaW50ZXJlc3QgaW4gb3BlbiBzb3VyY2UgcHJvamVjdHM8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW91J3JlIHRob3VnaHRmdWwgYWJvdXQgY3JlYXRpbmcgYW5kIG1haW50YWluaW5nIGEgd29ybGQtY2xhc3MgZW5naW5lZXJpbmcgY3VsdHVyZTwvcD48L2xpPjwvdWw+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PC9wPjxoMT5XaGF0IHRoZSBqb2IgaW52b2x2ZXM6PC9oMT48dWwgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkJ1aWxkIGFuZCBvd24gZmVhdHVyZXMgZnJvbSBzdGFydCB0byBmaW5pc2g6IHBsYW4sIGJ1aWxkLCB0ZXN0LCBkZXBsb3ksIGl0ZXJhdGU8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+V29yayBpbiBhIHNtYWxsIGhpZ2ggcGVyZm9ybWluZyB0ZWFtIHdpdGggYSBsb3Qgb2YgY29sbGFib3JhdGlvbiBhbmQgZ2V0dGluZyBmZWVkYmFjayBkaXJlY3RseSBmcm9tIG91ciB1c2VycyE8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+SW50ZXJhY3Rpbmcgd2l0aCBvdXIgdXNlcnMgaW4gdGhlIGNvbW11bml0eSAodGhyb3VnaCBTbGFjaywgVHdpdHRlciBvciBHaXRodWIpIGFuZCByZXZpZXdpbmcgdGhlaXIgaXNzdWVzIGFuZCB1c2luZyB0aGUgZmVlZGJhY2sgdG8gcHJpb3JpdGlzZSBvdXIgd29yazwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5IYXZpbmcgYW4gb3duZXJzaGlwIG1pbmRzZXQ6IGJlaW5nIGNvbWZvcnRhYmxlIHdpdGggYm90aCByZXNwb25zaWJpbGl0eSBhbmQgYWNjb3VudGFiaWxpdHk8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW914oCZcmUgY29tZm9ydGFibGUgd29ya2luZyBpbiBhIG5ldywgc21hbGwgdGVhbSB0aGF0IGlzIHJhcGlkbHkgZ3Jvd2luZyDigJMgeW914oCZbGwgbmVlZCB0byBiZSBjb21mb3J0YWJsZSB3aGVuIGZhY2VkIHdpdGggYSBsb3Qgb2YgYW1iaWd1aXR5LCBib3RoIHRlY2huaWNhbGx5IGFuZCBvcmdhbml6YXRpb25hbGx5ITwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UncmUgYSBmYW50YXN0aWMgY29tbXVuaWNhdG9yLCBlc3BlY2lhbGx5IGluIGEgcmVtb3RlIHRlYW0gYW5kIGFyZSBoYXBweSB0byBjb250aW51b3VzbHkgY2hhbGxlbmdlIGV4aXN0aW5nIGlkZWFzPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPllvdSBmZWVsIGNvbmZpZGVudCBtYWtpbmcgdHJhZGUtb2ZmIGRlY2lzaW9ucyBiZXR3ZWVuIG1vdmluZyBxdWlja2x5IGFuZCBsYXVuY2hpbmcgZmVhdHVyZXMgdmVyc3VzIG9wdGltaXppbmcgZm9yIGVuZ2luZWVyaW5nIGV4Y2VsbGVuY2UuIFlvdeKAmXJlIGhhcHB5IHB1dHRpbmcgc29tZXRoaW5nIG91dCB3aGVuIGl04oCZcyDigJw4MCUgZG9uZS7igJ08L3A+PC9saT48L3VsPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxlbT5SZXNlYXJjaCBoYXMgc2hvd24gdGhhdCB3b21lbiBhcmUgbGVzcyBsaWtlbHkgdGhhbiBtZW4gdG8gYXBwbHkgZm9yIGEgcm9sZSBpZiB0aGV5IGRvbuKAmXQgaGF2ZSBleHBlcmllbmNlIGluIDEwMCUgb2YgdGhlIHJlcXVpcmVtZW50cyBvdXRsaW5lZCBpbiBhIGpvYiBkZXNjcmlwdGlvbi4gUGxlYXNlIGtub3cgdGhhdCBldmVuIGlmIHlvdSBkb27igJl0IGhhdmUgZXhwZXJpZW5jZSBpbiBhbGwgdGhlIGFyZWFzIGFib3ZlLCBidXQgdGhpbmsgeW91IGNvdWxkIGRvIGEgZ3JlYXQgam9iIGFuZCBhcmUgZXhjaXRlZCBhYm91dCBzaGFwaW5nIGNvbXBhbnkgY3VsdHVyZSwgZmluZGluZyBncmVhdCBwZW9wbGUgYW5kIGJ1aWxkaW5nIGdyZWF0IHRlYW1zLCB3ZeKAmWQgbG92ZSB0byBoZWFyIGZyb20geW91ITwvZW0+PC9wPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjwvcD48aDI+SG93IHdlIHdvcmsgYXQgTGlnaHRkYXNoPC9oMj48dWwgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+V2UgYnVpbGQgaW4gcHVibGljLCBieSBkZWZhdWx0Ljwvc3Ryb25nPiBXZeKAmXJlIGFuIG9wZW4gc291cmNlIHByb2R1Y3QsIHNvIGhhdmluZyBzaGFyZWQgY29udGV4dCBpcyBpbXBvcnRhbnQgc28gdGhhdCBwZW9wbGUgY2FuIGNvbnRyaWJ1dGUgZWZmZWN0aXZlbHkgdG8gTGlnaHRkYXNoLiBBcyBhIHRlYW0sIHdlIGFsc28gdGhpbmsgdGhhdCB3ZSBtYWtlIHRoZSA8ZW0+PHN0cm9uZz5iZXN0PC9zdHJvbmc+PC9lbT4gZGVjaXNpb25zIHdoZW4gZXZlcnlvbmUgaGFzIGEgbG90IG9mIHRoZSBzYW1lIGluZm9ybWF0aW9uLiBXZSBkb24ndCBvdmVyc2VsbCBhbmQgdW5kZXItZGVsaXZlcjogd2Ugd2FudCB0aGUgZXhwZXJpZW5jZSBvZiB1c2luZyBMaWdodGRhc2ggdG8gYmUgYXMgYXdlc29tZSBhcyB0aGUgZXhwZXJpZW5jZSB3ZSdyZSBzZWxsaW5nLjwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPldlIGNoYWxsZW5nZSBwcm9ibGVtcywgbm90IHBlb3BsZS48L3N0cm9uZz4gV2UgYXNrIG91cnNlbHZlcyDigJw8ZW0+PHN0cm9uZz53aHk8L3N0cm9uZz48L2VtPiBpcyB0aGlzIGJyb2tlbj/igJ0gbm90IOKAnDxlbT48c3Ryb25nPndobzwvc3Ryb25nPjwvZW0+IGlzIGJyZWFraW5nIHRoaXM/4oCdPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+V2XigJlyZSBoaWdobHkgY29sbGFib3JhdGl2ZS48L3N0cm9uZz4gV2XigJlyZSBhIGdyb3VwIG9mIHBlb3BsZSB0aGF0IGFyZSBoYXBweSB3b3JraW5nIGluZGVwZW5kZW50bHksIGJ1dCBsb3ZlIGJlaW5nIHBhcnQgb2YgYSB0ZWFtLiAqKioqV2Ugbm90IG9ubHkgd29yayBvbiBwcm9ibGVtcyBhcyBhIHRlYW0sIGJ1dCB3ZSBhbHNvIGxpc3RlbiB0byB0aGUgZmVlZGJhY2sgZnJvbSBvdXIgY29tbXVuaXR5IGFuZCBvdXIgdXNlcnMuIFdlIGludmVzdCBpbiB0b29scyBhbmQgcHJvY2Vzc2VzIHRoYXQgYWxsb3cgdXMgdG8gZG8gdGhpcywgZXZlbiB3aGlsZSBmdWxseSByZW1vdGUuPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+V2UgYmlhcyB0b3dhcmRzIGltcGFjdC48L3N0cm9uZz4gV2XigJlkIHJhdGhlciBidWlsZCBzb21ldGhpbmcgdG8gODAlIGFuZCBnZXQgaXQgaW4gZnJvbnQgb2YgdXNlcnMgc28gd2UgY2FuIGl0ZXJhdGUgb24gZmFzdCBmZWVkYmFjayB0aGFuIGJ1aWxkIHNvbWV0aGluZyB0byAxMDAlIGp1c3QgdG8gZmluZCBvdXQgaXTigJlzIG5vdCB0aGUgcmlnaHQgdGhpbmcuIFdlIHNwZW5kIGEgbG90IG9mIHRpbWUgdGhpbmtpbmcgYWJvdXQgaG93IG91ciB3b3JrIHNvbHZlcyByZWFsIHVzZXIgcHJvYmxlbXMuIFdlIHdvcmsgb24gdGhlIGhpZ2hlc3QgaW1wYWN0IHByb2JsZW1zIGV2ZW4gaWYgdGhleeKAmXJlIHNvbWV0aGluZyBhIGJpdCDigJxvdXQgb2YgeW91ciByZW1pdOKAnS48L3A+PC9saT48L3VsPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjwvcD48aDE+T3VyIHRlY2ggc3RhY2s6PC9oMT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5XaGlsZSB3ZSBkb24ndCBleHBlY3QgeW91IHRvIGhhdmUgdXNlZCBhbGwgdGhlIGNvbXBvbmVudHMgb2Ygb3VyIHN0YWNrLCBpdCdkIGJlIGdyZWF0IHRvIGtub3cgd2hpY2ggcGFydHMgb2YgaXQgeW91J3JlIGZhbWlsaWFyIHdpdGg6PC9wPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+UHJpbWFyeSBzdGFjazogVHlwZXNjcmlwdCwgUmVhY3QsIE5vZGUsIFNRTDwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5GcmFtZXdvcmtzOiBleHByZXNzLCByZWFjdC1ob29rczwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5JbmZyYXN0cnVjdHVyZTogRG9ja2VyLCBHQ1A8L3A+PC9saT48L3VsPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+8J+SnMKgV2UgYmVsaWV2ZSB0aGF0IHRvIGJ1aWxkIGEgcHJvZHVjdCB0aGF0IHdvcmtzIGZvciBhIGRpdmVyc2UgZ3JvdXAgb2YgcGVvcGxlLCB3ZSBuZWVkIGEgZGl2ZXJzZSB0ZWFtLiBTbywgd2Ugc3Ryb25nbHkgZW5jb3VyYWdlIGNhbmRpZGF0ZXMgb2YgYWxsIGRpZmZlcmVudCBwZXJzcGVjdGl2ZXMsIGV4cGVyaWVuY2VzLCBiYWNrZ3JvdW5kcyBhbmQgaWRlbnRpdGllcyB0byBhcHBseS4gV2XigJlyZSBjb21taXR0ZWQgdG8gaGlyaW5nIHBlb3BsZSByZWdhcmRsZXNzIG9mIHJhY2UsIHJlbGlnaW9uLCBjb2xvdXIsIG5hdGlvbmFsIG9yaWdpbiwgc2V4LCBzZXh1YWwgb3JpZW50YXRpb24sIGdlbmRlciBpZGVudGl0eSwgYWdlIG9yIGRpc2FiaWxpdHkuIEFuZCBvbmNlIHlvdSBqb2luIHVzLCB3ZeKAmXJlIGNvbW1pdHRlZCB0byBidWlsZGluZyBhbiBpbmNsdXNpdmUsIHN1cHBvcnRpdmUgcGxhY2UgZm9yIHlvdSB0byBkbyB0aGUgYmVzdCB3b3JrIG9mIHlvdXIgY2FyZWVyLjwvcD4iLCJkZXNjcmlwdGlvblBsYWluIjoiV2UncmUgbG9va2luZyBmb3IgYSBmdWxsLXN0YWNrIGVuZ2luZWVyIHRvIGpvaW4gb3VyIHNtYWxsIGFuZCBncm93aW5nIHRlYW0uXG5cbldlIHZhbHVlIHNtYWxsIGFuZCBoaWdoIHBlcmZvcm1pbmcgdGVhbXMgYW5kIGFyZSBsb29raW5nIGZvciBhIGZ1bGwtdGltZSBzb2Z0d2FyZSBlbmdpbmVlciB0byBqb2luIGFsb25nc2lkZSB0aGUgY3VycmVudCBjb3JlIHRlYW0uIFRoZSByZXNwb25zaWJpbGl0aWVzIHdpbGwgZ28gYmV5b25kIGp1c3QgdGhlIHRlY2huaWNhbCBzdGFjaywgYW5kIHlvdSdsbCBiZSBleHBlY3RlZCB0byBjb250cmlidXRlIHRvIHRoZSBjb21wYW55IHN0cmF0ZWd5IGFuZCB3aWxsIGhhdmUgYSBsb3Qgb2YgaW5mbHVlbmNlIG92ZXIgdGhlIHByb2R1Y3QgYW5kIGNvbXBhbnkgY3VsdHVyZSBnb2luZyBmb3J3YXJkLlxuXG5cblNPTUUgVEhJTkdTIFdFJ1JFIExPT0tJTkcgRk9SOlxuXG4gLSBZb3UgaGF2ZSBleHBlcmllbmNlIG9yIGludGVyZXN0IGluIGJ1aWxkaW5nIGludGVyYWN0aXZlIHByb2R1Y3RzIHRoYXQgdGVhbXMgbG92ZTogeW91J3JlIGV4Y2l0ZWQgYWJvdXQgYnVpbGRpbmcgdGhlIG1vc3QgdXNlci1mcmllbmRseSBwcm9kdWN0cyBmb3IgdGVhbXMgdG8gdGFrZSB0aGVpciByYXcgZGF0YSBhbmQgdHVybiBpdCBpbnRvIGluc2lnaHRzLlxuXG4gLSBZb3UgYXBwcmVjaWF0ZSBnb29kIGRlc2lnbiAoVUkvVVgpIGFuZCBhcmUgcGFzc2lvbmF0ZSBhYm91dCBidWlsZGluZyBwcm9kdWN0cyB0aGF0IHBlb3BsZSBsb3ZlIHRvIHVzZVxuXG4gLSBZb3UncmUgYSBmYW50YXN0aWMgY29tbXVuaWNhdG9yLCBlc3BlY2lhbGx5IGluIGEgcmVtb3RlIHRlYW0gYW5kIGFyZSBoYXBweSB0byBjb250aW51b3VzbHkgY2hhbGxlbmdlIGV4aXN0aW5nIGlkZWFzXG5cbiAtIFlvdSBoYXZlIGV4cGVyaWVuY2Ugb3IgYW4gaW50ZXJlc3QgaW4gb3BlbiBzb3VyY2UgcHJvamVjdHNcblxuIC0gWW91J3JlIHRob3VnaHRmdWwgYWJvdXQgY3JlYXRpbmcgYW5kIG1haW50YWluaW5nIGEgd29ybGQtY2xhc3MgZW5naW5lZXJpbmcgY3VsdHVyZVxuXG5cbldIQVQgVEhFIEpPQiBJTlZPTFZFUzpcblxuIC0gQnVpbGQgYW5kIG93biBmZWF0dXJlcyBmcm9tIHN0YXJ0IHRvIGZpbmlzaDogcGxhbiwgYnVpbGQsIHRlc3QsIGRlcGxveSwgaXRlcmF0ZVxuXG4gLSBXb3JrIGluIGEgc21hbGwgaGlnaCBwZXJmb3JtaW5nIHRlYW0gd2l0aCBhIGxvdCBvZiBjb2xsYWJvcmF0aW9uIGFuZCBnZXR0aW5nIGZlZWRiYWNrIGRpcmVjdGx5IGZyb20gb3VyIHVzZXJzIVxuXG4gLSBJbnRlcmFjdGluZyB3aXRoIG91ciB1c2VycyBpbiB0aGUgY29tbXVuaXR5ICh0aHJvdWdoIFNsYWNrLCBUd2l0dGVyIG9yIEdpdGh1YikgYW5kIHJldmlld2luZyB0aGVpciBpc3N1ZXMgYW5kIHVzaW5nIHRoZSBmZWVkYmFjayB0byBwcmlvcml0aXNlIG91ciB3b3JrXG5cbiAtIEhhdmluZyBhbiBvd25lcnNoaXAgbWluZHNldDogYmVpbmcgY29tZm9ydGFibGUgd2l0aCBib3RoIHJlc3BvbnNpYmlsaXR5IGFuZCBhY2NvdW50YWJpbGl0eVxuXG4gLSBZb3XigJlyZSBjb21mb3J0YWJsZSB3b3JraW5nIGluIGEgbmV3LCBzbWFsbCB0ZWFtIHRoYXQgaXMgcmFwaWRseSBncm93aW5nIOKAkyB5b3XigJlsbCBuZWVkIHRvIGJlIGNvbWZvcnRhYmxlIHdoZW4gZmFjZWQgd2l0aCBhIGxvdCBvZiBhbWJpZ3VpdHksIGJvdGggdGVjaG5pY2FsbHkgYW5kIG9yZ2FuaXphdGlvbmFsbHkhXG5cbiAtIFlvdSdyZSBhIGZhbnRhc3RpYyBjb21tdW5pY2F0b3IsIGVzcGVjaWFsbHkgaW4gYSByZW1vdGUgdGVhbSBhbmQgYXJlIGhhcHB5IHRvIGNvbnRpbnVvdXNseSBjaGFsbGVuZ2UgZXhpc3RpbmcgaWRlYXNcblxuIC0gWW91IGZlZWwgY29uZmlkZW50IG1ha2luZyB0cmFkZS1vZmYgZGVjaXNpb25zIGJldHdlZW4gbW92aW5nIHF1aWNrbHkgYW5kIGxhdW5jaGluZyBmZWF0dXJlcyB2ZXJzdXMgb3B0aW1pemluZyBmb3IgZW5naW5lZXJpbmcgZXhjZWxsZW5jZS4gWW914oCZcmUgaGFwcHkgcHV0dGluZyBzb21ldGhpbmcgb3V0IHdoZW4gaXTigJlzIOKAnDgwJSBkb25lLuKAnVxuXG5SZXNlYXJjaCBoYXMgc2hvd24gdGhhdCB3b21lbiBhcmUgbGVzcyBsaWtlbHkgdGhhbiBtZW4gdG8gYXBwbHkgZm9yIGEgcm9sZSBpZiB0aGV5IGRvbuKAmXQgaGF2ZSBleHBlcmllbmNlIGluIDEwMCUgb2YgdGhlIHJlcXVpcmVtZW50cyBvdXRsaW5lZCBpbiBhIGpvYiBkZXNjcmlwdGlvbi4gUGxlYXNlIGtub3cgdGhhdCBldmVuIGlmIHlvdSBkb27igJl0IGhhdmUgZXhwZXJpZW5jZSBpbiBhbGwgdGhlIGFyZWFzIGFib3ZlLCBidXQgdGhpbmsgeW91IGNvdWxkIGRvIGEgZ3JlYXQgam9iIGFuZCBhcmUgZXhjaXRlZCBhYm91dCBzaGFwaW5nIGNvbXBhbnkgY3VsdHVyZSwgZmluZGluZyBncmVhdCBwZW9wbGUgYW5kIGJ1aWxkaW5nIGdyZWF0IHRlYW1zLCB3ZeKAmWQgbG92ZSB0byBoZWFyIGZyb20geW91IVxuXG5cbkhPVyBXRSBXT1JLIEFUIExJR0hUREFTSFxuXG4gLSBXZSBidWlsZCBpbiBwdWJsaWMsIGJ5IGRlZmF1bHQuIFdl4oCZcmUgYW4gb3BlbiBzb3VyY2UgcHJvZHVjdCwgc28gaGF2aW5nIHNoYXJlZCBjb250ZXh0IGlzIGltcG9ydGFudCBzbyB0aGF0IHBlb3BsZSBjYW4gY29udHJpYnV0ZSBlZmZlY3RpdmVseSB0byBMaWdodGRhc2guIEFzIGEgdGVhbSwgd2UgYWxzbyB0aGluayB0aGF0IHdlIG1ha2UgdGhlIGJlc3QgZGVjaXNpb25zIHdoZW4gZXZlcnlvbmUgaGFzIGEgbG90IG9mIHRoZSBzYW1lIGluZm9ybWF0aW9uLiBXZSBkb24ndCBvdmVyc2VsbCBhbmQgdW5kZXItZGVsaXZlcjogd2Ugd2FudCB0aGUgZXhwZXJpZW5jZSBvZiB1c2luZyBMaWdodGRhc2ggdG8gYmUgYXMgYXdlc29tZSBhcyB0aGUgZXhwZXJpZW5jZSB3ZSdyZSBzZWxsaW5nLlxuXG4gLSBXZSBjaGFsbGVuZ2UgcHJvYmxlbXMsIG5vdCBwZW9wbGUuIFdlIGFzayBvdXJzZWx2ZXMg4oCcd2h5IGlzIHRoaXMgYnJva2VuP+KAnSBub3Qg4oCcd2hvIGlzIGJyZWFraW5nIHRoaXM/4oCdXG5cbiAtIFdl4oCZcmUgaGlnaGx5IGNvbGxhYm9yYXRpdmUuIFdl4oCZcmUgYSBncm91cCBvZiBwZW9wbGUgdGhhdCBhcmUgaGFwcHkgd29ya2luZyBpbmRlcGVuZGVudGx5LCBidXQgbG92ZSBiZWluZyBwYXJ0IG9mIGEgdGVhbS4gKioqKldlIG5vdCBvbmx5IHdvcmsgb24gcHJvYmxlbXMgYXMgYSB0ZWFtLCBidXQgd2UgYWxzbyBsaXN0ZW4gdG8gdGhlIGZlZWRiYWNrIGZyb20gb3VyIGNvbW11bml0eSBhbmQgb3VyIHVzZXJzLiBXZSBpbnZlc3QgaW4gdG9vbHMgYW5kIHByb2Nlc3NlcyB0aGF0IGFsbG93IHVzIHRvIGRvIHRoaXMsIGV2ZW4gd2hpbGUgZnVsbHkgcmVtb3RlLlxuXG4gLSBXZSBiaWFzIHRvd2FyZHMgaW1wYWN0LiBXZeKAmWQgcmF0aGVyIGJ1aWxkIHNvbWV0aGluZyB0byA4MCUgYW5kIGdldCBpdCBpbiBmcm9udCBvZiB1c2VycyBzbyB3ZSBjYW4gaXRlcmF0ZSBvbiBmYXN0IGZlZWRiYWNrIHRoYW4gYnVpbGQgc29tZXRoaW5nIHRvIDEwMCUganVzdCB0byBmaW5kIG91dCBpdOKAmXMgbm90IHRoZSByaWdodCB0aGluZy4gV2Ugc3BlbmQgYSBsb3Qgb2YgdGltZSB0aGlua2luZyBhYm91dCBob3cgb3VyIHdvcmsgc29sdmVzIHJlYWwgdXNlciBwcm9ibGVtcy4gV2Ugd29yayBvbiB0aGUgaGlnaGVzdCBpbXBhY3QgcHJvYmxlbXMgZXZlbiBpZiB0aGV54oCZcmUgc29tZXRoaW5nIGEgYml0IOKAnG91dCBvZiB5b3VyIHJlbWl04oCdLlxuXG5cbk9VUiBURUNIIFNUQUNLOlxuXG5XaGlsZSB3ZSBkb24ndCBleHBlY3QgeW91IHRvIGhhdmUgdXNlZCBhbGwgdGhlIGNvbXBvbmVudHMgb2Ygb3VyIHN0YWNrLCBpdCdkIGJlIGdyZWF0IHRvIGtub3cgd2hpY2ggcGFydHMgb2YgaXQgeW91J3JlIGZhbWlsaWFyIHdpdGg6XG5cbiAtIFByaW1hcnkgc3RhY2s6IFR5cGVzY3JpcHQsIFJlYWN0LCBOb2RlLCBTUUxcblxuIC0gRnJhbWV3b3JrczogZXhwcmVzcywgcmVhY3QtaG9va3NcblxuIC0gSW5mcmFzdHJ1Y3R1cmU6IERvY2tlciwgR0NQXG5cbvCfkpzCoFdlIGJlbGlldmUgdGhhdCB0byBidWlsZCBhIHByb2R1Y3QgdGhhdCB3b3JrcyBmb3IgYSBkaXZlcnNlIGdyb3VwIG9mIHBlb3BsZSwgd2UgbmVlZCBhIGRpdmVyc2UgdGVhbS4gU28sIHdlIHN0cm9uZ2x5IGVuY291cmFnZSBjYW5kaWRhdGVzIG9mIGFsbCBkaWZmZXJlbnQgcGVyc3BlY3RpdmVzLCBleHBlcmllbmNlcywgYmFja2dyb3VuZHMgYW5kIGlkZW50aXRpZXMgdG8gYXBwbHkuIFdl4oCZcmUgY29tbWl0dGVkIHRvIGhpcmluZyBwZW9wbGUgcmVnYXJkbGVzcyBvZiByYWNlLCByZWxpZ2lvbiwgY29sb3VyLCBuYXRpb25hbCBvcmlnaW4sIHNleCwgc2V4dWFsIG9yaWVudGF0aW9uLCBnZW5kZXIgaWRlbnRpdHksIGFnZSBvciBkaXNhYmlsaXR5LiBBbmQgb25jZSB5b3Ugam9pbiB1cywgd2XigJlyZSBjb21taXR0ZWQgdG8gYnVpbGRpbmcgYW4gaW5jbHVzaXZlLCBzdXBwb3J0aXZlIHBsYWNlIGZvciB5b3UgdG8gZG8gdGhlIGJlc3Qgd29yayBvZiB5b3VyIGNhcmVlci4iLCJjb21wZW5zYXRpb24iOnsiY29tcGVuc2F0aW9uVGllclN1bW1hcnkiOiLCozYwSyDigJMgwqMxMTBLIOKAoiAwLjElIOKAkyAwLjMlIiwic2NyYXBlYWJsZUNvbXBlbnNhdGlvblNhbGFyeVN1bW1hcnkiOiLCozYwSyAtIMKjMTEwSyIsImNvbXBlbnNhdGlvblRpZXJzIjpbeyJpZCI6IjE1NjUxNzUxLWZhNTMtNDAyOS1hOGI5LTI3NzMzMmQ4YTIyNCIsInRpZXJTdW1tYXJ5IjoiwqM2MEsg4oCTIMKjMTEwSyDigKIgMC4xJSDigJMgMC4zJSIsInRpdGxlIjpudWxsLCJhZGRpdGlvbmFsSW5mb3JtYXRpb24iOm51bGwsImNvbXBvbmVudHMiOlt7ImlkIjoiNmQ0Y2Q5OWEtNzM4Zi00YzNjLWJhNzEtMTVmMTFjZjkxZDI0Iiwic3VtbWFyeSI6IsKjNjBLIOKAkyDCozExMEsiLCJjb21wZW5zYXRpb25UeXBlIjoiU2FsYXJ5IiwiaW50ZXJ2YWwiOiIxIFlFQVIiLCJjdXJyZW5jeUNvZGUiOiJHQlAiLCJtaW5WYWx1ZSI6NjAwMDAsIm1heFZhbHVlIjoxMTAwMDB9LHsiaWQiOiIwOGZhMGRmZC05NDBiLTQ4ZTMtOTE0OS1hZmUzMmZhNDIyYjEiLCJzdW1tYXJ5IjoiMC4xJSDigJMgMC4zJSIsImNvbXBlbnNhdGlvblR5cGUiOiJFcXVpdHlQZXJjZW50YWdlIiwiaW50ZXJ2YWwiOiJOT05FIiwiY3VycmVuY3lDb2RlIjpudWxsLCJtaW5WYWx1ZSI6MC4xLCJtYXhWYWx1ZSI6MC4zfV19XSwic3VtbWFyeUNvbXBvbmVudHMiOlt7ImNvbXBlbnNhdGlvblR5cGUiOiJTYWxhcnkiLCJpbnRlcnZhbCI6IjEgWUVBUiIsImN1cnJlbmN5Q29kZSI6IkdCUCIsIm1pblZhbHVlIjo2MDAwMCwibWF4VmFsdWUiOjExMDAwMH0seyJjb21wZW5zYXRpb25UeXBlIjoiRXF1aXR5UGVyY2VudGFnZSIsImludGVydmFsIjoiTk9ORSIsImN1cnJlbmN5Q29kZSI6bnVsbCwibWluVmFsdWUiOjAuMSwibWF4VmFsdWUiOjAuM31dfX1dLCJhcGlWZXJzaW9uIjoiMSJ9
  recorded_at: Thu, 08 Aug 2024 10:42:36 GMT
- request:
    method: post
    uri: https://jobs.ashbyhq.com/api/non-user-graphql?op=ApiOrganizationFromHostedJobsPageName
    body:
      encoding: UTF-8
      string: '{"query":"query ApiOrganizationFromHostedJobsPageName($organizationHostedJobsPageName:
        String!) {  organization: organizationFromHostedJobsPageName(    organizationHostedJobsPageName:
        $organizationHostedJobsPageName  ) {    ...OrganizationParts    __typename  }}fragment
        OrganizationParts on Organization {  name  publicWebsite  customJobsPageUrl  hostedJobsPageSlug  allowJobPostIndexing  theme
        {    colors    showJobFilters    showTeams    showAutofillApplicationsBox    logoWordmarkImageUrl    logoSquareImageUrl    applicationSubmittedSuccessMessage    jobBoardTopDescriptionHtml    jobBoardBottomDescriptionHtml    __typename  }  appConfirmationTrackingPixelHtml  recruitingPrivacyPolicyUrl  activeFeatureFlags  timezone  __typename
        }","variables":{"organizationHostedJobsPageName":"lightdash"}}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:42:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01J4RSAPDM4SDZ8E2HE02F6A6D
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Cache-Control:
      - no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 8afee695880c63f4-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"organization":{"name":"Lightdash","publicWebsite":"https://www.lightdash.com/","customJobsPageUrl":null,"hostedJobsPageSlug":"Lightdash","allowJobPostIndexing":true,"appConfirmationTrackingPixelHtml":null,"recruitingPrivacyPolicyUrl":null,"activeFeatureFlags":["AnonymousCandidateExperience","JobPostingApplicationDeadlines","SchedulingNewDirectBookingReschedule","SourcingFormAutoFill","UnsubscribeLinks","VirusScanFiles","VirusScanShowResults"],"timezone":"Europe/London","__typename":"Organization","theme":{"colors":{"version":"1","colorPrimary600":"#7262FF","colorPrimary900":"#7262FF"},"showJobFilters":false,"showTeams":false,"showAutofillApplicationsBox":true,"applicationSubmittedSuccessMessage":null,"__typename":"Theme","logoWordmarkImageUrl":"https://app.ashbyhq.com/api/images/org-theme-wordmark/118a5d75-b907-4616-ade7-b67eaa6b5c16/314e7c4e-d0d9-494f-b7cd-7d008d80f41e.png","logoSquareImageUrl":"https://app.ashbyhq.com/api/images/org-theme-logo/118a5d75-b907-4616-ade7-b67eaa6b5c16/0e2997f7-6255-4c9e-9ea4-0199b51c80ef.png","jobBoardTopDescriptionHtml":null,"jobBoardBottomDescriptionHtml":null}}}}'
  recorded_at: Thu, 08 Aug 2024 10:42:37 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.lightdash.com/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 08 Aug 2024 10:42:37 GMT
      Etag:
      - W/"1723113757792"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '14'
      Content-Length:
      - '498'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"301bce04-1610-4369-a9db-29de9623e65f","properties":{"name":"Lightdash","identifier":{"permalink":"hubble-e65f","image_id":"1c3c7ecd819e45879f8987babbbf2fea","uuid":"301bce04-1610-4369-a9db-29de9623e65f","entity_def_id":"organization","value":"Lightdash"},"linkedin":{"value":"https://www.linkedin.com/company/lightdash"},"short_description":"Lightdash
        turns a dbt project into a full-stack BI platform.","rank_org":81759,"website_url":"https://www.lightdash.com"}}]}'
  recorded_at: Thu, 08 Aug 2024 10:42:37 GMT
- request:
    method: get
    uri: https://api.ashbyhq.com/posting-api/job-board/lightdash?includeCompensation=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:42:38 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01J4RSAQCCA1WVNW7SEB6TSBH9
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 8afee69baff56404-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:42:38 GMT
- request:
    method: post
    uri: https://jobs.ashbyhq.com/api/non-user-graphql
    body:
      encoding: UTF-8
      string: '{"query":"query ApiJobPosting($organizationHostedJobsPageName: String!,
        $jobPostingId: String!) {  jobPosting(    organizationHostedJobsPageName:
        $organizationHostedJobsPageName    jobPostingId: $jobPostingId  ) {    applicationForm
        {      ...FormRenderParts      __typename    }    surveyForms {      ...FormRenderParts      __typename    }    applicationDeadline    applicationLimitCalloutHtml    __typename  }}fragment
        JSONBoxParts on JSONBox {  value  __typename}fragment FileParts on File {  id  filename  __typename}fragment
        FormFieldEntryParts on FormFieldEntry {  id  field  fieldValue {    ... on
        JSONBox {      ...JSONBoxParts      __typename    }    ... on File {      ...FileParts      __typename    }    ...
        on FileList {      files {        ...FileParts        __typename      }      __typename    }    __typename  }  isRequired  descriptionHtml  isHidden  __typename}fragment
        FormRenderParts on FormRender {  id  formControls {    identifier    title    __typename  }  errorMessages  sections
        {    title    descriptionHtml    fieldEntries {      ...FormFieldEntryParts      __typename    }    isHidden    __typename  }  sourceFormDefinitionId  __typename}","variables":{"jobPostingId":"309706bc-1081-48b6-89dc-f769bbe17e6d","organizationHostedJobsPageName":"lightdash"}}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:42:38 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01J4RSAQQW1BEPAS3KWBJQ2HC6
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Cache-Control:
      - no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 8afee69d68796388-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjp7ImpvYlBvc3RpbmciOnsiYXBwbGljYXRpb25Gb3JtIjp7ImlkIjoiNmQ1MGI4ZjMtMjliMi00MjE4LWEzYzQtZGIxMjdiZmFmZTI4IiwiZm9ybUNvbnRyb2xzIjpbeyJpZGVudGlmaWVyIjoiZmI2OGQzNDMtNGY1NS00NDMyLWJjNWItZmQ2N2Y5YWFlMDk0IiwidGl0bGUiOiJTdWJtaXQiLCJfX3R5cGVuYW1lIjoiRm9ybUNvbnRyb2wifV0sImVycm9yTWVzc2FnZXMiOltdLCJzZWN0aW9ucyI6W3sidGl0bGUiOm51bGwsImRlc2NyaXB0aW9uSHRtbCI6bnVsbCwiZmllbGRFbnRyaWVzIjpbeyJpZCI6IjZkNTBiOGYzLTI5YjItNDIxOC1hM2M0LWRiMTI3YmZhZmUyOF9fc3lzdGVtZmllbGRfbmFtZSIsImZpZWxkIjp7ImlkIjoiZjAwMTM5NDctOTlhYS00ZTY2LTg4YWEtMGE1N2YyZDNmZGFkIiwicGF0aCI6Il9zeXN0ZW1maWVsZF9uYW1lIiwiaHVtYW5SZWFkYWJsZVBhdGgiOiJOYW1lIiwidGl0bGUiOiJOYW1lIiwiaXNOdWxsYWJsZSI6ZmFsc2UsImlzUHJpdmF0ZSI6ZmFsc2UsImlzRGVhY3RpdmF0ZWQiOmZhbHNlLCJpc01hbnkiOmZhbHNlLCJtZXRhZGF0YSI6e30sInR5cGUiOiJTdHJpbmciLCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJTdHJpbmdGaWVsZCJ9LCJmaWVsZFZhbHVlIjpudWxsLCJpc1JlcXVpcmVkIjp0cnVlLCJkZXNjcmlwdGlvbkh0bWwiOiI8cD5GaXJzdCBhbmQgbGFzdCBuYW1lIHBsZWFzZSE8L3A+IiwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9LHsiaWQiOiI2ZDUwYjhmMy0yOWIyLTQyMTgtYTNjNC1kYjEyN2JmYWZlMjhfX3N5c3RlbWZpZWxkX2VtYWlsIiwiZmllbGQiOnsiaWQiOiIyMzE5MDUyZC04NDczLTRhMDMtYTBhYi03ZjRhMjc5NTI4NjMiLCJwYXRoIjoiX3N5c3RlbWZpZWxkX2VtYWlsIiwiaHVtYW5SZWFkYWJsZVBhdGgiOiJFbWFpbCIsInRpdGxlIjoiRW1haWwiLCJpc051bGxhYmxlIjpmYWxzZSwiaXNQcml2YXRlIjpmYWxzZSwiaXNEZWFjdGl2YXRlZCI6ZmFsc2UsImlzTWFueSI6ZmFsc2UsIm1ldGFkYXRhIjp7fSwidHlwZSI6IkVtYWlsIiwiX19hdXRvU2VyaWFsaXphdGlvbklEIjoiRW1haWxGaWVsZCJ9LCJmaWVsZFZhbHVlIjpudWxsLCJpc1JlcXVpcmVkIjp0cnVlLCJkZXNjcmlwdGlvbkh0bWwiOm51bGwsImlzSGlkZGVuIjpudWxsLCJfX3R5cGVuYW1lIjoiRm9ybUZpZWxkRW50cnkifSx7ImlkIjoiNmQ1MGI4ZjMtMjliMi00MjE4LWEzYzQtZGIxMjdiZmFmZTI4XzAwNDE1NzE0LTc1ZjMtNDliOS1iODU2LWFjNjc0ZmQ1Y2U4YiIsImZpZWxkIjp7ImlkIjoiNTI4ZjAwZGItYTI1Ni00ZDY2LWJjZjYtZDE2YTA0NzkzN2IxIiwicGF0aCI6IjAwNDE1NzE0LTc1ZjMtNDliOS1iODU2LWFjNjc0ZmQ1Y2U4YiIsImh1bWFuUmVhZGFibGVQYXRoIjoiIiwidGl0bGUiOiJXaGVyZSBhcmUgeW91IGJhc2VkIG9yIHdoZXJlIHdvdWxkIHlvdSBiZSBwbGFubmluZyBvbiB3b3JraW5nIGZyb20/IiwiaXNOdWxsYWJsZSI6ZmFsc2UsImlzUHJpdmF0ZSI6ZmFsc2UsImlzRGVhY3RpdmF0ZWQiOmZhbHNlLCJpc01hbnkiOmZhbHNlLCJtZXRhZGF0YSI6e30sInR5cGUiOiJMb2NhdGlvbiIsImxvY2F0aW9uVHlwZXMiOlsiQ2l0eSJdLCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJMb2NhdGlvbkZpZWxkIn0sImZpZWxkVmFsdWUiOm51bGwsImlzUmVxdWlyZWQiOnRydWUsImRlc2NyaXB0aW9uSHRtbCI6bnVsbCwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9LHsiaWQiOiI2ZDUwYjhmMy0yOWIyLTQyMTgtYTNjNC1kYjEyN2JmYWZlMjhfMzY5MTNiMWYtYzM0Zi00NjkzLTkxOWMtNDAwMzA0YTJhMTFkIiwiZmllbGQiOnsiaWQiOiI2MjQ4ZjRlOC1jY2I1LTQ1YWEtOWVmNy1iMzhkZThkYTE2ZWIiLCJwYXRoIjoiMzY5MTNiMWYtYzM0Zi00NjkzLTkxOWMtNDAwMzA0YTJhMTFkIiwiaHVtYW5SZWFkYWJsZVBhdGgiOiIiLCJ0aXRsZSI6IkNhbiB3ZSBnZXQgYSBsaW5rIHRvIHlvdXIgTGlua2VkaW4gcHJvZmlsZT/CoCIsImlzTnVsbGFibGUiOmZhbHNlLCJpc1ByaXZhdGUiOmZhbHNlLCJpc0RlYWN0aXZhdGVkIjpmYWxzZSwiaXNNYW55IjpmYWxzZSwibWV0YWRhdGEiOnt9LCJ0eXBlIjoiU3RyaW5nIiwiX19hdXRvU2VyaWFsaXphdGlvbklEIjoiU3RyaW5nRmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6dHJ1ZSwiZGVzY3JpcHRpb25IdG1sIjpudWxsLCJpc0hpZGRlbiI6bnVsbCwiX190eXBlbmFtZSI6IkZvcm1GaWVsZEVudHJ5In0seyJpZCI6IjZkNTBiOGYzLTI5YjItNDIxOC1hM2M0LWRiMTI3YmZhZmUyOF9mOTNiZmY4Yy0yNDQyLTQyYjctYjA0MC0zODc2ZmExNjBhYmEiLCJmaWVsZCI6eyJpZCI6ImE3NjJkYjZmLWNiYTktNGFmMS1iOWVjLWQ5ZDUwYzFiNmQ3YiIsInBhdGgiOiJmOTNiZmY4Yy0yNDQyLTQyYjctYjA0MC0zODc2ZmExNjBhYmEiLCJodW1hblJlYWRhYmxlUGF0aCI6IiIsInRpdGxlIjoiQ2FuIHlvdSB0ZWxsIHVzIHdoYXQgYXR0cmFjdGVkIHlvdSB0byBhcHBseSB0byBMaWdodGRhc2g/IiwiaXNOdWxsYWJsZSI6ZmFsc2UsImlzUHJpdmF0ZSI6ZmFsc2UsImlzRGVhY3RpdmF0ZWQiOmZhbHNlLCJpc01hbnkiOmZhbHNlLCJtZXRhZGF0YSI6e30sInR5cGUiOiJMb25nVGV4dCIsIl9fYXV0b1NlcmlhbGl6YXRpb25JRCI6IkxvbmdUZXh0RmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6dHJ1ZSwiZGVzY3JpcHRpb25IdG1sIjoiPHA+V2UgZG9uJ3QgbmVlZCBhIHdob2xlIGNvdmVyIGxldHRlciwgYSBjb3VwbGUgb2Ygc2VudGVuY2VzIHdpbGwgZG8hPC9wPiIsImlzSGlkZGVuIjpudWxsLCJfX3R5cGVuYW1lIjoiRm9ybUZpZWxkRW50cnkifSx7ImlkIjoiNmQ1MGI4ZjMtMjliMi00MjE4LWEzYzQtZGIxMjdiZmFmZTI4X19zeXN0ZW1maWVsZF9yZXN1bWUiLCJmaWVsZCI6eyJpZCI6Ijg2MDFkZDllLWNjNTUtNGRhNS1hNThmLTg2Mzc4MzEwZjllMiIsInBhdGgiOiJfc3lzdGVtZmllbGRfcmVzdW1lIiwiaHVtYW5SZWFkYWJsZVBhdGgiOiJSZXN1bWUiLCJ0aXRsZSI6IkRvIHlvdSBoYXZlIGEgcmVzdW1lIG9yIENWIHlvdSBjYW4gc2hhcmU/wqAiLCJpc051bGxhYmxlIjpmYWxzZSwiaXNQcml2YXRlIjpmYWxzZSwiaXNEZWFjdGl2YXRlZCI6ZmFsc2UsImlzTWFueSI6ZmFsc2UsIm1ldGFkYXRhIjp7fSwidHlwZSI6IkZpbGUiLCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJGaWxlRmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6ZmFsc2UsImRlc2NyaXB0aW9uSHRtbCI6bnVsbCwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9LHsiaWQiOiI2ZDUwYjhmMy0yOWIyLTQyMTgtYTNjNC1kYjEyN2JmYWZlMjhfN2I0Y2M0NTktNzcwMS00NGVhLWE0ZmItYzhkNDA5ODEwNDg3IiwiZmllbGQiOnsiaWQiOiI3ZTg2NjRlOC03YTIyLTQ4MGMtOWUzOS03MWM1NDg5Yzk0M2MiLCJwYXRoIjoiN2I0Y2M0NTktNzcwMS00NGVhLWE0ZmItYzhkNDA5ODEwNDg3IiwiaHVtYW5SZWFkYWJsZVBhdGgiOiIiLCJ0aXRsZSI6IldlcmUgeW91IHJlZmVycmVkIHRvIHRoaXMgcm9sZT/CoCIsImlzTnVsbGFibGUiOmZhbHNlLCJpc1ByaXZhdGUiOmZhbHNlLCJpc0RlYWN0aXZhdGVkIjpmYWxzZSwiaXNNYW55IjpmYWxzZSwibWV0YWRhdGEiOnt9LCJ0eXBlIjoiU3RyaW5nIiwiX19hdXRvU2VyaWFsaXphdGlvbklEIjoiU3RyaW5nRmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6ZmFsc2UsImRlc2NyaXB0aW9uSHRtbCI6IjxwPlBsZWFzZSBwcm92aWRlIHRoZSBmdWxsIG5hbWUgb2Ygd2hvIHJlZmVycmVkIHlvdTwvcD4iLCJpc0hpZGRlbiI6bnVsbCwiX190eXBlbmFtZSI6IkZvcm1GaWVsZEVudHJ5In1dLCJpc0hpZGRlbiI6bnVsbCwiX190eXBlbmFtZSI6IkZvcm1TZWN0aW9uUmVuZGVyIn1dLCJzb3VyY2VGb3JtRGVmaW5pdGlvbklkIjoiNGU5N2MxN2ItM2ExYS00Mzg1LWI0ZjMtZDUyMWU3MDdhN2E0IiwiX190eXBlbmFtZSI6IkZvcm1SZW5kZXIifSwic3VydmV5Rm9ybXMiOltdLCJhcHBsaWNhdGlvbkRlYWRsaW5lIjpudWxsLCJhcHBsaWNhdGlvbkxpbWl0Q2FsbG91dEh0bWwiOm51bGwsIl9fdHlwZW5hbWUiOiJKb2JQb3N0aW5nRGV0YWlscyJ9fX0=
  recorded_at: Thu, 08 Aug 2024 10:42:38 GMT
recorded_with: VCR 6.2.0
