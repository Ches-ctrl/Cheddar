---
http_interactions:
- request:
    method: get
    uri: https://apply.workable.com/api/v1/accounts/kroo
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:43 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://apply.workable.com
      Access-Control-Allow-Credentials:
      - 'true'
      Set-Cookie:
      - __cf_bm=Lq_aD9MFzwciAPD9VbpI2M645JGLHq3Cw9uewO.hB.M-1723114063-1.0.1.1-9CpnPW3Re.ZpYm6YCMljg1gGcM4pfSu0gFFkfQ2gCRdcEVa1ad6j3epZ_21iT2lWVHWgdn.rshgtXDTzZShHgQ;
        path=/; expires=Thu, 08-Aug-24 11:17:43 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - wmc=%7B%22cookie_id%22%3A%223eab3bd5-93ce-4409-978b-809ea1478baf%22%7D; path=/;
        expires=Tue, 08 Aug 2034 22:47:43 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee113d60bea4
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee113d60bea4-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJpZCI6NDM5OTYzLCJ1aWQiOiJhODc0NmIzOC1lOGFhLTQzYTEtYjI4My01ZjhmMjZkYzliMWIiLCJsb2dvIjoiaHR0cHM6Ly93b3JrYWJsZWhyLnMzLmFtYXpvbmF3cy5jb20vdXBsb2Fkcy9hY2NvdW50L2xvZ28vNDM5OTYzL2xvZ28iLCJzdWJkb21haW4iOiJrcm9vIiwibmFtZSI6Iktyb28gQmFuayBMdGQiLCJ1cmwiOiJodHRwczovL2tyb28uY29tLyIsImxhbmd1YWdlcyI6eyJkZWZhdWx0IjoiZW4iLCJvcHRpb25zIjpbeyJuYW1lIjoiZW4iLCJwdWJsaXNoZWQiOnRydWUsImVuYWJsZWQiOnRydWUsInZpc2libGUiOnRydWV9XX0sImRldGFpbHMiOnsib3ZlcnZpZXciOnsiZGVzY3JpcHRpb24iOiI8cD5XZeKAmXJlIG9uIGEgbWlzc2lvbiB0byBidWlsZCB0aGUgd29ybGTigJlzIGdyZWF0ZXN0IHNvY2lhbCBiYW5rLiBXZSBiZWxpZXZlIHRoYXQgYmFua2luZyBuZWVkcyB0byBjaGFuZ2UgZm9yIHRoZSBiZXR0ZXIsIGJlY2F1c2Ugd2hlbiBtb25leSBpcyB1c2VkIGNvcnJlY3RseSwgaXQgY2FuIHRyYW5zZm9ybSBvdXIgZGFpbHkgbGl2ZXMgYW5kIHBvc2l0aXZlbHkgaW1wYWN0IHRoZSBwbGFuZXQuPC9wPiJ9LCJlZW9jIjp7ImRpc2NsYWltZXIiOm51bGx9LCJvZmNjcCI6ZmFsc2UsImdkcHIiOnsidXJsIjoiaHR0cHM6Ly9hcHBseS53b3JrYWJsZS5jb20va3Jvby9nZHByX3BvbGljeSIsInJlcXVlc3RBcHBsaWNhbnRDb25zZW50IjpmYWxzZX0sIm1haWxib3giOnsiZW5hYmxlZCI6ZmFsc2UsInRleHQiOm51bGwsImVtYWlsIjoia3Jvb0Bqb2JzLndvcmthYmxlbWFpbC5jb20ifSwiZ3Vlc3NBdmF0YXIiOmZhbHNlLCJhcHBseVdpdGhMaW5rZWRpbiI6eyJhcHBJZCI6Ijc3c2JkcDMyenJmcTBwIiwicnNjT3JnYW5pemF0aW9uSWQiOiJ1cm46bGk6b3JnYW5pemF0aW9uOjExMDQ1MzA0IiwiYXdsaU9yZ2FuaXphdGlvbklkIjoidXJuOmxpOm9yZ2FuaXphdGlvbjoxMTA0NTMwNCJ9LCJhcHBseVdpdGhJbmRlZWQiOnRydWUsImRlcGFydG1lbnRzUHVibGljTGV2ZWwiOjF9fQ==
  recorded_at: Thu, 08 Aug 2024 10:47:43 GMT
- request:
    method: get
    uri: https://www.workable.com/api/accounts/kroo?details=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:43 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '143'
      Connection:
      - keep-alive
      Cache-Control:
      - private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Expires:
      - Thu, 01 Jan 1970 00:00:01 GMT
      Location:
      - https://apply.workable.com/api/v1/widget/accounts/kroo?details=true
      Set-Cookie:
      - __cf_bm=vTmFlXHNgYhaqKRUidh.xlmYJH1EbCQqrCXf1Nmc0Hk-1723114063-1.0.1.1-e2h8Y1i1RXkta6CbXycW.6LRWQ6Lkc6AVFIgXNr2esuD07XMrsPRb9mRbUpfOQHOioGz3474w5PFiO4GUXINAQ;
        path=/; expires=Thu, 08-Aug-24 11:17:43 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      Vary:
      - Accept-Encoding
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors https://*.workable.com/; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee12dd5e79ad
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee12dd5e79ad-LHR
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>302 Found</title></head>\r\n<body>\r\n<center><h1>302
        Found</h1></center>\r\n<hr><center>cloudflare</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 08 Aug 2024 10:47:43 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/widget/accounts/kroo?details=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cookie:
      - __cf_bm=vTmFlXHNgYhaqKRUidh.xlmYJH1EbCQqrCXf1Nmc0Hk-1723114063-1.0.1.1-e2h8Y1i1RXkta6CbXycW.6LRWQ6Lkc6AVFIgXNr2esuD07XMrsPRb9mRbUpfOQHOioGz3474w5PFiO4GUXINAQ
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:44 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '55925'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - "*"
      Set-Cookie:
      - wmc=%7B%22cookie_id%22%3A%2231dcdbe0-5c70-44e1-a4a4-23f10198c8fd%22%7D; path=/;
        expires=Tue, 08 Aug 2034 22:47:43 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Content-Disposition:
      - inline; filename=results.json
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee137a88bec1
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee137a88bec1-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:47:44 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://kroo.com/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 08 Aug 2024 10:47:44 GMT
      Etag:
      - W/"1723114064655"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '15'
      Content-Length:
      - '498'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"f9cc2189-59fa-4e75-bf54-218d727db7b9","properties":{"name":"Kroo","identifier":{"permalink":"b-social","image_id":"gze3oofpsz0ou1qzdjuc","uuid":"f9cc2189-59fa-4e75-bf54-218d727db7b9","entity_def_id":"organization","value":"Kroo"},"linkedin":{"value":"https://www.linkedin.com/company/b-social-ltd/"},"short_description":"Online
        banking at your fingertips. Apply today for a feature-packed online current
        account.","rank_org":7445,"website_url":"https://kroo.com"}}]}'
  recorded_at: Thu, 08 Aug 2024 10:47:44 GMT
- request:
    method: get
    uri: https://www.workable.com/api/accounts/kroo?details=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 302
      message: Moved Temporarily
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:44 GMT
      Content-Type:
      - text/html
      Content-Length:
      - '143'
      Connection:
      - keep-alive
      Cache-Control:
      - private, max-age=0, no-store, no-cache, must-revalidate, post-check=0, pre-check=0
      Expires:
      - Thu, 01 Jan 1970 00:00:01 GMT
      Location:
      - https://apply.workable.com/api/v1/widget/accounts/kroo?details=true
      Set-Cookie:
      - __cf_bm=D58tbu56Aj8wZ1A8tQBMO5Ijjz0eJrcu2e4cPAthNek-1723114064-1.0.1.1-ZqSKvIIYbI14lhYhW9hR6jh1dHCLLi24gjWXh.D0R4_cEbCSIrMfuv30O32Y.yVB58nJKPNEKJPpEuBw6u7kAQ;
        path=/; expires=Thu, 08-Aug-24 11:17:44 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      Vary:
      - Accept-Encoding
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors https://*.workable.com/; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee191eb0942d
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee191eb0942d-LHR
    body:
      encoding: UTF-8
      string: "<html>\r\n<head><title>302 Found</title></head>\r\n<body>\r\n<center><h1>302
        Found</h1></center>\r\n<hr><center>cloudflare</center>\r\n</body>\r\n</html>\r\n"
  recorded_at: Thu, 08 Aug 2024 10:47:44 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/widget/accounts/kroo?details=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Cookie:
      - __cf_bm=D58tbu56Aj8wZ1A8tQBMO5Ijjz0eJrcu2e4cPAthNek-1723114064-1.0.1.1-ZqSKvIIYbI14lhYhW9hR6jh1dHCLLi24gjWXh.D0R4_cEbCSIrMfuv30O32Y.yVB58nJKPNEKJPpEuBw6u7kAQ
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '55925'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - "*"
      Set-Cookie:
      - wmc=%7B%22cookie_id%22%3A%223f0e2c1f-8f66-472d-bf58-0218b499a566%22%7D; path=/;
        expires=Tue, 08 Aug 2034 22:47:44 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      Content-Disposition:
      - inline; filename=results.json
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee19a9d06421
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee19a9d06421-LHR
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:47:45 GMT
- request:
    method: get
    uri: https://apply.workable.com/api/v1/jobs/C4002EDABE/form
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding, Origin
      Access-Control-Allow-Origin:
      - http://apply.workable.com
      Access-Control-Allow-Credentials:
      - 'true'
      Set-Cookie:
      - __cf_bm=vOxVvDw69gshQq05Af7jcQRTKckKc6BHzJmdfh_FZ3A-1723114065-1.0.1.1-Nw_rEDnT73OJyLz5QVttBQh2zZ09cG7AmtjmlEQjPzC83sbDRiDaHMQ3H0VpMs2qrRcxDy4HhkbpjPIS9WFI9g;
        path=/; expires=Thu, 08-Aug-24 11:17:45 GMT; domain=.workable.com; HttpOnly;
        Secure; SameSite=None
      - wmc=%7B%22cookie_id%22%3A%22147f7476-ee5f-4143-9bb0-cd8b89244c40%22%7D; path=/;
        expires=Tue, 08 Aug 2034 22:47:45 GMT; domain=.workable.com; samesite=none;
        secure
      Expect-Ct:
      - enforce, max-age=86400
      Strict-Transport-Security:
      - max-age=15552000; includeSubDomains
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
      X-Country:
      - GB
      Access-Control-Expose-Headers:
      - X-Country
      X-Sv:
      - 937c2fd34e9bf1ab26776b33cf81a156e89b3989dc216f286d21567de7ac4f2c
      Cf-Cache-Status:
      - DYNAMIC
      X-Kb:
      - 'false'
      X-Ts:
      - '0'
      Content-Security-Policy-Report-Only:
      - frame-ancestors *; report-uri https://browser-intake-datadoghq.com/api/v2/logs?dd-api-key=pubcbe8d2ef0966e8645a91099cfac490bb&dd-evp-origin=content-security-policy&ddsource=csp-report&ddtags=%40http.headers.cfray%3A8afeee1b3cf294f3
      Server:
      - cloudflare
      Cf-Ray:
      - 8afeee1b3cf294f3-LHR
    body:
      encoding: ASCII-8BIT
      string: '[{"name":"Personal information","fields":[{"id":"firstname","required":true,"label":"First
        name","type":"text","maxLength":127},{"id":"lastname","required":true,"label":"Last
        name","type":"text","maxLength":127},{"id":"email","required":true,"label":"Email","type":"email","maxLength":255},{"id":"phone","required":true,"label":"Phone","type":"phone","helper":"The
        hiring team may use this number to contact you about this job.","maxLength":255}]},{"name":"Profile","fields":[{"id":"resume","required":true,"label":"Resume","type":"file","supportedFileTypes":[".pdf",".doc",".docx",".odt",".rtf"],"supportedMimeTypes":["application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.oasis.opendocument.text","application/rtf"],"maxFileSize":12000000}]},{"name":"Details","fields":[{"id":"QA_5947083","required":true,"label":"Do
        you have at least 3 years of experience in system, network or application
        security?","type":"boolean"},{"id":"QA_7692993","required":true,"label":"What
        is your current (or most recent) salary?","type":"text","maxLength":127},{"id":"QA_7692994","required":true,"label":"What
        are your salary requirements for this role?","type":"text","maxLength":127},{"id":"QA_7692995","required":true,"label":"What
        is your current notice period?","type":"text","maxLength":127},{"id":"QA_7692996","required":true,"label":"What
        is your right to work in the UK please?  \n(For example: British Citizenship,
        Indefinite Leave to Remain, Settlement Status, Student Visa, Tier 1 or 2 visa
        etc)","type":"text","maxLength":127},{"id":"QA_5947034","required":true,"label":"Do
        you have demonstrable experience in security operations, network security
        or applications security?","type":"paragraph"},{"id":"QA_5947035","required":true,"label":"Do
        you have any experience of working in a Fintech or a regulated environment?","type":"paragraph"},{"id":"QA_5947036","required":true,"label":"Do
        you have working knowledge of SAST, DAST, RASP, and IAST tools and building
        security into existing SDLC processes?","type":"paragraph"},{"id":"QA_6302137","required":true,"label":"Please
        select your preferred pronoun?","type":"dropdown","options":[{"name":"2998915","value":"She/her"},{"name":"2998916","value":"He/him"},{"name":"2998917","value":"They/Them"},{"name":"2998918","value":"Prefer
        not to say"}],"singleOption":true},{"id":"QA_6302138","required":true,"label":"If
        the above does not capture your preferred pronoun, please could you state
        what it is?","type":"paragraph"},{"id":"QA_7694028","required":true,"label":"If
        a current Kroo Bank employee referred you, please share their name. If not,
        just write \"no.\"","type":"text","maxLength":127}]}]'
  recorded_at: Thu, 08 Aug 2024 10:47:45 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20England%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2436'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - fc5efed0af815ba22df745ce4ac47ad5
      X-Msedge-Ref:
      - 'Ref A: 9D603EEF433048408A823A4E9F765E91 Ref B: DB3EDGE3213 Ref C: 2024-08-08T10:47:45Z|Ref
        SnR: 66b4a2516b054ad2a7ee054b3693e9ea'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-jdnjj, mapsplatform-forwardgeocoder-service-69b95d964b-dxjkk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '57'
      X-Azure-Ref:
      - 20240808T104745Z-17cc7bff7589c6s21vbfxz6zc0000000011g000000001atw
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJmYzVlZmVkMGFmODE1YmEyMmRmNzQ1Y2U0YWM0N2FkNSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:45 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - dc14fee0d349aee76a189613c1b51c60
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a251eef84ae4b451e7a2101aef2b|Ref A: 04FC264E436A496BB962FE1E0B31A77B
        Ref B: LON212050704025 Ref C: 2024-08-08T10:47:45Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-zl2zf, mapsplatform-forwardgeocoder-service-69b95d964b-dxjkk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '60'
      X-Azure-Ref:
      - 20240808T104745Z-154b59dbc6dlngw99sacfdyvhn000000009g000000006kzy
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJkYzE0ZmVlMGQzNDlhZWU3NmExODk2MTNjMWI1MWM2MCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:45 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/England?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:45 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3497'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - de42635499fb1b3ec34bd07cfd0cc0d4
      X-Msedge-Ref:
      - 'Ref A: 1F54EA04C9DB437C841C04D3C0005BC5 Ref B: DB3EDGE3218 Ref C: 2024-08-08T10:47:45Z|Ref
        SnR: 66b4a2515c4d4b029e7e92698cba5058'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-96fdk, mapsplatform-forwardgeocoder-service-69b95d964b-n6smc
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '46'
      X-Azure-Ref:
      - 20240808T104745Z-154b59dbc6dzjs5cxeaq4qx2e80000000adg00000000pn1k
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5Ljg2NDYyNzgzODEzNDc2NiwtNi40MTg5NTQ4NDkyNDMxNjQsNTUuODExNjc2MDI1MzkwNjI1LDEuNzY4OTU5ODc5ODc1MTgzXSwibmFtZSI6IkVuZ2xhbmQiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUyLjM2ODIyMTI4LC0xLjI1NjEwNjM4XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiRW5nbGFuZCJ9LCJjb25maWRlbmNlIjoiSGlnaCIsImVudGl0eVR5cGUiOiJBZG1pbkRpdmlzaW9uMSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTIuMzY4MjIxMjgsLTEuMjU2MTA2MzhdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjQ2MzE0NjIwOTcxNjgsLTAuNjUzNDk1OTA3NzgzNTA4Myw1MS40NjU0MTIxMzk4OTI1OCwtMC42NDk4NzA5OTE3MDY4NDgxXSwibmFtZSI6IkVuZ2xhbmQsIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQyNjc3MywtMC42NTE2ODgxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IldpbmRzb3IgYW5kIE1haWRlbmhlYWQiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiRW5nbGFuZCwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IldpbmRzb3IifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJUb3VyaXN0U3RydWN0dXJlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQyNjc3MywtMC42NTE2ODgxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOlszNC41MzIxMjczODAzNzEwOTQsLTkxLjk4NzA5MTA2NDQ1MzEyLDM0LjU2MjE4MzM4MDEyNjk1LC05MS45NDczMTkwMzA3NjE3Ml0sIm5hbWUiOiJFbmdsYW5kLCBBUiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzQuNTQ0MDA2MzUsLTkxLjk2OTE0NjczXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkFSIiwiYWRtaW5EaXN0cmljdDIiOiJMb25va2UgQ291bnR5IiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBTdGF0ZXMiLCJmb3JtYXR0ZWRBZGRyZXNzIjoiRW5nbGFuZCwgQVIiLCJsb2NhbGl0eSI6IkVuZ2xhbmQifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzQuNTQ0MDA2MzUsLTkxLjk2OTE0NjczXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOlszNS44NTU1NTg3MzA3NzY5OCwtOTQuNzE1NjU3OTQ4MDgzNDMsMzUuOTEzNDk5NDk2NzYyMDg2LC05NC42MjAzNDA1ODcwNzI4Ml0sIm5hbWUiOiJFbmdsYW5kLCBPSyIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzUuODg0NTI5MTEsLTk0LjY2Nzk5OTI3XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9LIiwiYWRtaW5EaXN0cmljdDIiOiJBZGFpciBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJFbmdsYW5kLCBPSyIsImxvY2FsaXR5IjoiRW5nbGFuZCJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOlszNS44ODQ1MjkxMSwtOTQuNjY3OTk5MjddLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQwLjgxMTI0MzM5MjY0MjIxLC04Mi4yOTAxODY2Mzg4MDI3Nyw0MC44NjkxODQxNTg2MjczMiwtODIuMTg4MTE1MzYzMTUwMzZdLCJuYW1lIjoiRW5nbGFuZCwgT0giLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzQwLjg0MDIxMzc4LC04Mi4yMzkxNTFdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiT0giLCJhZG1pbkRpc3RyaWN0MiI6IkFzaGxhbmQgQ291bnR5IiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBTdGF0ZXMiLCJmb3JtYXR0ZWRBZGRyZXNzIjoiRW5nbGFuZCwgT0giLCJsb2NhbGl0eSI6IkVuZ2xhbmQifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDAuODQwMjEzNzgsLTgyLjIzOTE1MV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfV19XSwic3RhdHVzQ29kZSI6MjAwLCJzdGF0dXNEZXNjcmlwdGlvbiI6Ik9LIiwidHJhY2VJZCI6ImRlNDI2MzU0OTlmYjFiM2VjMzRiZDA3Y2ZkMGNjMGQ0In0=
  recorded_at: Thu, 08 Aug 2024 10:47:45 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:46 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - f7db9aa47c2dbc6920f4550b79b1daab
      X-Msedge-Ref:
      - 'Ref A: CDB7BB2E1ACC47BA9E97E99A42B87E18 Ref B: DB3EDGE2113 Ref C: 2024-08-08T10:47:45Z|Ref
        SnR: 66b4a252f7224f9591c3668b46792707'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-j6n4c, mapsplatform-forwardgeocoder-service-69b95d964b-nxwhw
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '53'
      X-Azure-Ref:
      - 20240808T104745Z-154b59dbc6dwlvkrn6be436zes0000000c00000000009ga2
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiZjdkYjlhYTQ3YzJkYmM2OTIwZjQ1NTBiNzliMWRhYWIifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:46 GMT
recorded_with: VCR 6.2.0
