---
http_interactions:
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 27 Jun 2024 13:32:09 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"45a98e4fedf68ab34b1277f7d6350c9f"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-7e347bd417d6567b7759eb2424d525e8'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB6; path=/
      - _pinpoint_session=ePjvAQfipBczIyH2tmcYvvCu9fzOxIxBR9VugTcW7XC9oXfvvHWdZ5M2128I4HtFIG%2F78%2BSmZqqW8NsYyFDTGnqYHGal8M%2BDcC27g4B0J0W0QhBJ0cWXeRAd8HJE2LAY3BKoWO5%2BpWeBKbEYl580F5O8ERNyEdgL3WT3NoyXRAy8W1J4%2BXMHcltcaGDDmt4FmSUikxnBXDWF3AFFL82mdIGsG62nxbkHeIYRidfHJMKHMN0aewfJz5NEl5ji2mgh2I%2FVPGB8IBR3no1wqabqrt%2FrPBruDrYTajYPcBcZGSSyijs%3D--xv4XZtMw4sKzZ6%2B1--n0sufhsciym4wdrHYYMlOg%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 04 Jul 2024 13:32:09 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=a3204c86-aa62-4180-9d04-1050b7db8516; path=/; expires=Thu, 27 Jun
        2024 17:32:09 GMT; secure
      - ahoy_visitor=f24ec163-133f-44c6-bf6c-8ae0c756d312; path=/; expires=Sat, 27
        Jun 2026 13:32:09 GMT; secure
      X-Request-Id:
      - 7d06a2c2-b0d4-49c5-ba51-12c9cf51505e
      X-Runtime:
      - '0.285103'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 27 Jun 2024 13:32:10 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 27 Jun 2024 13:32:10 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"e9b910dc22e7fb00057cfc9c5736f487"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-5eed6cf2d63f4d508e68263b2888a1cc'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB1; path=/
      - _pinpoint_session=5aUnltPpI8zjuI646V%2BCEnNdlkPy5x%2Fb%2Fh2neHN68XGe5fQyGG43y5GvqWVWsmrM4FLEyUevK8b0ydSfZwHppApy6ngq7RM0P8gZ5Jq10Do9WMAepzukP29gUxtKEohm1aANUh9KY6Bk7dTHNQpdsUYqK8WsXotPvuYzxP4B22%2BCnBKDos1mqdk5IC77%2FHmaqRZ7mS1EC6JAdg9U8X%2FdZjjBOb9a%2FgE5sYSkFTY7paCT0mzHjMf9X1xbLvup3zaWvQvNEwokEZovP9eYszWbT%2Ff3FwR2GmE4bQCrW9jQebEvqATCIznH7s426VGoA18vYSlBgnS7FJjwMn8zI%2BPr3hud7Rb3gatiz8iuLwX4pHdVBh%2BPmWFSdpndhfwvxD9oi6GNOLFoaYDaZ8AllzokpwmsIw%3D%3D--fhIGPoekN3pblNwv--X3Pw8WVyrgfMOggEgF6pbA%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 04 Jul 2024 13:32:10 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=6d8f3b4f-d37d-4fda-a7a7-25a302297b40; path=/; expires=Thu, 27 Jun
        2024 17:32:10 GMT; secure
      - ahoy_visitor=94ecd82f-dd8f-4770-8174-a5cec1382333; path=/; expires=Sat, 27
        Jun 2026 13:32:10 GMT; secure
      X-Request-Id:
      - 2338728c-6721-45e5-b481-8330b5427d84
      X-Runtime:
      - '0.205655'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 27 Jun 2024 13:32:10 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 27 Jun 2024 13:32:11 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"45a98e4fedf68ab34b1277f7d6350c9f"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-9ab06fc30e87ab2cce73bf29908a9fff'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB6; path=/
      - _pinpoint_session=Hr9SUOqXXs4cXVorKv5u8s3%2BvXF3l52k1lm808V0E0tjV3Udbrjch6uv13wc58F6yBI3dZ1mfG6Be0v3xIK%2BeaAK9fm63nmvt9Mi8RmwJVOSjW7JrErAa8%2FxlDX4RCVXTtkfAaov7A%2BJKqJq1AiLNUk7gxVvKtQlROCg5827v2wTa%2FUKmBj5mNhqWmyGmQxAlW3jwFEYaKPZ74h1z%2FZw0QcMSv1lSZPrAZq%2BShslMJVzzdXap1ITo0A963gtXbXb9gUHjBzPSfz9VYT64RpHe6NJylps0Yt76QGgDIYuJpEhyf0%3D--wfaX3daNT9SccvmU--q4%2Bw8Je6Ftifig1W2cIDcQ%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 04 Jul 2024 13:32:11 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=3bed09e6-fb94-4b1c-bea7-aa0a794e50e1; path=/; expires=Thu, 27 Jun
        2024 17:32:10 GMT; secure
      - ahoy_visitor=b3e66f2e-0a14-4e86-9dd7-bf05ece6c54e; path=/; expires=Sat, 27
        Jun 2026 13:32:10 GMT; secure
      X-Request-Id:
      - 935680b8-4853-4140-b43c-8545ead52082
      X-Runtime:
      - '1.356150'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 27 Jun 2024 13:32:11 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=1a809e14a0c7e29e964a5923f1b17bdd
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.bathspa.ac.uk/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 27 Jun 2024 13:32:12 GMT
      Etag:
      - W/"1719495132457"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '5'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '13'
      Content-Length:
      - '615'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","properties":{"name":"Bath
        Spa University","identifier":{"permalink":"bath-spa-university-2","image_id":"v1488530438/cej4b9ng1amolmbwoqp0.png","uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","entity_def_id":"organization","value":"Bath
        Spa University"},"linkedin":{"value":"https://www.linkedin.com/company/bath-spa-university"},"short_description":"Bath
        Spa offers undergraduate and postgraduate study and research opportunities
        with a focus on creativity, culture and enterprise.","rank_org":356637,"website_url":"https://www.bathspa.ac.uk/"}}]}'
  recorded_at: Thu, 27 Jun 2024 13:32:12 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 27 Jun 2024 13:32:12 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"45a98e4fedf68ab34b1277f7d6350c9f"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-ed4db52de1d086db4968a6837ab868be'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB7; path=/
      - _pinpoint_session=DHjxi2rpBeGod6BG3UX6tMbtlC5ID1gkjbSo%2FG9zT40QHfemtvVcwtvyjKjVoZPHglUEM7N6y63xYqyr6KxTIZvdC5jdc8CFK3AqQLpCnIdeeJF%2FuTEzULMOdYtj21yGeLb0RFXSY1i7Dy9KliDobGFeCy4VvkI8gU96TmYvJQ7i%2FeyGpbN5Za7%2B4r5zkOA4qKsiZQaz7hMfM1WKRIKj2Ia6gU3VIxj5Gtt8NnogXmyoph11ZVJRPN0CwlXQEQQUrzqPsrSXZLay%2Bh71cOLSGOlxIpjjJHyEy8szqIe8BPtDWwE%3D--oK7pKrBxNurLwGgu--Fx8fp2v5Ajr1%2Fjz9a0He2w%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 04 Jul 2024 13:32:12 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=6bf6ce39-2962-4f2e-a7b6-384a2d97ade9; path=/; expires=Thu, 27 Jun
        2024 17:32:12 GMT; secure
      - ahoy_visitor=4626757c-6873-44b4-838e-c6e756de90a3; path=/; expires=Sat, 27
        Jun 2026 13:32:12 GMT; secure
      X-Request-Id:
      - 566bd79e-19f6-409e-bc3a-60836f6df221
      X-Runtime:
      - '0.257852'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 27 Jun 2024 13:32:12 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Bath%20%20%20Newton%20Park,?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 27 Jun 2024 13:32:13 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1159'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 8cd78511a5ef3c937543d95e41c1400a
      X-Msedge-Ref:
      - 'Ref SnR: 667d69dcb4c84487a3b206b12edac38e|Ref A: B756357767474581B3F3976F71DE51DD
        Ref B: DB3EDGE2211 Ref C: 2024-06-27T13:32:12Z'
      X-Bm-Srv:
      - mapsplatform-frontend-84c7655474-pk29z, mapsplatform-forwardgeocoder-service-5b4f667648-6zr86
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '79'
      X-Azure-Ref:
      - 20240627T133212Z-165bd8dd578gtgt8fe6gq58krw000000017g000000010a34
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjM3MTY5NDIyODIzMDEwNSwtMi40NDY1ODM0MzExODQ1Mzk2LDUxLjM3OTQxOTY2MzM3MTQ2LC0yLjQzMDA4MzExNDY4MzM4MDNdLCJuYW1lIjoiTmV3dG9uIFBhcmssIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS4zNzU1NTY5NSwtMi40MzgzMzMyN119LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJFbmdsYW5kIiwiYWRtaW5EaXN0cmljdDIiOiJCYXRoIEFuZCBOb3J0aCBFYXN0IFNvbWVyc2V0IiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6Ik5ld3RvbiBQYXJrLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkxhbmRtYXJrQnVpbGRpbmciLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjM3NTU1Njk1LC0yLjQzODMzMzI3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiOGNkNzg1MTFhNWVmM2M5Mzc1NDNkOTVlNDFjMTQwMGEifQ==
  recorded_at: Thu, 27 Jun 2024 13:32:13 GMT
recorded_with: VCR 6.2.0
