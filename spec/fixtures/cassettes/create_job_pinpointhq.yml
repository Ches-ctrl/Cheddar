---
http_interactions:
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 08 Aug 2024 10:46:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"888e09b1954d872f7c4cdc8ca1b63bda"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-019b36445bfc4a08a26592a5edbcedf5'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB3; path=/
      - _pinpoint_session=Rrgdeu4Thf2Lp5V9HkLtdwJyWNT5I4dkGooY8cIpZemIZdOkctkqxq6bwe%2BiVdJ5v%2BXGFz0wCJHfo4jodUzfTDsTgXprbqfJu0x22FxkAMx0eiVAoTDUNkYsQRM9YG52p5iEQTlbforQo%2BZuUZM7Jpud5dzgMX6XOgrjsllfkVVAV9nZT6LEhJkfVrqmQIB8jplp6DGWKL95YwDAe7ee1W15U3XAkwMy0N78zwmUg3o8tsAI18fo7v7guDQnEhRJCw%2Fgnhlv5UyV1RHAT6WQltHXvsHk4zqpQbtqbwmr8WSfWFA%3D--BNp%2BrGKI78PGJ1MY--BTLpdmWIKBTcY8aZKj%2Fp%2FA%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 15 Aug 2024 10:46:26 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=eadd8a64-ee07-4090-a71a-e29050cf38e0; path=/; expires=Thu, 08 Aug
        2024 14:46:26 GMT; secure
      - ahoy_visitor=b9e443e4-07f6-4b3f-80fd-bedcafffcecc; path=/; expires=Sat, 08
        Aug 2026 10:46:26 GMT; secure
      X-Request-Id:
      - 2f79b440-ab73-4756-983a-38a1cafaa799
      X-Runtime:
      - '0.211002'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjpbeyJpZCI6IjE5NDcyOSIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMzcsMDk5IC0gwqM0MSw3MzIgcGVyIGFubnVtXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlcyAtIE1vbmRheSAxNnRoIFx1MDAyNmFtcDsgVHVlc2RheSAxN3RoIFNlcHRlbWJlciAyMDI0IFx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VGb3IgYW4gaW5mb3JtYWwgZGlzY3Vzc2lvbiByZWdhcmRpbmcgdGhpcyBwb3N0LCBwbGVhc2UgY29udGFjdCBBbmRyZXcgQ2FyciwgU0NJVFQgUEdDRSBQcm9ncmFtbWUgRGlyZWN0b3IgKFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2NhIGhyZWY9XCJtYWlsdG86YS5jYXJyMkBiYXRoc3BhLmFjLnVrXCJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VhLmNhcnIyQGJhdGhzcGEuYWMudWtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2UpLCB3aG8gaXMgYXZhaWxhYmxlIGR1cmluZyAyNHRoLTMxc3QgSnVseSAyMDI0IGFuZCAxOXRoLTIzcmQgQXVndXN0IDIwMjQuXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMzNywwOTkgLSDCozQxLDczMiAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6MzcwOTkuMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjQxNzMyLjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0yNlQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBzZWVraW5nIGFuIGV4cGVyaWVuY2VkIEVhcmx5IFllYXJzLCBwcmltYXJ5IGFuZC9vciBzZWNvbmRhcnkgYWdlIHBoYXNlIHByYWN0aXRpb25lciB0byB0YWtlIG9uIHRoZSByb2xlIG9mIHRlYWNoZXIgYW5kIHR1dG9yIGZvciB0aGUgYWNhZGVtaWMgYXNzaWdubWVudHMgb2YgQlNV4oCZcyBoaWdobHkgcmVnYXJkZWQgU0NJVFQgUEdDRSBwcm9ncmFtbWUuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlVGVhY2hpbmcgdGFrZXMgcGxhY2UgYm90aCBpbi1wZXJzb24gYXQgb3VyIFNDSVRUcyBhY3Jvc3MgRW5nbGFuZCBhbmQgb25saW5lLCB3aXRoIG11Y2ggb2YgdGhlIGNvdXJzZSBkZWxpdmVyZWQgdmlydHVhbGx5Llx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUJhdGggU3BhIFVuaXZlcnNpdHnigJlzIFNjaG9vbCBvZiBFZHVjYXRpb24gcHJvdmlkZXMgdGhlIFNDSVRUIFBHQ0UgYXdhcmQgdG8gYSBncm93aW5nIG51bWJlciBvZiBTQ0lUVCBwcm92aWRlcnMsIHdvcmtpbmcgd2l0aCAxMyBwYXJ0bmVycyBmcm9tIFNlcHRlbWJlciAyMDI0Llx1MDAyNm5ic3A7IFdoaWxzdCB0aGUgU0NJVFQgcHJvdmlkZXMgdGhlIHRyYWluaW5nIHRoYXQgbGVhZHMgdG8gYSByZWNvbW1lbmRhdGlvbiBmb3IgUVRTLCB0aGlzIHJvbGUgcmVsYXRlcyB0byBCYXRoIFNwYSBVbml2ZXJzaXR54oCZcyBwcm92aXNpb24gb2YgdGhlIGFjYWRlbWljIGF3YXJkIG9mIFBHQ0UuIFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUluIG9yZGVyIHRvIHN1cHBvcnQgdHJhaW5lZXMgaW4gdW5kZXJzdGFuZGluZyB0aGUgdmFsdWUgb2YgY3JpdGljYWwgYXdhcmVuZXNzIG9mIHByb2Zlc3Npb25hbCBwcmFjdGljZSBhdCBNYXN0ZXJzIGxldmVsLCB0aHJvdWdoIHRoZSBjb21wbGV0aW9uIG9mIGFjYWRlbWljIGFzc2lnbm1lbnRzLCB0aGUgcG9zdCBob2xkZXIgd2lsbCBkZWxpdmVyOiBTQ0lUVCBhc3NpZ25tZW50IGxhdW5jaGVzLCBzZW1pbmFycyB0byBncm91cHMgb2YgdHJhaW5lZXMsIGluZGl2aWR1YWwgdHV0b3JpYWxzLCBvbmxpbmUgc3VwcG9ydCBhbmQgYXNzaWdubWVudCBhc3Nlc3NtZW50LiBcdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGUgd29yayBvZiB0aGUgU0NJVFQgUEdDRSBwcm9ncmFtbWUgaXMgZGVsaXZlcmVkIGF0IGEgcmFuZ2Ugb2Ygc2l0ZXMgYWNyb3NzIEVuZ2xhbmQuXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIFFUUywgYSBmaXJzdCBkZWdyZWUsIGEgaGlnaGVyIGRlZ3JlZSAob3Igd29ya2luZyB0b3dhcmRzIGEgaGlnaGVyIGRlZ3JlZSkgYW5kIHdpbGwgYmUgY29uZmlkZW50IGluIHRlYWNoaW5nIGF0IE1hc3RlcnMgbGV2ZWwgYW5kIHdvcmtpbmcgd2l0aCB0cmFpbmVlIHRlYWNoZXJzLlx1MDAyNm5ic3A7IEV4cGVyaWVuY2Ugb2Ygd29ya2luZyBpbiBhIHNjaG9vbCBvciBvdGhlciBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbiBpcyBlc3NlbnRpYWwuXHUwMDI2bmJzcDsgRXhwZXJpZW5jZSBpbiB0aGUgRWFybHkgWWVhcnMsIHByaW1hcnkgYW5kL29yIHNlY29uZGFyeSBhZ2UgcGhhc2UgaXMgZXNzZW50aWFsLCBidXQgeW91IHdpbGwgYWxzbyBoYXZlIGtub3dsZWRnZSBhbmQgdW5kZXJzdGFuZGluZyBvZiBsZWFybmluZyBwZWRhZ29neSBhbmQgY3VycmVudCB0aGlua2luZyBpbiB3aWRlciBlZHVjYXRpb25hbCBpc3N1ZXMuIFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaGF2ZSBleGNlbGxlbnQgY29tbXVuaWNhdGlvbiBza2lsbHMsIGEgY29sbGFib3JhdGl2ZSBhbmQgZW50aHVzaWFzdGljIGFwcHJvYWNoIHRvIHRlYWNoZXIgZWR1Y2F0aW9uIGFuZCBiZSBhIGNvbW1pdHRlZCB0ZWFtIHBsYXllci5cdTAwMjZuYnNwOyBZb3Ugd2lsbCBiZSBhIGNvbmZpZGVudCBjb21tdW5pY2F0b3IgYW5kIHVzZXIgb2YgSVQsIHBhcnRpY3VsYXJseSBvbmxpbmUgbGVhcm5pbmcgZW52aXJvbm1lbnRzLlx1MDAyNm5ic3A7IFlvdSBtdXN0IGJlIGEgZmxleGlibGUgdGhpbmtlciBhbmQgYmUgd2lsbGluZyB0byBlbmdhZ2UgaW4gdGhlIGRldmVsb3BtZW50IG9mIHRoaXMgYXJlYSBvZiB0ZWFjaGVyIGVkdWNhdGlvbi5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUZvciBhbiBpbmZvcm1hbCBkaXNjdXNzaW9uIHJlZ2FyZGluZyB0aGlzIHBvc3QsIHBsZWFzZSBjb250YWN0IEFuZHJldyBDYXJyLCBTQ0lUVCBQR0NFIFByb2dyYW1tZSBEaXJlY3RvciAoXHUwMDNjYSBocmVmPVwibWFpbHRvOmEuY2FycjJAYmF0aHNwYS5hYy51a1wiXHUwMDNlYS5jYXJyMkBiYXRoc3BhLmFjLnVrXHUwMDNjL2FcdTAwM2UpLCB3aG8gaXMgYXZhaWxhYmxlIGR1cmluZyAyNHRoLTMxc3QgSnVseSAyMDI0IGFuZCAxOXRoLTIzcmQgQXVndXN0IDIwMjQuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiVGVhY2hpbmcgRmVsbG93IGZvciBTY2hvb2wtQ2VudHJlZCBJbml0aWFsIFRlYWNoZXIgVHJhaW5pbmcgKFNDSVRUKSBQR0NFIFByb2dyYW1tZSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy82OGZkOWFmZC03ZjRjLTRkNmYtYjI4Ni01YjU3MGU4MzIxZjYiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzLzY4ZmQ5YWZkLTdmNGMtNGQ2Zi1iMjg2LTViNTcwZTgzMjFmNiIsIndvcmtwbGFjZV90eXBlIjoiaHlicmlkIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ikh5YnJpZCIsImpvYiI6eyJpZCI6IjIxMzAzMSIsInJlcXVpc2l0aW9uX2lkIjoiMjgyLzIzLzI0IiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI1NDc5IiwibmFtZSI6IlNjaG9vbCBvZiBFZHVjYXRpb24ifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5NzI3OSIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMzcsMDk5IC0gwqM0MSw3MzIgcGVyIGFubnVtXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUZ1bGwgVGltZSBGaXhlZCBUZXJtIENvbnRyYWN0IGluaXRpYWxseSBmb3IgMTIgbW9udGhzLCBhbHRob3VnaCBjYW4gYmUgc2hvcnRlbmVkIG9yIGxlbmd0aGVuZWQgYmFzZWQgb24gdGhlIG1hdGVybml0eSBsZWF2ZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VJbnRlcnZpZXcgRGF0ZSAtIDE0dGggQXVndXN0IDIwMjRcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOiLCozM3LDA5OSAtIMKjNDEsNzMyIC8geWVhciIsImNvbXBlbnNhdGlvbl9taW5pbXVtIjozNzA5OS4wLCJjb21wZW5zYXRpb25fbWF4aW11bSI6NDE3MzIuMCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjoiR0JQIiwiY29tcGVuc2F0aW9uX2ZyZXF1ZW5jeSI6InllYXIiLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTA4VDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIGN1cnJlbnRseSBzZWVraW5nIHRvIHJlY3J1aXQgVGVhY2hpbmcgRmVsbG93cyBpbiBQc3ljaG9sb2d5IHRvIGpvaW4gb3VyIGRlZGljYXRlZCBhbmQgY29tbWl0dGVkIHRlYW0gaW4gUHN5Y2hvbG9neS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlKFBsZWFzZSBub3RlIHRoYXQgdGhlIHJvbGUgaXMgaW5pdGlhbGx5IGZvciAxMiBtb250aHMsIGFsdGhvdWdoIGNhbiBiZSBzaG9ydGVuZWQgb3IgbGVuZ3RoZW5lZCBiYXNlZCBvbiB0aGUgbWF0ZXJuaXR5IGxlYXZlKVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZml4ZWRfdGVybV9mdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZpeGVkIFRlcm0gLSBGdWxsIFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBiZSB0aGUga2V5IHN1cHBvcnQgdG8gdW5kZXJncmFkdWF0ZSB0ZWFjaGluZyBhY3Jvc3Mgb3VyIHByb2dyYW1tZXMgd2l0aGluIFBzeWNob2xvZ3kuIFlvdSB3aWxsIGRlc2lnbiBhbmQgZGVsaXZlciB0ZWFjaGluZyBjb250ZW50IGFjcm9zcyBhIHJhbmdlIG9mIG1vZHVsZXMgYXQgTGV2ZWxzIDQgdG8gNiBpbiBQc3ljaG9sb2d5IFByb2dyYW1tZXMsIHdpdGggYSBwYXJ0aWN1bGFyIGZvY3VzIG9uIEZvcmVuc2ljIFBzeWNob2xvZ3ksIGFzIHdlbGwgYXMgY29udHJpYnV0aW5nIHRvIGN1cnJpY3VsdW0gcGxhbm5pbmcgYW5kIGRldmVsb3BtZW50LCBhbmQgZW5nYWdpbmcgaW4gcmVzZWFyY2ggb3Igc2Nob2xhcmx5IGFjdGl2aXR5IGluIFBzeWNob2xvZ3kuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIHVuZGVydGFrZSB0ZWFjaGluZyB3aXRoaW4gUHN5Y2hvbG9neSBpbiB0aGUgZm9ybSBvZiBsZWN0dXJlcywgcHJhY3RpY2FsIHNlc3Npb25zLCBzZW1pbmFycywgZGlzY3Vzc2lvbnMgZ3JvdXBzIGFuZCB0dXRvcmlhbHMgYXMgYXBwcm9wcmlhdGUsIHdoaWxzdCBzdXBwb3J0aW5nIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgaW5kaXZpZHVhbGx5IGFuZCBvbmxpbmUuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlSW4gYWRkaXRpb24sIHlvdSB3aWxsIGhlbHAgbWFyayBhc3Nlc3NtZW50cyBhc3NvY2lhdGVkIHdpdGggdGhlIHRlYWNoaW5nIGFuZCB3aWxsIGF0dGVuZCBhc3Nlc3NtZW50IGFuZCBleGFtaW5hdGlvbiBtZWV0aW5ncyBhcyByZXF1aXJlZC5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBzZWVraW5nIGEgZmxleGlibGUgYW5kIHBvc2l0aXZlIGluZGl2aWR1YWwgd2hvIHdpbGwgYmUgYWJsZSB0byB0ZWFjaCBhIGJyb2FkIHJhbmdlIG9mIFBzeWNob2xvZ3kgYXQgYWxsIHVuZGVyZ3JhZHVhdGUgbGV2ZWxzLCB3aXRoIGEgcGFydGljdWxhciBmb2N1cyBvbiBGb3JlbnNpYyBQc3ljaG9sb2d5ICh0aG91Z2ggYWxsIGFyZWFzIG9mIGV4cGVydGlzZSBhcmUgd2VsY29tZSkgYW5kIGhhdmUgYSBCUFMtQWNjcmVkaXRlZCB1bmRlcmdyYWR1YXRlIGRlZ3JlZS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VZb3Ugd2lsbCBoYXZlIGV4cGVyaWVuY2Ugb2YgdGVhY2hpbmcgYWxsIGFzcGVjdHMgb2YgZ2VuZXJhbCBQc3ljaG9sb2d5LCBhcyB3ZWxsIGFzIHByaW9yIGV4cGVyaWVuY2Ugb2YgZGlmZmVyZW50IHRlYWNoaW5nIG1ldGhvZHMgYW5kL29yIGV4cGVyaWVuY2Ugb2YgdW5pdmVyc2l0eSBsZXZlbCB0ZWFjaGluZy4gQXMgYW4gZXhjZWxsZW50IGNvbW11bmljYXRvciwgeW91IHdpbGwgd29yayBzdWNjZXNzZnVsbHkgYXMgcGFydCBvZiBhIHNtYWxsIHRlYW0sIHdoaWxzdCBzaG93aW5nIHRoZSBhYmlsaXR5IHRvIG1hbmFnZSB5b3VyIG93biB0aW1lIHdpdGggbGltaXRlZCBzdXBlcnZpc2lvbi5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGlzIHJvbGUgaXMgYXZhaWxhYmxlIG9uIGEgam9iLXNoYXJlIGJhc2lzIHRoYXQgd291bGQgZW5hYmxlIHlvdSB0byBjb21wbGV0ZSBwb3N0Z3JhZHVhdGUgc3R1ZGllcyAoZS5nLiwgYSBQaEQpIGFsb25nc2lkZSB0aGUgcm9sZS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VGb3IgaW5mb3JtYWwgZW5xdWlyaWVzIGFib3V0IHRoZSByb2xlLCBwbGVhc2UgY29udGFjdCBQcm9mIFBldGVyIEhpbGxzOyBcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYSBocmVmPVwibWFpbHRvOnAuaGlsbHNAYmF0aHNwYS5hYy51a1wiXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlcC5oaWxsc0BiYXRoc3BhLmFjLnVrXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9hXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiVGVhY2hpbmcgRmVsbG93IGluIFBzeWNob2xvZ3kgKE1hdGVybml0eSBDb3ZlcikiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvZTA2MDQ2MmMtZWU5My00NGE3LWFkOWEtOTkxMTcyMTRhMmU0IiwicGF0aCI6Ii9lbi9wb3N0aW5ncy9lMDYwNDYyYy1lZTkzLTQ0YTctYWQ5YS05OTExNzIxNGEyZTQiLCJ3b3JrcGxhY2VfdHlwZSI6Im9uc2l0ZSIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJPbnNpdGUiLCJqb2IiOnsiaWQiOiIyMTU0OTgiLCJyZXF1aXNpdGlvbl9pZCI6IjM0NC8yMy8yNCIsImRlcGFydG1lbnQiOnsiaWQiOiIyNTQ4MCIsIm5hbWUiOiJTY2hvb2wgb2YgU2NpZW5jZXMifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5ODE2NyIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVRoaXMgaXMgYSBwYXJ0IHRpbWUgcm9sZSwgMjggaG91cnMgcGVyIHdlZWsuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlR3JhZGUgNiAtIMKjMjQsNDU3IC0gwqMyNywyNjEgcGVyIGFubnVtLCBwcm8gcmF0YSDCozMyLDMzMi3CozM2LDAyNFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVNvbWUgZXZlbmluZyBhbmQgd2Vla2VuZCB3b3JraW5nIGR1cmluZyB0ZXJtIHRpbWUgd2lsbCBiZSByZXF1aXJlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOiLCozI0LDQ1NyAtIMKjMjcsMjYxIHBlciBhbm51bSwgcHJvIHJhdGEgwqMzMiwzMzItwqMzNiwwMjQgIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMDhUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgY3VycmVudGx5IHNlZWtpbmcgYW4gZGVkaWNhdGVkIFRlY2huaWNhbCBEZW1vbnN0cmF0b3IgKG1vdmluZyBpbWFnZSlcdTAwM2NzdHJvbmdcdTAwM2UgXHUwMDNjL3N0cm9uZ1x1MDAzZXRvIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgZGVsaXZlcnkgb2Ygc3BlY2lhbGlzdCB0ZWNobmljYWwgc2tpbGxzIGRlbW9uc3RyYXRpb25zIHRvIGVpdGhlciBncm91cHMgb2Ygc3R1ZGVudHMgb3Igb25lLXRvLW9uZSBzdXBwb3J0IHRvIGluZGl2aWR1YWxzIGhlcmUgYXQgQmF0aCBTcGEgVW5pdmVyc2l0eVx1MDAzY2JyXHUwMDNlKFRoaXMgaXMgYSBwYXJ0IHRpbWUgcm9sZSwgMjggaG91cnMgcGVyIHdlZWspXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJwYXJ0X3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IlBhcnQgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSByb2xlIG9mIGEgVGVjaG5pY2FsIERlbW9uc3RyYXRvciBjb21iaW5lcyB0ZWNobmljYWwga25vd2xlZGdlIGFuZCBpbm5vdmF0aXZlIHRoaW5raW5nIHdpdGggdGhlIGRlc2lnbiBhbmQgZGVsaXZlcnkgb2YgaGFyZHdhcmUgYW5kIHNvZnR3YXJlIGRlbW9uc3RyYXRpb25zIHRvIHN0dWRlbnRzLiBXaXRoaW4gdGhlIHJvbGUgeW91IHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIGVuc3VyaW5nIHRoZSBtYWludGVuYW5jZSBvZiBzcGVjaWFsaXN0IGVxdWlwbWVudCBpcyBjYXJyaWVkIG91dCB3aXRoaW4gb3duIGFyZWEgb2Ygd29yayBhbmQgdGhhdCBoZWFsdGggYW5kIHNhZmV0eSBzdGFuZGFyZHMgYXJlIGNvbXBsaWVkIHdpdGguIFRoaXMgcm9sZSB3aWxsIGJlIGJhc2VkIGFyb3VuZCB0aGUgZGVsaXZlcnkgb2YgdHJhaW5pbmcgYW5kIGRlbW9uc3RyYXRpb24gb2YgbW92aW5nIGltYWdlIGNhcHR1cmUsIG1vdGlvbiBncmFwaGljcyBnZW5lcmF0aW9uLCBlZGl0aW5nIGFuZCBnYWxsZXJ5IHByZXNlbnRhdGlvbi4gSXQgd2lsbCBiZSBsb2NhdGVkIGF0IHRoZSBMb2Nrc2Jyb29rIFJkIGNhbXB1cyBtYWlubHkgd29ya2luZyB3aXRoIHN0dWRlbnRzIGVucm9sbGVkIG9uIGNvdXJzZXMgd2l0aGluIHRoZSBTY2hvb2xzIG9mIEFydCwgRmlsbSBhbmQgTWVkaWEgYW5kIHRoZSBTY2hvb2wgb2YgRGVzaWduLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUFzIFRlY2huaWNhbCBEZW1vbnN0cmF0b3IgeW91IHdpbGwgZGVtb25zdHJhdGUgY29tcGxleCB0ZWNobmljYWwgdGVjaG5pcXVlcyB0byBzdHVkZW50cyBmcm9tIHZhcmlvdXMgcHJvZ3JhbXMsIHN1cHBvcnQgaW5kaXZpZHVhbCBhbmQgZ3JvdXAgc3R1ZGVudCB3b3JrLCBhbmQgZGV2ZWxvcCBhbmQgcnVuIHdvcmtzaG9wcyBvbiB0aGUgdXNlIG9mIG91ciBmYWNpbGl0aWVzLiBZb3Ugd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgcHJlcGFyaW5nIHJlc291cmNlcyBhbmQgZXF1aXBtZW50LCBzdXBlcnZpc2luZyBzdHVkZW50cycgcHJvamVjdCB3b3JrLCBhbmQgZW5zdXJpbmcgaGVhbHRoIGFuZCBzYWZldHkgY29tcGxpYW5jZSB3aXRoaW4gdGhlIHdvcmtzcGFjZS4gQWRkaXRpb25hbGx5LCB5b3Ugd2lsbCBjb25kdWN0IHJpc2sgYXNzZXNzbWVudHMsIG1haW50YWluIGVxdWlwbWVudCwgYW5kIHN0YXkgdXBkYXRlZCB3aXRoIG5ldyB0ZWNobm9sb2dpZXMgYW5kIGNvbnRlbXBvcmFyeSBwcmFjdGljZXMgaW4geW91ciBmaWVsZC4gWW91IG1heSBhbHNvIGFkdmlzZSBvbiBmdXR1cmUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzIGFuZCBzdXBlcnZpc2UgYSBzbWFsbCB0ZWFtIG9mIHRlY2huaWNhbCBzdGFmZi5cdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgYmUgYSBxdWFsaWZpZWQgV29ya3Nob3AgYW5kIExhYm9yYXRvcnkgVGVjaG5pY2lhbiB3aXRoIGFuIE5WUTQsIE5FQlNTLCBvciBkZWdyZWUgaW4gYSByZWxldmFudCBwcmFjdGljYWwgc3ViamVjdCwgb3Igc2lnbmlmaWNhbnQgcHJvZmVzc2lvbmFsIGV4cGVyaWVuY2UgaW4gYSBzcGVjaWFsaXN0IGFyZWEuIFlvdSB3aWxsIGhhdmUgZXhwZXJpZW5jZSBpbiBkZW1vbnN0cmF0aW9uIG9yIHRyYWluaW5nLCBzdXBlcnZpc29yeSBza2lsbHMsIGFuZCBleHBlcnRpc2UgaW4gdmlkZW8gY2FwdHVyZSwgbW90aW9uIGdyYXBoaWNzLCBhbmltYXRpb24sIGFuZCBnYWxsZXJ5IHByZXNlbnRhdGlvbiBvZiBtb3ZpbmcgaW1hZ2VzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSBzaG91bGQgZGVtb25zdHJhdGUgYSBwcm9hY3RpdmUgYXBwcm9hY2ggdG8gbWFpbnRlbmFuY2UsIGRldmVsb3BtZW50LCBhbmQgc2FmZXR5LCBwb3NzZXNzIGV4Y2VsbGVudCBpbnRlcnBlcnNvbmFsLCB3cml0dGVuLCBhbmQgb3JhbCBjb21tdW5pY2F0aW9uIHNraWxscywgYW5kIGhhdmUgc3Ryb25nIElDVCBjYXBhYmlsaXRpZXMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlVGhlIHJvbGUgcmVxdWlyZXMgdGhlIGFiaWxpdHkgdG8gcGxhbiBhbmQgb3JnYW5pc2Ugd29yaywgbWFuYWdlIHJlc291cmNlcywgbGlhaXNlIHdpdGggc3RhZmYsIGRlcGFydG1lbnRzLCBhbmQgZXh0ZXJuYWwgYWdlbmNpZXMsIHVzZSBpbml0aWF0aXZlIGFuZCBwcm9ibGVtLXNvbHZpbmcgc2tpbGxzLCBtYWtlIGRlY2lzaW9ucywgYW5kIHdvcmsgdW5kZXIgcHJlc3N1cmUgdG8gdGlnaHQgZGVhZGxpbmVzLiBGbGV4aWJpbGl0eSwgYWRhcHRhYmlsaXR5LCBhbmQgYSBwb3NpdGl2ZSBhcHByb2FjaCB0byBjaGFuZ2UgYXJlIGVzc2VudGlhbC5cdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJUZWNobmljYWwgRGVtb25zdHJhdG9yIChNb3ZpbmcgSW1hZ2UpIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzY1OTAzMTc2LWVjZDEtNGExMi04N2MxLWNiOGE1NjRhNzQwMCIsInBhdGgiOiIvZW4vcG9zdGluZ3MvNjU5MDMxNzYtZWNkMS00YTEyLTg3YzEtY2I4YTU2NGE3NDAwIiwid29ya3BsYWNlX3R5cGUiOiJvbnNpdGUiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiT25zaXRlIiwiam9iIjp7ImlkIjoiMjE2Mzc4IiwicmVxdWlzaXRpb25faWQiOiIzNDcvMjMvMjQiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMzA3NDYiLCJuYW1lIjoiVGVjaG5pY2FsIFNlcnZpY2VzIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTkiLCJjaXR5IjoiQmF0aCIsIm5hbWUiOiJCYXRoIC0gTG9ja3Nicm9vayBDYW1wdXMiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5ODQ3MSIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUR1ZSB0byB0aGUgbmF0dXJlIG9mIHRoaXMgcG9zdCByZWdyZXRmdWxseSB3ZSBjYW5ub3QgYWNjZXB0IGFwcGxpY2F0aW9ucyB0aGF0IGRvIG5vdCBoYXZlIHRoZSBSaWdodCB0byBXb3JrL0xpdmUgaW4gdGhlIFVLIHRoZXJlZm9yZSB5b3VyIGFwcGxpY2F0aW9uIHdpbGwgYmUgcmVqZWN0ZWQuXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VHcmFkZSBBYzIgLSDCozE5LjIzIHBlciBob3VyIChhIG11bHRpcGxpZXIgb2YgMi41IG1heSBiZSBhcHBsaWVkIGRlcGVuZGluZyBvbiB0aGUgd29yayBvZmZlcmVkKVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VJbnRlcnZpZXcgRGF0ZSAtIEZyb20gNXRoIEF1Z3VzdCAyMDI0Llx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VQbGVhc2Ugbm90ZTpcdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlSU5URVJWSUVXUyBXSUxMIEJFIE9OR09JTkcgQU5EIFRIRSBKT0IgV0lMTCBDTE9TRSBPTkNFIEFMTCBQT1NJVElPTlMgQVJFIEZJTExFRFx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VQbGVhc2UgZW1haWwgRGF2aWQgQ29iYiBkaXJlY3RseSBkLmNvYmJAYmF0aHNwYS5hYy51ayBmb3IgYW55IHF1ZXJpZXMgcmVnYXJkaW5nIHRoaXMgcG9zaXRpb24uXHUwMDI2bmJzcDtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOm51bGwsImNvbXBlbnNhdGlvbl9taW5pbXVtIjpudWxsLCJjb21wZW5zYXRpb25fbWF4aW11bSI6bnVsbCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTMxVDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIHNlZWtpbmcga25vd2xlZGdlYWJsZSBhbmQgZW50aHVzaWFzdGljIGNvbXB1dGluZyBlZHVjYXRvcnMgdG8gc3VwcG9ydCBsZWFybmluZyB3aXRoaW4gdGhlIEdhbWVzIERldmVsb3BtZW50IGFuZCBDcmVhdGl2ZSBDb21wdXRpbmcgKEdhbWVzKSBjb3Vyc2VzIGF0IEJhdGggU3BhIFVuaXZlcnNpdHkuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlVGhlIGluZGl2aWR1YWwocykgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHBsYW5uaW5nLCBkZWxpdmVyeSBhbmQgYXNzZXNzbWVudCBvZiBtb2R1bGVzIGZvY3VzZWQgb24gc3ViamVjdHMgd2l0aGluIHRoZSBmaWVsZCBvZiBnYW1lcyBkZXNpZ24gYW5kIGRldmVsb3BtZW50Llx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZsZXhpYmxlIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGbGV4aWJsZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSBzdWNjZXNzZnVsIGNhbmRpZGF0ZShzKSB3aWxsIHBsYXkgYW4gaW1wb3J0YW50IHJvbGUgaW4gZGV2ZWxvcGluZyB0aGUga25vd2xlZGdlIGFuZCBza2lsbHMgb2YgdW5kZXJncmFkdWF0ZSBzdHVkZW50cy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGV5IHdpbGwgd29yayBhcyBwYXJ0IG9mIHRoZSBjb21wdXRpbmcgdGVhbSB0byBwcm92aWRlIG1lbnRvcnNoaXAsIGRlbGl2ZXIgcm9idXN0IGFzc2Vzc21lbnQgYW5kIG92ZXJhbGwgbWFpbnRhaW4gYSBoaWdoLWxldmVsIGluZHVzdHJ5LWluZm9ybWVkIGV4cGVyaWVuY2UuXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIGV4cGVyaWVuY2UgaW4gZGVsaXZlcmluZyBhbmQgbGVhZGluZyB0ZWFjaGluZyBhbmQgbGVhcm5pbmcgaW4gYSBGdXJ0aGVyIGFuZC9vciBIaWdoZXIgRWR1Y2F0aW9uIGluc3RpdHV0aW9uIGluIGdhbWVzIGRldmVsb3BtZW50IG9yIHNpbWlsYXIgQ3JlYXRpdmUgQ29tcHV0aW5nIHN1YmplY3RzLiBXZSBleHBlY3QgdGhhdCBhcyBhIGdhbWVzIGFuZCBjcmVhdGl2ZSB0ZWNobm9sb2d5IHNwZWNpYWxpc3QsIHlvdSB3aWxsIGJlIGFjdGl2ZWx5IGVuZ2FnZWQgaW4gcmVsYXRlZCBwcmFjdGljZSBhbmQgYWJsZSB0byB0cmFuc2xhdGUgeW91ciBwcm9mZXNzaW9uYWwgaW50ZXJlc3RzIGludG8gdGhlIHRlYWNoaW5nIGFuZCBsZWFybmluZyBwcmFjdGljZXMgb24gdGhlIGNvdXJzZS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGlkZWFsbHkgaGF2ZSBhZGRpdGlvbmFsIGluZHVzdHJ5IGFuZC9vciB0ZWFjaGluZyBleHBlcmllbmNlIHVzaW5nIG1vZGVybiBnYW1lIGVuZ2luZXMgc3VjaCBVbml0eTNEIGFuZCBVbnJlYWwsIGFuZCBzb21lIGtub3dsZWRnZSBvZiBvdGhlcnMuIFlvdSB3aWxsIGhhdmUgYSBkZWdyZWUgaW4gYSByZWxldmFudCBkaXNjaXBsaW5lLCBhbmQgeW91IG1heSBoYXZlLCBvciBiZSB3b3JraW5nIHRvd2FyZHMsIGEgcG9zdCBncmFkdWF0ZSBxdWFsaWZpY2F0aW9uLiBFeHBlcmllbmNlIGluIGEgZ2FtZSBwcm9kdWN0aW9uIHJvbGUgaXMgYSBib251cy5cdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJBc3NvY2lhdGUgTGVjdHVyZXIg4oCTIEdhbWVzIERldmVsb3BtZW50IiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzBjMDA2ZTFhLTkwN2ItNDI1Mi1iZjQxLTcyZjcyZDdhODY0OSIsInBhdGgiOiIvZW4vcG9zdGluZ3MvMGMwMDZlMWEtOTA3Yi00MjUyLWJmNDEtNzJmNzJkN2E4NjQ5Iiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjE2Njc0IiwicmVxdWlzaXRpb25faWQiOiIiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMTkwODgiLCJuYW1lIjoiU2Nob29sIG9mIERlc2lnbiJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk4NDgzIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhpcyBwb3N0IHJlZ3JldGZ1bGx5IHdlIGNhbm5vdCBhY2NlcHQgYXBwbGljYXRpb25zIHRoYXQgZG8gbm90IGhhdmUgdGhlIFJpZ2h0IHRvIFdvcmsvTGl2ZSBpbiB0aGUgVUsgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBiZSByZWplY3RlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC0gRnJvbSA1dGggQXVndXN0IDIwMjQuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBub3RlOlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VJTlRFUlZJRVdTIFdJTEwgQkUgT05HT0lORyBBTkQgVEhFIEpPQiBXSUxMIENMT1NFIE9OQ0UgQUxMIFBPU0lUSU9OUyBBUkUgRklMTEVEXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBlbWFpbCBEYXZpZCBDb2JiIGRpcmVjdGx5IGQuY29iYkBiYXRoc3BhLmFjLnVrIGZvciBhbnkgcXVlcmllcyByZWdhcmRpbmcgdGhpcyBwb3NpdGlvbi5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOm51bGwsImNvbXBlbnNhdGlvbl9taW5pbXVtIjpudWxsLCJjb21wZW5zYXRpb25fbWF4aW11bSI6bnVsbCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTMxVDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIHNlZWtpbmcga25vd2xlZGdlYWJsZSBhbmQgZW50aHVzaWFzdGljIGNvbXB1dGluZyBlZHVjYXRvcnMgdG8gc3VwcG9ydCBsZWFybmluZyB3aXRoaW4gdGhlIEJTYyAoSE9OUykgQ29tcHV0aW5nIGNvdXJzZSBhdCBCYXRoIFNwYSBVbml2ZXJzaXR5LiBcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlVGhlIGluZGl2aWR1YWwocykgd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgdGhlIHBsYW5uaW5nLCBkZWxpdmVyeSBhbmQgYXNzZXNzbWVudCBvZiBtb2R1bGVzIGZvY3VzZWQgb24gc3ViamVjdHMgd2l0aGluIHRoZSBmaWVsZCBvZiBDb21wdXRpbmcuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZsZXhpYmxlIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGbGV4aWJsZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSBzdWNjZXNzZnVsIGNhbmRpZGF0ZShzKSB3aWxsIHBsYXkgYW4gaW1wb3J0YW50IHJvbGUgaW4gZGV2ZWxvcGluZyB0aGUga25vd2xlZGdlIGFuZCBza2lsbHMgb2YgdW5kZXJncmFkdWF0ZSBzdHVkZW50cy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGV5IHdpbGwgd29yayBhcyBwYXJ0IG9mIHRoZSBjb21wdXRpbmcgdGVhbSB0byBwcm92aWRlIG1lbnRvcnNoaXAsIGRlbGl2ZXIgcm9idXN0IGFzc2Vzc21lbnQgYW5kIG92ZXJhbGwgbWFpbnRhaW4gYSBoaWdoLWxldmVsIGluZHVzdHJ5LWluZm9ybWVkIGV4cGVyaWVuY2UuXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIGV4cGVyaWVuY2UgaW4gZGVsaXZlcmluZyBhbmQgbGVhZGluZyB0ZWFjaGluZyBhbmQgbGVhcm5pbmcgaW4gYSBGdXJ0aGVyIGFuZC9vciBIaWdoZXIgRWR1Y2F0aW9uIGluc3RpdHV0ZSBpbiBDb21wdXRpbmcgc3ViamVjdHMuIFdlIGV4cGVjdCB0aGF0IGFzIGEgQ29tcHV0aW5nIHNwZWNpYWxpc3QsIHlvdSB3aWxsIGJlIGFjdGl2ZWx5IGVuZ2FnZWQgaW4gY29tcHV0aW5nIHByYWN0aWNlIGFuZCBhYmxlIHRvIHRyYW5zbGF0ZSB5b3VyIHByb2Zlc3Npb25hbCBpbnRlcmVzdHMgaW50byB0aGUgdGVhY2hpbmcgYW5kIGxlYXJuaW5nIHByYWN0aWNlcyBvbiB0aGUgY291cnNlLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaGF2ZSBpbmR1c3RyeSBhbmQvb3IgdGVhY2hpbmcgZXhwZXJpZW5jZSB3aXRoaW4gb25lIG9yIG1vcmUgb2YgdGhlIGZvbGxvd2luZyBhcmVhczogT08gc29mdHdhcmUgZGV2ZWxvcG1lbnQgdXNpbmcgQysrLCBzb2Z0d2FyZSBlbmdpbmVlcmluZywgYW5kIGJ1c2luZXNzIGFuYWx5c2lzLiBZb3Ugd2lsbCBoYXZlIGEgZGVncmVlIGluIGEgcmVsZXZhbnQgZGlzY2lwbGluZSwgYW5kIHlvdSBtYXkgaGF2ZSwgb3IgYmUgd29ya2luZyB0b3dhcmRzLCBhIHBvc3QgZ3JhZHVhdGUgcXVhbGlmaWNhdGlvbi4gRXhwZXJpZW5jZSBkZXZlbG9waW5nIGNyZWF0aXZlIGFuZCBlbnRlcnRhaW5tZW50IHNvZnR3YXJlIGlzIGEgYm9udXMuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiQXNzb2NpYXRlIExlY3R1cmVyIC0gQ29tcHV0aW5nIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzRmNjdlNTg1LTUyNDgtNGUxYS1iM2IxLTU3OWY5NWVjNzIyNyIsInBhdGgiOiIvZW4vcG9zdGluZ3MvNGY2N2U1ODUtNTI0OC00ZTFhLWIzYjEtNTc5Zjk1ZWM3MjI3Iiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjE2Njg2IiwicmVxdWlzaXRpb25faWQiOiIiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMTkwODgiLCJuYW1lIjoiU2Nob29sIG9mIERlc2lnbiJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk4ODIyIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlV2UgZW5jb3VyYWdlIGFwcGxpY2F0aW9ucyBmcm9tIGRpc2FibGVkIHBlb3BsZSBhbmQgY2FuIHByb3ZpZGUgcmVhc29uYWJsZSBhZGp1c3RtZW50cywgc28gcGxlYXNlIGxldCB1cyBrbm93IGlmIHRoZXJlIGlzIGFueXRoaW5nIHdlIGNhbiBkbyB0byBtYWtlIGFwcGx5aW5nIGZvciB0aGlzIHJvbGUgbW9yZSBhY2Nlc3NpYmxlIGZvciB5b3UuIFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVNhbGFyeTogR3JhZGUgNSAtIMKjMjcsOTc5IHRvIMKjMzEsMzk2IChwZXIgYW5udW0pLCDCozUsNTk1LjgwIHRvIMKjNiwyNzkuMjAgKHByby1yYXRhKVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGlzIGlzIGEgMC4yIEZURSBwYXJ0LXRpbWUsIG9uZSB5ZWFyIGZpeGVkLXRlcm0gcm9sZS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUmVjZW50IGFkanVzdG1lbnQgaW4gdGhlIFVL4oCZcyBTcG9uc29yc2hpcCBUaHJlc2hvbGRcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVBsZWFzZSBub3RlIHRoYXQgYXMgb2YgQXByaWwgMjAyNCwgdGhlcmUgaGFzIGJlZW4gYSBjaGFuZ2UgaW4gdGhlIFVL4oCZcyBzcG9uc29yc2hpcCB0aHJlc2hvbGQuIFJlZ3JldHRhYmx5IGFzIHRoZSBzYWxhcnkgZm9yIHRoaXMgcm9sZSBmYWxscyBiZW5lYXRoIHRoaXMsIHlvdSB3aWxsIG5vdCBiZSBlbGlnaWJsZSBmb3Igc3BvbnNvcnNoaXAgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJlamVjdGVkLlx1MDAyNm5ic3A7XHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMyNyw5NzkgLSDCozMxLDM5NiAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6Mjc5NzkuMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjMxMzk2LjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0xOVQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBjdXJyZW50bHlcdTAwM2NzdHJvbmdcdTAwM2UgXHUwMDNjL3N0cm9uZ1x1MDAzZXNlZWtpbmcgdG8gYXBwb2ludCBhIFJlc2VhcmNoIEFzc2lzdGFudCB0byBzdXBwb3J0IHRoZSBjcmVhdGlvbiBhbmQgZGV2ZWxvcG1lbnQgb2YgYSBkaXNhYmlsaXR5IGh1YiB3aGljaCBhaW1zIHRvIGJyaW5nIHRvZ2V0aGVyIGFuZCBkaXNzZW1pbmF0ZSBXZSBBcmUgVGhlIFBlb3BsZSByZXNlYXJjaCB0byB0aGUgU291dGggV2VzdC4gXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBBcmUgVGhlIFBlb3BsZSAoV0FUUCkgaXMgYSBzbWFsbCByZXNlYXJjaCB0ZWFtIG9mIGRpc2FibGVkIGFjYWRlbWljcyBhbmQgbm9uLWRpc2FibGVkIGFsbGllcyBlbmdhZ2VkIGluIGRpc2FiaWxpdHkgcmVzZWFyY2ggYW5kIGRpc2FiaWxpdHkgYWN0aXZpc20uIFdlJ3ZlIGJlZW4gYXdhcmRlZCBhIGZpdmUteWVhciwgwqMxbWlsbGlvbiBncmFudCBmcm9tIHRoZSBcdTAwM2NhIGhyZWY9XCJodHRwczovL3dlbGxjb21lLm9yZy9cIlx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVdlbGxjb21lIFRydXN0XHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9hXHUwMDNlIHRvIGV4cGxvcmUgaXNzdWVzIHdoaWNoIGFmZmVjdCBkaXNhYmxlZCBwZW9wbGUgaW4gU291dGggV2VzdCBFbmdsYW5kLlx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZpeGVkX3Rlcm1fcGFydF90aW1lIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGaXhlZCBUZXJtIC0gUGFydCBUaW1lIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIHJvbGUgaW52b2x2ZXMgZGV2ZWxvcGluZyBhbiB1bmRlcnN0YW5kaW5nIG9mIG9uZ29pbmcgcmVzZWFyY2ggYnkgRGlzYWJsZWQgUGVvcGxl4oCZcyBPcmdhbmlzYXRpb25zIChEUE9zKSwgY3JlYXRpbmcgYSBkaXNhYmlsaXR5IHRyYWluaW5nIHByb2dyYW1tZSBsZWQgYnkgZGlzYWJsZWQgaW5kaXZpZHVhbHMsIGFuZCBvcmdhbml6aW5nIGV2ZW50cyB0byBzaG93Y2FzZSBmaW5kaW5ncy4gWW91IHdpbGwgZW5zdXJlIHRoZSBhY2Nlc3NpYmxlIGRpc3NlbWluYXRpb24gb2YgcmVzZWFyY2ggcmVzdWx0cywgaW52ZXN0aWdhdGUgY29sbGFib3JhdGl2ZSBvcHBvcnR1bml0aWVzIHdpdGggRFBPcywgYW5kIGJ1aWxkIHJlbGF0aW9uc2hpcHMgd2l0aCBjb21tdW5pdHkgY29udGFjdHMgZm9yIGZ1dHVyZSBmdW5kaW5nLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUtleSByZXNwb25zaWJpbGl0aWVzIGluY2x1ZGUgcHJvdmlkaW5nIGd1aWRhbmNlIHRvIGNvbW11bml0eSBwYXJ0bmVycywgY29udHJpYnV0aW5nIHRvIG1lZXRpbmdzLCBhZGhlcmluZyB0byBIZWFsdGggYW5kIFNhZmV0eSBndWlkZWxpbmVzLCBhbmQgZGV2ZWxvcGluZyByZXNlYXJjaCBtZXRob2RzIHdpdGhpbiB0aGUgcHJvZ3JhbW1lIGZyYW1ld29yay5cdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgYmUgcGFzc2lvbmF0ZSBhYm91dCBkaXNhYmlsaXR5IGVxdWFsaXR5IGFuZCBob2xkIGEgZ29vZCBmaXJzdCBkZWdyZWUgaW4gYSByZWxldmFudCBkaXNjaXBsaW5lIHN1Y2ggYXMgRGlzYWJpbGl0eSBTdHVkaWVzLCBQc3ljaG9sb2d5LCBTb2NpYWwgU2NpZW5jZSwgQXJ0cywgZXRjLiBZb3Ugd2lsbCBhbHNvIGhhdmUgZGVtb25zdHJhYmxlIGV4cGVyaWVuY2Ugb2Ygd29ya2luZyBpbiBhIGNvLXByb2R1Y3RpdmUgd2F5IHdpdGggcHJvamVjdCBwYXJ0bmVycywgY29udHJpYnV0aW5nIHRvIGEgY29tbXVuaXR5LCBjaGFyaXR5IG9yIHJlc2VhcmNoIGVudmlyb25tZW50Llx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIGFsc28gc2hvdyBhIGRlbW9uc3RyYWJsZSB1bmRlcnN0YW5kaW5nIG9mIHRoZSBzZW5zaXRpdml0aWVzIG9mIHdvcmtpbmcgd2l0aCB1bmRlcnJlcHJlc2VudGVkIGdyb3VwcywgYW5kIHRvIHJlc3BvbmQgdG8gcG90ZW50aWFsIGJhcnJpZXJzIGluIGEgY29tcGFzc2lvbmF0ZSB3YXkuIEluIGFkZGl0aW9uLCB5b3Ugd2lsbCBiZSBhbiBleGNlbGxlbnQgcHJvYmxlbSBzb2x2ZXIsIGZsZXhpYmxlLCBhZGFwdGFibGUgYW5kIGEgY29tbWl0dGVkIHRlYW0gcGxheWVyLiBcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUZvciBhbiBpbmZvcm1hbCBkaXNjdXNzaW9uIHJlZ2FyZGluZyB0aGlzIHBvc3QsIHBsZWFzZSBjb250YWN0IHRoZSB0ZWFtIGF0OiBcdTAwM2NhIGhyZWY9XCJtYWlsdG86V2VBcmVUaGVQZW9wbGVAYmF0aHNwYS5hYy51a1wiXHUwMDNlV2VBcmVUaGVQZW9wbGVAYmF0aHNwYS5hYy51a1x1MDAzYy9hXHUwMDNlIFx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiUmVzZWFyY2ggQXNzaXN0YW50IC0gV2UgQXJlIFRoZSBQZW9wbGUgcHJvamVjdCIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9kMTI3YTg2OC0yYTAyLTQ4MmEtYWFlOC1kOTM0M2MwZDE2N2UiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2QxMjdhODY4LTJhMDItNDgyYS1hYWU4LWQ5MzQzYzBkMTY3ZSIsIndvcmtwbGFjZV90eXBlIjoiaHlicmlkIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ikh5YnJpZCIsImpvYiI6eyJpZCI6IjIxNzAzMiIsInJlcXVpc2l0aW9uX2lkIjoiMzYwXzIzXzI04oCvICIsImRlcGFydG1lbnQiOnsiaWQiOiIyNTQ3OSIsIm5hbWUiOiJTY2hvb2wgb2YgRWR1Y2F0aW9uIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTgiLCJjaXR5IjoiQmF0aCAiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIxOTkzNjAiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VUaGlzIHJvbGUgaXMgYSBvbmUgeWVhciBmaXhlZC10ZXJtIGNvbnRhY3QuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVNhbGFyeTogR3JhZGUgOHMsIMKjNDIsOTc4IHRvIMKjNDQsMjYzXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqM0Miw5NzggLSDCozQ0LDI2MyAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6NDI5NzguMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjQ0MjYzLjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0xMVQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUJhdGggU3BhIFVuaXZlcnNpdHkgaXMgc2Vla2luZyBhIGR5bmFtaWMgYW5kIGlubm92YXRpdmUgSGVhZCBvZiBSZWNydWl0bWVudCB0byBsZWFkIGFuZCBkZWxpdmVyIGN1dHRpbmctZWRnZSByZXNvdXJjaW5nIHNvbHV0aW9ucy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGlzIHJvbGUgZm9jdXNlcyBvbiBkZXZlbG9waW5nIHN1c3RhaW5hYmxlIHN0YWZmIHJlY3J1aXRtZW50IHN0cmF0ZWdpZXMsIG9wdGltaXppbmcgb3VyIGVtcGxveWVyIHZhbHVlIHByb3Bvc2l0aW9uIChFVlApLCBhbmQgZW5oYW5jaW5nIG91ciByZWNydWl0bWVudCBicmFuZGluZyBhY3Jvc3MgYWxsIHBsYXRmb3Jtcy4gKFRoaXMgaXMgYSAxIHllYXIgRml4ZWQgVGVybSBDb250cmFjdClcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmaXhlZF90ZXJtX2Z1bGxfdGltZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRml4ZWQgVGVybSAtIEZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIG92ZXJzZWUgYSBzbW9vdGggYW5kIGVmZmljaWVudCByZWNydWl0bWVudCBwcm9jZXNzLCBlbmhhbmNpbmcgYm90aCB0aGUgY2FuZGlkYXRlIGFuZCBoaXJpbmcgbWFuYWdlciBleHBlcmllbmNlIGFuZCB3aWxsIGxlYWQgdGhlIHJlY3J1aXRtZW50IHRlYW0sIHByb3ZpZGluZyBleHBlcnQgZ3VpZGFuY2UgYW5kIHN1cHBvcnQuIENvbGxhYm9yYXRpbmcgd2l0aCBzZW5pb3IgbWFuYWdlcnMsIHlvdSB3aWxsIHVuZGVyc3RhbmQgc3RyYXRlZ2ljIHJlY3J1aXRtZW50IG5lZWRzIGFuZCBkZXRlcm1pbmUgdGhlIGJlc3QgcmVzb3VyY2luZyBzdHJhdGVnaWVzLiBQcm9hY3RpdmUgc291cmNpbmcgb2YgaGFyZC10by1maWxsIG9yIHNlbmlvciByb2xlcyB0aHJvdWdoIGhlYWRodW50aW5nLCBtaWNyb3NpdGVzLCBhbmQgdmlkZW8gY29udGVudCB3aWxsIGJlIGVzc2VudGlhbC5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VTZXR0aW5nIGFuZCByZXZpZXdpbmcga2V5IHBlcmZvcm1hbmNlIGluZGljYXRvcnMgKEtQSXMpIHdpbGwgYmUgYSBjcml0aWNhbCBwYXJ0IG9mIHRoZSByb2xlLCBlbnN1cmluZyBlZmZlY3RpdmUgcmVjcnVpdG1lbnQgcHJvY2Vzc2VzIGFuZCBhbm51YWwgcmVwb3J0aW5nIG9uIHRyZW5kcy4gWW91IHdpbGwgZW1iZWQgb3VyIEVWUCB0aHJvdWdoIHJlY3J1aXRtZW50IG1hcmtldGluZyB0ZWNobmlxdWVzIGFsaWduZWQgd2l0aCB0aGUgVW5pdmVyc2l0eSdzIHZhbHVlcyBhbmQgY3VsdHVyZSBhbmQgd2lsbCBidWlsZCBCU1XigJlzIHByZXNlbmNlIG9uIHNvY2lhbCBtZWRpYSB0byBpbmNyZWFzZSBlbmdhZ2VtZW50LiBJbXBsZW1lbnRpbmcgaW5pdGlhdGl2ZXMgdG8gaW1wcm92ZSB3b3JrZm9yY2UgZGl2ZXJzaXR5IGFuZCBlbnN1cmluZyByZWNydWl0bWVudCBlZmZvcnRzIGFsaWduIHdpdGggdGhlIFVuaXZlcnNpdHnigJlzIEVxdWFsaXR5LCBEaXZlcnNpdHksIGFuZCBJbmNsdXNpb24gKEVEXHUwMDI2YW1wO0kpIFN0cmF0ZWd5IGlzIHZpdGFsLiBJbmNsdXNpdmUgcmVjcnVpdG1lbnQgcHJhY3RpY2VzIG11c3QgYmUgbWFpbnRhaW5lZCB0aHJvdWdob3V0IHRoZSBjYW5kaWRhdGUgam91cm5leSwgYW5kIHlvdSB3aWxsIGluZmx1ZW5jZSBsaW5lIG1hbmFnZXJzIHRvIHByaW9yaXRpc2UgdGFsZW50IGRpdmVyc2l0eS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VFc3RhYmxpc2hpbmcgYW5kIG1hbmFnaW5nIGEgdGFsZW50IHBvb2wgcHJvY2VzcyBmb3IgZnV0dXJlIHZhY2FuY2llcyB3aWxsIGJlIHBhcnQgb2YgeW91ciByZW1pdCwgYXMgd2VsbCBhcyBidWlsZGluZyBleHRlcm5hbCBuZXR3b3JrcyB0byBzdGF5IHVwZGF0ZWQgb24gcmVjcnVpdG1lbnQgdHJlbmRzIGFuZCBhZHZpc2luZyB0aGUgVW5pdmVyc2l0eSBhY2NvcmRpbmdseS5cdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaGF2ZSBwcm92ZW4gZXhwZXJ0aXNlIGluIGVtcGxveWVlIHJlc291cmNpbmcgc3RyYXRlZ2llcyBhbmQgcmVjcnVpdG1lbnQgcHJvY2Vzc2VzLCBzdHJvbmcgbGVhZGVyc2hpcCBhbmQgdGVhbSBtYW5hZ2VtZW50IHNraWxscywgYW5kIGV4cGVyaWVuY2UgaW4gZGV2ZWxvcGluZyBhbmQgaW1wbGVtZW50aW5nIEVWUC5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VQcm9maWNpZW5jeSBpbiB1dGlsaXNpbmcgc29jaWFsIG1lZGlhIGZvciByZWNydWl0bWVudCwgYSBjb21taXRtZW50IHRvIGRpdmVyc2l0eSBhbmQgaW5jbHVzaW9uIGluIHRoZSB3b3JrcGxhY2UsIGFuZCBleGNlbGxlbnQgY29tbXVuaWNhdGlvbiBhbmQgcmVsYXRpb25zaGlwLWJ1aWxkaW5nIHNraWxscyBhcmUgZXNzZW50aWFsLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkhlYWQgb2YgUmVjcnVpdG1lbnQiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvZjNkMmIwNWUtZjY0Zi00OTJjLTkxNGItOWY1ZTNkYmUxYWFlIiwicGF0aCI6Ii9lbi9wb3N0aW5ncy9mM2QyYjA1ZS1mNjRmLTQ5MmMtOTE0Yi05ZjVlM2RiZTFhYWUiLCJ3b3JrcGxhY2VfdHlwZSI6Imh5YnJpZCIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJIeWJyaWQiLCJqb2IiOnsiaWQiOiIyMTc1NjYiLCJyZXF1aXNpdGlvbl9pZCI6IjI1NC0yMy0yNCIsImRlcGFydG1lbnQiOnsiaWQiOiIxOTA4NyIsIm5hbWUiOiJIUiJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk5ODEwIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhpcyBwb3N0IHJlZ3JldGZ1bGx5IHdlIGNhbm5vdCBhY2NlcHQgYXBwbGljYXRpb25zIHRoYXQgZG8gbm90IGhhdmUgdGhlIFJpZ2h0IHRvIFdvcmsvTGl2ZSBpbiB0aGUgVUsgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBiZSByZWplY3RlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVRlbXBvcmFyeSwgZml4ZWQgdGVybSBTZW1lc3Rlci9UcmltZXN0ZXIgb25lIGFuZCB0d28gMjAyNCAtMjAyNS4gUGFydCBUaW1lIEhvdXJzIHRvIGJlIGFncmVlZC5cdTAwM2Niclx1MDAzZVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUdlbmVyYWwgdGVhY2hpbmcgY29tbWVuY2VzIHdlZWsgYmVnaW5uaW5nIDMwdGggU2VwdGVtYmVyIDIwMjQgYnV0IG1vZHVsZSBkZXZlbG9wbWVudCB3aWxsIGJlZm9yZSB0aGVzZSBkYXRlLiBPdXIgMjAyNC81IHRlcm0gZGF0ZXMgY2FuIGJlIGZvdW5kIGF0IGh0dHBzOi8vd3d3LmJhdGhzcGEuYWMudWsvYWJvdXQtdXMvdGVybS1kYXRlcy9cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOm51bGwsImNvbXBlbnNhdGlvbl9taW5pbXVtIjpudWxsLCJjb21wZW5zYXRpb25fbWF4aW11bSI6bnVsbCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTE5VDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIGxvb2tpbmcgZm9yIHRhbGVudGVkIEFzc29jaWF0ZSBMZWN0dXJlcnMgaW4gTGF3IHRvIGpvaW4gb3VyIGNvbGxlZ2lhbCB0ZWFtLCBjb250cmlidXRpbmcgdG8gdGVhY2hpbmcgYW5kIGRldmVsb3BtZW50IG9mIGxhdyBtb2R1bGVzIG9uIGEgcGFydCB0aW1lIGJhc2lzIGF0IHZhcmlvdXMgdGltZXMgdGhyb3VnaCB0aGUgMjAyNC8yMDI1IGFjYWRlbWljIHllYXIuXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIEFzc29jaWF0ZSBMZWN0dXJlciBwb3N0cyByZXF1aXJlIGxlY3R1cmluZywgdGFraW5nIHNlbWluYXIgZ3JvdXBzLCBhc3Nlc3NtZW50IGFuZCB3b3JraW5nIGFzIHBhcnQgb2YgYSB0ZWFtIG9mIHR1dG9ycy5cdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZmxleGlibGUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZsZXhpYmxlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQXQgQmF0aCBTcGEgVW5pdmVyc2l0eSB3ZSB3b3JrIHdpdGggb25lIGNsZWFyIHZpc2lvbjogdG8gYmUgYSBsZWFkaW5nIHVuaXZlcnNpdHkgaW4gY3JlYXRpdml0eSwgY3VsdHVyZSBhbmQgZW50ZXJwcmlzZS4gQW5kIHdlIHBsYWNlIGNvbGxhYm9yYXRpb24gYXQgdGhlIGhlYXJ0IG9mIGV2ZXJ5dGhpbmcgd2UgZG8uIFdpdGggZXZlciBncm93aW5nIHN0dWRlbnQgbnVtYmVycywgd2UgbWFrZSBzdXJlIG91ciBwZW9wbGUgYXJlIGVuZ2FnZWQgYW5kIGVtcG93ZXJlZCBieSBibGVuZGluZyBkaWdpdGFsIHRlY2hub2xvZ2llcywgaW50ZXJuYXRpb25hbCBwZXJzcGVjdGl2ZXMsIHdvcmstb3JpZW50ZWQgY29ubmVjdGlvbnMgYW5kIGluc3BpcmF0aW9uYWwgdGVhY2hpbmcuIFRvZ2V0aGVyIHdl4oCZcmUgb24gYSBqb3VybmV5IHRvIHRyYW5zZm9ybSBvdXIgc3R1ZGVudHPigJkgbGl2ZXMuIEFuZCBpdCBzdGFydHMgd2l0aCBwZW9wbGUgbGlrZSB5b3UuXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlQWJvdXQgQmF0aCBCdXNpbmVzcyBTY2hvb2xcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VCYXRoIEJ1c2luZXNzIFNjaG9vbCBpcyBzZXQgd2l0aGluIGEgYmVhdXRpZnVsIGNvdW50cnlzaWRlIGxvY2F0aW9uLCBjbG9zZSB0byB0aGUgd29ybGQgaGVyaXRhZ2UgY2l0eSBvZiBCYXRoLiBPdXIgc3RhZmYgYW5kIHN0dWRlbnRzIGFyZSBldGhpY2FsbHkgYXdhcmUsIHNvY2lhbGx5IGVuZ2FnZWQgYW5kIGdsb2JhbGx5IGNvbm5lY3RlZCB0aHJvdWdoIG91ciBsaW5rcyB0byByZXNlYXJjaCwgYW5kIHByb2Zlc3Npb25hbCBhbmQgY3JlYXRpdmUgaW5kdXN0cnkgbmV0d29ya3MuXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VPdXIgTGF3IERlZ3JlZVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VPdXIgbmV3IExMQiBMYXcgZGVncmVlIGhhcyBiZWVuIGRlc2lnbmVkIHRvIGJlIHVuaXF1ZSBhbmQgaW5jb3Jwb3JhdGVzIGEgcmFuZ2Ugb2YgYnVzaW5lc3Mgc2tpbGxzIGFuZCBvcHRpb25hbCBtb2R1bGVzIHdoaWxzdCBlbmNvbXBhc3NpbmcgdGhlIGZvdW5kYXRpb25zIG9mIGxlZ2FsIGtub3dsZWRnZSBmb3VuZCBpbiBTUUUgMSBhbmQgbWFueSBlbGVtZW50cyBvZiBTUUUgMi5cdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgQmF0aCBTcGEgTExCIGlzIGF0IHRoZSBjdXR0aW5nIGVkZ2Ugb2YgbGVnYWwgZWR1Y2F0aW9uLiBPdXIgTExCIG9mZmVycyBhIHJhbmdlIG9mIGF1dGhlbnRpYyBhc3Nlc3NtZW50cywgdGhlIG9mZmVyIG9mIG11bHRpcGxlIHBsYWNlbWVudCBvcHBvcnR1bml0aWVzIGluY2x1ZGluZyBhIHBsYWNlbWVudCB5ZWFyLCBhcyB3ZWxsIGFzIHRoZSBvcHBvcnR1bml0eSBvZiB1bmRlcnRha2luZyB0aGUgTGF3IENsaW5pYyBtb2R1bGUgZm9yIGZpbmFsIHllYXIgc3R1ZGVudHMuXHUwMDI2bmJzcDsgT3VyIExhdyBDbGluaWMgaXMgYSByZXN1bHQgb2YgYW4gaW1wcmVzc2l2ZSBqb2ludCB2ZW50dXJlIGJldHdlZW4gQmF0aCBTcGEgVW5pdmVyc2l0eSwgU3RvbmUgS2luZyBMTFAgYW5kIHRoZSBDaXRpemVucyBBZHZpY2UgQnVyZWF1IEJBTkVTLlx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYmVsaWV2ZSBpbiBnaXZpbmcgb3VyIHN0dWRlbnRzIGEgaGlnaC1xdWFsaXR5IGVkdWNhdGlvbmFsIGV4cGVyaWVuY2UsIGV4Y2VwdGlvbmFsIG9wcG9ydHVuaXRpZXMgdG8gYmVjb21lIGhpZ2hseSBlbXBsb3lhYmxlIGFzIHdlbGwgYXMgdW5yaXZhbGxlZCBwYXN0b3JhbCBjYXJlLlx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VGb3IgZnVydGhlciBpbmZvcm1hdGlvbiBjb250YWN0IFN0ZXZlbiBHb3VsdG9uLCBMYXcgQ291cnNlIERpcmVjdG9yLCBCYXRoIEJ1c2luZXNzIFNjaG9vbCwgXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2EgaHJlZj1cIm1haWx0bzpzLmdvdWx0b25AYmF0aHNwYS5hYy51a1wiXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlcy5nb3VsdG9uQGJhdGhzcGEuYWMudWtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2UuXHUwMDI2bmJzcDtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IFVzLiIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlSWRlYWxseSB5b3Ugd2lsbCBoYXZlIGV4cGVydGlzZSBpbiBvbmUgb3IgbW9yZSBvZiB0aGUgZm9sbG93aW5nIGFyZWFzIChwbGVhc2Ugc2VlIGJlbG93IGZvciBmdXJ0aGVyIGluZm9ybWF0aW9uIG9uIEFzc29jaWF0ZSBMZWN0dXJlciByb2xlIHNwZWNpZmljcyk6XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY3VsXHUwMDNlXHUwMDNjbGlcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVG9ydCBMYXdcdTAwM2MvbGlcdTAwM2VcdTAwM2NsaVx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VFbXBsb3ltZW50IExhd1x1MDAzYy9saVx1MDAzZVx1MDAzY2xpXHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUJ1c2luZXNzIExhd1x1MDAzYy9saVx1MDAzZVx1MDAzY2xpXHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZURpc3NlcnRhdGlvbiBzdXBlcnZpc2lvblx1MDAzYy9saVx1MDAzZVx1MDAzY2xpXHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUVxdWl0eSBhbmQgdHJ1c3RzXHUwMDNjL2xpXHUwMDNlXHUwMDNjbGlcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlUHJvcGVydHkgTGF3XHUwMDI2bmJzcDtcdTAwM2MvbGlcdTAwM2VcdTAwM2NsaVx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VFbWVyZ2luZyB0ZWNobm9sb2dpZXMg4oCTIEFJLCBjeWJlcmxhdyBldGNcdTAwM2MvbGlcdTAwM2VcdTAwM2MvdWxcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkFzc29jaWF0ZSBMZWN0dXJlciBpbiBMYXciLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvY2JjZjVhMjktMmJhZi00YTk4LWE1MjMtOGYyZDAwNjQ5YWJjIiwicGF0aCI6Ii9lbi9wb3N0aW5ncy9jYmNmNWEyOS0yYmFmLTRhOTgtYTUyMy04ZjJkMDA2NDlhYmMiLCJ3b3JrcGxhY2VfdHlwZSI6Im9uc2l0ZSIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJPbnNpdGUiLCJqb2IiOnsiaWQiOiIyMTgwMTMiLCJyZXF1aXNpdGlvbl9pZCI6IiIsImRlcGFydG1lbnQiOnsiaWQiOiIxOTA4NSIsIm5hbWUiOiJCdXNpbmVzcyBTY2hvb2wifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5OTg3MyIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUR1ZSB0byB0aGUgbmF0dXJlIG9mIHRoaXMgcG9zdCByZWdyZXRmdWxseSB3ZSBjYW5ub3QgYWNjZXB0IGFwcGxpY2F0aW9ucyB0aGF0IGRvIG5vdCBoYXZlIHRoZSBSaWdodCB0byBXb3JrL0xpdmUgaW4gdGhlIFVLIHRoZXJlZm9yZSB5b3VyIGFwcGxpY2F0aW9uIHdpbGwgYmUgcmVqZWN0ZWQuXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VHcmFkZSBBYzIgLSDCozE5LjIzIHBlciBob3VyIChhIG11bHRpcGxpZXIgb2YgMi41IG1heSBiZSBhcHBsaWVkIGRlcGVuZGluZyBvbiB0aGUgd29yayBvZmZlcmVkKVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VJbnRlcnZpZXcgRGF0ZSAtIDExdGggXHUwMDI2YW1wOyAxMnRoIFNlcHRlbWJlciAyMDI0XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBlbWFpbCBDbGFyYSBHaWFtaW5hcmRpIFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2NhIGhyZWY9XCJtYWlsdG86Yy5naWFtaW5hcmRpQGJhdGhzcGEuYWMudWtcIlx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZWMuZ2lhbWluYXJkaUBiYXRoc3BhLmFjLnVrXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9hXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlIGRpcmVjdGx5IGZvciBhbnkgcXVlcmllcyByZWdhcmRpbmcgdGhpcyBwb3NpdGlvbi5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOm51bGwsImNvbXBlbnNhdGlvbl9taW5pbXVtIjpudWxsLCJjb21wZW5zYXRpb25fbWF4aW11bSI6bnVsbCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjpudWxsLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTMxVDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlT3VyIEJBIChIb25zKSBGYXNoaW9uIFBob3RvZ3JhcGh5IGNvdXJzZSBpcyBsb29raW5nIGZvciBhc3NvY2lhdGUgbGVjdHVyZXJzIHdpdGggaW4tZGVwdGgga25vd2xlZGdlIGFuZC9vciBpbmR1c3RyeSBleHBlcmllbmNlIGluIHRoZSBhcmVhcyBvZiBmYXNoaW9uIHBob3RvZ3JhcGh5LCBmYXNoaW9uIHN0eWxpbmcgYW5kIGZhc2hpb24gY29tbXVuaWNhdGlvbiB0byBkZWxpdmVyIHRlYWNoaW5nIG9uIG91ciBsZXZlbCA0IGFuZCBsZXZlbCA1IG1vZHVsZXMuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmbGV4aWJsZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRmxleGlibGUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VBcyBhbiBhc3NvY2lhdGUgbGVjdHVyZXIgb24gQkEgKEhvbnMpIEZhc2lvbiBQaG90b2dyYXBoeSwgeW91ciBwcmltYXJ5IHJlc3BvbnNpYmlsaXR5IHdpbGwgYmUgZGVsaXZlcmluZyBlbmdhZ2luZyBhbmQgaGlnaCBxdWFsaXR5IHRlYWNoaW5nIGluIHRoZSBhcHByb3ByaWF0ZSBzdWJqZWN0IGFyZWEuIFRoaXMgaW5jbHVkZXMgZGV2ZWxvcGluZyBhbmQgdW5kZXJ0YWtpbmcgaW4tcGVyc29uIGxlY3R1cmVzLCBwcmFjdGljYWwgd29ya3Nob3BzLCBzZW1pbmFycyBhbmQgdHV0b3JpYWxzIHRvIHN1cHBvcnQgb3VyIGxldmVsIDQgYW5kIGxldmVsIDUgc3R1ZGVudHMgaW4gdGhlIGRldmVsb3BtZW50IG9mIHRoZWlyIHdvcmsuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlSW4gdGhlIHJvbGUsIHlvdSB3aWxsIGFsc28gYmUgbWFya2luZyBhbmQgYXNzZXNzaW5nIG1vZHVsZSB3b3JrLCBwcm92aWRpbmcgY29uc3RydWN0aXZlIGZlZWRiYWNrIGFuZCBhdHRlbmRpbmcgYXNzZXNzbWVudCBtZWV0aW5ncyB3aGVyZSByZXF1aXJlZCB0byBlbnN1cmUgZmFpciBhbmQgY29uc2lzdGVudCBncmFkaW5nLiBZb3Ugd2lsbCBhbHNvIGJlIGV4cGVjdGVkIHRvIHdvcmsgY2xvc2VseSB3aXRoIG1vZHVsZSBzdGFmZiBhbmQgc3VwcG9ydCBvbiBzb21lIGFkbWluaXN0cmF0aXZlIHRhc2tzLCBlbnN1cmluZyB0aGUgc21vb3RoIHJ1bm5pbmcgb2YgdGhlIG1vZHVsZS4gVGhpcyBpbmNsdWRlcyBlbmdhZ2luZyB3aXRoIGV4aXN0aW5nIHZpcnR1YWwgbGVhcm5pbmcgZW52aXJvbm1lbnRzIHRvIGVuc3VyZSBjb2hlc2l2ZSBkaXNzZW1pbmF0aW9uIG9mIG1vZHVsZSBtYXRlcmlhbHMgYW5kIHN0dWRlbnQgY29tbXVuaWNhdGlvbiBhY3Jvc3MgdGhlIGNvdXJzZS5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSByb2xlIHJlcXVpcmVzIGFuIGluLWRlcHRoIHN1YmplY3Qga25vd2xlZGdlIGFuZC9vciBpbmR1c3RyeSBleHBlcnRpc2UgaW4gdGhlIGFyZWFzIG9mIGZhc2hpb24gcGhvdG9ncmFwaHksIGZhc2hpb24gc3R5bGluZyBhbmQvb3IgZmFzaGlvbiBjb21tdW5pY2F0aW9uLiBZb3Ugd2lsbCBoYXZlIGV4Y2VsbGVudCBjb21tdW5pY2F0aW9uIGFuZCBpbnRlcnBlcnNvbmFsIHNraWxscyBhbmQgd2lsbCBiZSBhYmxlIHRvIHRyYW5zbGF0ZSBrZXkgc2tpbGxzIGFuZCBjb25jZXB0cyBpbnRvIGFwcHJvcHJpYXRlIGxhbmd1YWdlIGFuZCB0YXNrcyBmb3IgbGV2ZWwgNCBhbmQgbGV2ZWwgNSBzdHVkZW50cy4gQSBzb2xpZCB1bmRlcnN0YW5kaW5nIG9mIGNvbnRlbXBvcmFyeSB0cmVuZHMgYW5kIGluZHVzdHJ5IHByYWN0aWNlcyBpcyBlc3NlbnRpYWwgdG8gZW5zdXJlIGhpZ2ggcXVhbGl0eSBvZiB0ZWFjaGluZyBmb3Igc3R1ZGVudHMgZ29pbmcgaW50byBmdXR1cmUgaW5kdXN0cnkuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlUHJpb3IgZXhwZXJpZW5jZSB0ZWFjaGluZyB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzIGluIHRoZXNlIGFyZWFzIGlzIGRlc2lyYWJsZS4gWW91IHdpbGwgaGF2ZSBleGNlbGxlbnQgb3JnYW5pc2F0aW9uYWwgYW5kIHRpbWUgbWFuYWdlbWVudCBza2lsbHMsIGFuZCBiZSBhYmxlIHRvIHdvcmsgc3VjY2Vzc2Z1bGx5IGFzIHBhcnQgb2YgYSBzbWFsbCB0ZWFtLiBBbG9uZ3NpZGUgc29saWQgSVQgc2tpbGxzLCBleHBlcnRpc2UgaW4gaW5kdXN0cnkgc3BlY2lmaWMgZGlnaXRhbCB0b29scyBzdWNoIGFzIHRoZSBBZG9iZSBDcmVhdGl2ZSBTdWl0ZSBpcyBiZW5lZmljaWFsLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkFzc29jaWF0ZSBMZWN0dXJlciwgQkEgKEhvbnMpIEZhc2hpb24gUGhvdG9ncmFwaHkiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvOTViYTU2NGQtZjk5NS00YWY2LWIzMzMtYzM3MTlhNDUyNjRjIiwicGF0aCI6Ii9lbi9wb3N0aW5ncy85NWJhNTY0ZC1mOTk1LTRhZjYtYjMzMy1jMzcxOWE0NTI2NGMiLCJ3b3JrcGxhY2VfdHlwZSI6Im9uc2l0ZSIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJPbnNpdGUiLCJqb2IiOnsiaWQiOiIyMTgwNzciLCJyZXF1aXNpdGlvbl9pZCI6IiIsImRlcGFydG1lbnQiOnsiaWQiOiIzNjI3MiIsIm5hbWUiOiJTY2hvb2wgb2YgQXJ0LCBGaWxtIFx1MDAyNiBNZWRpYSJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU5IiwiY2l0eSI6IkJhdGgiLCJuYW1lIjoiQmF0aCAtIExvY2tzYnJvb2sgQ2FtcHVzIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIyMDIwMTkiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VHcmFkZSA3IMKjMzcsMDk5IC0gwqM0MSw3MzIgcGVyIGFubnVtXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC13L2MgMjd0aCBBdWd1c3QgMjAyNFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMzcsMDk5IC0gwqM0MSw3MzIgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjM3MDk5LjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjo0MTczMi4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMTZUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgY3VycmVudGx5IHNlZWtpbmcgYSBTaG9ydCBDb3Vyc2UgVW5pdCBBZG1pc3Npb25zIGFuZCBEYXRhIE1hbmFnZXIgd2hvIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIHRoZSBtYW5hZ2VtZW50IG9mIGxlYXJuZXIgYWRtaXNzaW9ucywgZnVuZGluZyByZWd1bGF0aW9ucywgZGF0YSwgYW5kIGZpbmFuY2lhbCByZXBvcnRpbmcgYWNyb3NzIHRoZSBTaG9ydCBDb3Vyc2UgVW5pdOKAmXMgcHJvZ3JhbW1lcy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZnVsbF90aW1lIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGdWxsIFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgcm9sZSByZXF1aXJlcyBzaW11bHRhbmVvdXMgbWFuYWdlbWVudCBvZiBtdWx0aXBsZSBwcm9qZWN0cywgZW5nYWdpbmcgZXhpc3Rpbmcgc3Rha2Vob2xkZXJzIGFuZCBtYW5hZ2luZyByZXBvcnRpbmcgZGVhZGxpbmVzIHdoaWxzdCBsaW5lIG1hbmFnaW5nIGEgc21hbGwgdGVhbS4gXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIGxlYXJuZXIgcmVjcnVpdG1lbnQgZm9yIGFsbCBzaG9ydCBjb3Vyc2VzIGFsd2F5cyBlbnN1cmluZyB0YXJnZXRzIGFyZSBtZXQuIFlvdSB3aWxsIHdvcmsgY2xvc2VseSB3aXRoIHRoZSBNYXJrZXRpbmcgYW5kIEN1cnJpY3VsdW0gdGVhbSB0byBvcmdhbmlzZSBhdHRlbmRhbmNlIGF0IHJlY3J1aXRtZW50IGZhaXJzIGFuZCBldmVudHMuIFlvdSB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBjYXB0dXJpbmcgbGVhcm5lciBkYXRhIGFzIHJlcXVpcmVkIGJ5IHRoZSBzdGFrZWhvbGRlciwgbWFuYWdpbmcgdGhlIHJlY3J1aXRtZW50IHByb2Nlc3Mgb2YgbGVhcm5lcnMgdG8gc2hvcnQgY291cnNlcywgaW5jbHVzaXZlIG9mIGludGVydmlld2luZyBsZWFybmVycyBhbmQgdHJhY2tpbmcgYW5kIHJlcG9ydGluZyBvZiBlbXBsb3ltZW50IG91dGNvbWVzIGZvciBlbXBsb3ltZW50IHBhdGh3YXkgYWNyb3NzIHN0YWtlaG9sZGVycyBpbiBsaW5lIHdpdGggZnVuZGluZyByZWd1bGF0aW9ucy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VZb3Ugd2lsbCBhbHNvIGJlIHJlc3BvbnNpYmxlIGZvciBjb2xsYXRpbmcgYW5kIHRyYWNraW5nIHRoZSBhY2hpZXZlbWVudCBvZiBmdW5kZWQgc2hvcnQgY291cnNlIHRhcmdldHMgYXMgYWdyZWVkIHdpdGggc3Rha2Vob2xkZXJzLCBvdmVyc2VlaW5nIGFsbCByZWd1bGF0b3J5IGFuZCBjb21wbGlhbmNlIGRhdGEgY2FwdHVyZSByZXF1aXJlZCBieSB0aGUgVW5pdmVyc2l0eSBBbHVtbmksIG91dGNvbWVzIGFuZCBEYXRhIGNvbXBsaWFuY2UgdGVhbSBhbmQgcHJlcGFyYXRpb24gb2YgZmluYW5jaWFsIGFuZCBwcm9ncmFtbWUgcGVyZm9ybWFuY2UgcmVwb3J0cyBmb3IgZXh0ZXJuYWwgYW5kIGludGVybmFsIGF1ZGl0XHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIGEgcHJvdmVuIHRyYWNrIHJlY29yZCBvZiBkZWxpdmVyaW5nIGFnYWluc3QgcHJvamVjdCBrZXkgcGVyZm9ybWFuY2UgaW5kaWNhdG9ycyBhbmQgbWFpbnRhaW5pbmcgcHJvZ3JhbW1lcyB3aXRoaW4gYnVkZ2V0LCBhcyB3ZWxsIGFzIGVuZ2FnaW5nIGFuZCBuZWdvdGlhdGluZyB3aXRoIHNlbmlvciBmaWd1cmVzIGludGVybmFsbHkgYW5kIHdpdGggZXh0ZXJuYWwgc3Rha2Vob2xkZXJzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVByZXZpb3VzIGxpbmUgbWFuYWdlbWVudCBleHBlcmllbmNlIG1hbmFnaW5nIHN1Y2Nlc3NmdWwgdGVhbXMgaXMgYSBjcnVjaWFsIHBhcnQgb2YgdGhpcyByb2xlLiBZb3Ugd2lsbCBhbHNvIGhhdmUgZXhwZXJpZW5jZSB3b3JraW5nIGluIGNvbXBsZXggbXVsdGktcGFydG5lciBlbnZpcm9ubWVudHMgd2l0aCBhYmlsaXR5IHRvIG1vdGl2YXRlIGFuZCBpbmZsdWVuY2UgZXh0ZXJuYWwgcGFydG5lcnMuIEluIGFkZGl0aW9uLCB5b3Ugd2lsbCBoYXZlIGNsZWFyIGRlY2lzaW9uLW1ha2luZyBza2lsbHMgYW5kIGJlIGEga2VlbiBwcm9ibGVtIHNvbHZlci5cdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IlNob3J0IENvdXJzZSBVbml0IEFkbWlzc2lvbnMgYW5kIERhdGEgTWFuYWdlciAiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvZDBiZmM2MWUtZmM3OC00YWY4LWI2ZmUtMmE3MmNjMDI1MzNiIiwicGF0aCI6Ii9lbi9wb3N0aW5ncy9kMGJmYzYxZS1mYzc4LTRhZjgtYjZmZS0yYTcyY2MwMjUzM2IiLCJ3b3JrcGxhY2VfdHlwZSI6Imh5YnJpZCIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJIeWJyaWQiLCJqb2IiOnsiaWQiOiIyMjAxNjciLCJyZXF1aXNpdGlvbl9pZCI6IjM3MS8yMy8yNCIsImRlcGFydG1lbnQiOnsiaWQiOiIzNzY4OSIsIm5hbWUiOiIgSW5ub3ZhdGlvbiBhbmQgS25vd2xlZGdlIEV4Y2hhbmdlIENlbnRyZSJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMjAyMzc0IiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlUGxlYXNlIE5vdGU6IFRoaXMgcm9sZSB3aWxsIGludm9sdmUgc29tZSB3ZWVrZW5kIChTYXR1cmRheSkgd29ya2luZyBpbiBsaW5lIHdpdGggdGVhY2hpbmcgYmxvY2tzLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VJbnRlcnZpZXdzIHdpbGwgYmUgdGFraW5nIHBsYWNlIGluIFNlcHRlbWJlciBcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMzIsMzMyIC0gwqMzNiwwMjQgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjMyMzMyLjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjozNjAyNC4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMjJUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgY3VycmVudGx5IHNlZWtpbmcgYSBUZWNobmljYWwgRGVtb25zdHJhdG9yXHUwMDNjc3Ryb25nXHUwMDNlIFx1MDAzYy9zdHJvbmdcdTAwM2VUbyBiZSByZXNwb25zaWJsZSBmb3IgdGhlIGRlbGl2ZXJ5IHRyYWluaW5nIG9mIHNwZWNpYWxpc3QgdGVjaG5pY2FsIHNraWxscyBhbmQgdHJhaW5pbmcgaW4gZGlmZmVyZW50IGxlYXJuaW5nIHRvb2xzIHRvIGVpdGhlciBncm91cHMgb2Ygc3R1ZGVudHMgb3Igb25lLXRvLW9uZSBzdXBwb3J0IHRvIGluZGl2aWR1YWxzIGF0IEJhdGggU3BhIFVuaXZlcnNpdHksIExvbmRvblx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZnVsbF90aW1lIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGdWxsIFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VBcyBUZWNobmljYWwgRGVtb25zdHJhdG9yIHlvdSB3aWxsIGJlIHRlYWNoaW5nIHRoZSB1c2Ugb2YgZGlnaXRhbCBsZWFybmluZyB0b29scywgbGVhZGluZyBBViBhbmQgRWR1Y2F0aW9uYWwgVGVjaG5vbG9neSB0cmFpbmluZyBmb3Igc3RhZmYsIGFuZCBwcmVwYXJpbmcgY29tcHJlaGVuc2l2ZSB0cmFpbmluZyBndWlkZXMsIGFzIHdlbGwgYXMgYmVpbmcgcmVzcG9uc2libGUgZm9yIGVuc3VyaW5nIHRoZSBtYWludGVuYW5jZSBvZiBzcGVjaWFsaXN0IGVxdWlwbWVudCBpcyBjYXJyaWVkIG91dCB3aXRoaW4gb3duIGFyZWEgb2Ygd29yayBhbmQgdGhhdCBoZWFsdGggYW5kIHNhZmV0eSBzdGFuZGFyZHMgYXJlIGNvbXBsaWVkIHdpdGggYXQgYWxsIHRpbWVzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIGRldmVsb3AgYW5kIGNvbmR1Y3QgZGlnaXRhbCBsZWFybmluZyB3b3Jrc2hvcHMsIHN1cGVydmlzZSBzdHVkZW50cyBpbiB3b3Jrc2hvcCBmYWNpbGl0aWVzLCBhbmQgZW5zdXJlIEhlYWx0aCBhbmQgU2FmZXR5IGNvbXBsaWFuY2UuIFJlc3BvbnNpYmlsaXRpZXMgaW5jbHVkZSBtYW5hZ2luZyBhbmQgbWFpbnRhaW5pbmcgZXF1aXBtZW50LCBjb25kdWN0aW5nIHJpc2sgYXNzZXNzbWVudHMsIGFuZCBhZHZpc2luZyBvbiBmdXR1cmUgcmVzb3VyY2UgcmVxdWlyZW1lbnRzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUNvbGxhYm9yYXRpb24gd2l0aCBBViwgbGVhcm5pbmcgdGVjaG5vbG9neSwgYW5kIHByb2Zlc3Npb25hbCBzZXJ2aWNlcyBjb2xsZWFndWVzIGlzIGVzc2VudGlhbC5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGJlIGhpZ2hseSBza2lsbGVkIHdpdGggYSBmaXJzdCBkZWdyZWUgaW4gYSByZWxldmFudCBwcmFjdGljYWwgc3ViamVjdCBvciBzaWduaWZpY2FudCBwcm9mZXNzaW9uYWwgZXhwZXJpZW5jZS4gWW91IHdpbGwgaGF2ZSBleHRlbnNpdmUgQVYgZXhwZXJpZW5jZSwga25vd2xlZGdlIG9mIGVkdWNhdGlvbmFsIHRlY2hub2xvZ2llcyBsaWtlIFRlYW1zLCB2aWRlbyBjb25mZXJlbmNpbmcsIGFuZCBsZWN0dXJlIGNhcHR1cmUsIGFuZCBhIHByb2FjdGl2ZSBhcHByb2FjaCB0byBtYWludGVuYW5jZSwgZGV2ZWxvcG1lbnQsIGFuZCBzYWZldHkuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlU3Ryb25nIGRpZ2l0YWwgbGl0ZXJhY3ksIHBhcnRpY3VsYXJseSBpbiBBZG9iZSBDcmVhdGl2ZSBDYW1wdXMgdG9vbHMsIGV4Y2VsbGVudCBpbnRlcnBlcnNvbmFsIGFuZCBjb21tdW5pY2F0aW9uIHNraWxscywgYW5kIHRoZSBhYmlsaXR5IHRvIG1hbmFnZSByZXNvdXJjZXMgYW5kIHdvcmsgdW5kZXIgcHJlc3N1cmUgYXJlIGVzc2VudGlhbC5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VGbGV4aWJpbGl0eSwgYWRhcHRhYmlsaXR5LCBhbmQgYSBwb3NpdGl2ZSBhcHByb2FjaCB0byBjaGFuZ2UsIGFsb25nIHdpdGggdGhlIGFiaWxpdHkgdG8gd29yayBjb2xsYWJvcmF0aXZlbHkgdG93YXJkcyBzaGFyZWQgZ29hbHMsIGFyZSBrZXkgYXR0cmlidXRlcyBmb3IgdGhpcyByb2xlLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IlRlY2huaWNhbCBEZW1vbnN0cmF0b3IgaW4gRWR1Y2F0aW9uYWwgVGVjaG5vbG9neSAoTG9uZG9uKSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9lNTUzMDI4Yi1hZGJhLTQ0MGItODAzZi03ZjFmY2YwOGI3NjkiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2U1NTMwMjhiLWFkYmEtNDQwYi04MDNmLTdmMWZjZjA4Yjc2OSIsIndvcmtwbGFjZV90eXBlIjoiaHlicmlkIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ikh5YnJpZCIsImpvYiI6eyJpZCI6IjIyMDUyMyIsInJlcXVpc2l0aW9uX2lkIjoiMjQ5LzIzLzI0IiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI5OTYyIiwibmFtZSI6IkJhdGggU3BhIFVuaXZlcnNpdHkgTG9uZG9uICJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjIzNDcwIiwiY2l0eSI6IkxvbmRvbiIsIm5hbWUiOiJCYXRoIFNwYSBVbml2ZXJzaXR5IExvbmRvbiIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMjAzMjQyIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlUmVjZW50IGFkanVzdG1lbnQgaW4gdGhlIFVL4oCZcyBTcG9uc29yc2hpcCBUaHJlc2hvbGRcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVBsZWFzZSBub3RlIHRoYXQgYXMgb2YgQXByaWwgMjAyNCwgdGhlcmUgaGFzIGJlZW4gYSBjaGFuZ2UgaW4gdGhlIFVL4oCZcyBzcG9uc29yc2hpcCB0aHJlc2hvbGQuIFJlZ3JldHRhYmx5IGFzIHRoZSBzYWxhcnkgZm9yIHRoaXMgcm9sZSBmYWxscyBiZW5lYXRoIHRoaXMsIHlvdSB3aWxsIG5vdCBiZSBlbGlnaWJsZSBmb3Igc3BvbnNvcnNoaXAgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJlamVjdGVkLlx1MDAyNm5ic3A7XHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VTYWxhcnk6IEdyYWRlIDQsIMKjMjUsMTM4IHRvIMKjMjcsMTgxIHBlciBhbm51bVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMjUsMTM4IC0gwqMyNywxODEgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjI1MTM4LjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjoyNzE4MS4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMjhUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgY3VycmVudGx5IHNlZWtpbmcgYSBSZWdpc3RyeSBEYXRhIEFkbWluaXN0cmF0b3IgdG8gam9pbiBvdXJcdTAwM2NzdHJvbmdcdTAwM2UgXHUwMDNjL3N0cm9uZ1x1MDAzZWRlZGljYXRlZCBhbmQgc3BlY2lhbGlzdCB0ZWFtLCBzdXBwb3J0aW5nIHRoZSB0cmFuc2Zvcm1hdGlvbiBvZiB0aGUgc3R1ZGVudCBkYXRhIGpvdXJuZXkgdG8gZGVsaXZlciB0aGUgaGlnaGVzdCBzZXJ2aWNlIGFuZCBhZG1pbmlzdHJhdGl2ZSBzdGFuZGFyZHMgaW4gbGluZSB3aXRoIHRoZSBVbml2ZXJzaXR54oCZcyBEYXRhIEFzc3VyYW5jZSBQb2xpY3kuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZ1bGxfdGltZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRnVsbCBUaW1lIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQXMgb3VyIFJlZ2lzdHJ5IERhdGEgQWRtaW5pc3RyYXRvciwgeW91IHdpbGxcdTAwM2NzdHJvbmdcdTAwM2UgXHUwMDNjL3N0cm9uZ1x1MDAzZXByb3ZpZGUgYWRtaW5pc3RyYXRpdmUgc3VwcG9ydCB0byBhIG51bWJlciBvZiBjaGFuZ2UgcHJvamVjdHMsIG5ldyB3YXlzIG9mIHdvcmtpbmcsIGFuZCBwcm9jZXNzIGltcHJvdmVtZW50cyB3aXRoaW4gU3R1ZGVudCBhbmQgUmVnaXN0cnkgU2VydmljZS4gWW91IHdpbGwgc3VwcG9ydCB0aGUgcHJvY2Vzc2luZyBhbmQgbWFuYWdlbWVudCBvZiBkYXRhIHdpdGhpbiB0aGUgU0xDIGF0dGVuZGFuY2Ugc3lzdGVtLCBlbnN1cmluZyBhY2N1cmF0ZSByZXBvcnRpbmcgYW5kIGNvbXBsaWFuY2Ugd2l0aCBzZXJ2aWNlIGxldmVsIGFncmVlbWVudHMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHdpbGwgcHJvY2VzcyBBdHRlbmRhbmNlIENvbmZpcm1hdGlvbiBSZXBvcnRpbmcgKEFDUikgZGF0YSwgaGFuZGxpbmcgQ2hhbmdlIG9mIENpcmN1bXN0YW5jZSAoQ29DKSBzdWJtaXNzaW9ucywgYW5kIG1hbmFnaW5nIGlucXVpcmllcyBmcm9tIHN0dWRlbnRzLCBzdGFmZiwgYW5kIGV4dGVybmFsIGFnZW5jaWVzLiBZb3Ugd2lsbCBsaWFpc2Ugd2l0aCB2YXJpb3VzIHVuaXZlcnNpdHkgdGVhbXMgdG8gc3VwcG9ydCB0aGUgaW50cm9kdWN0aW9uIG9mIHRoZSBMaWZlbG9uZyBMZWFybmluZyBFbnRpdGxlbWVudCAoTExFKSwgc2V0IHVwIG5ldyBjb3Vyc2UgcHJvdmlzaW9ucywgYW5kIG1haW50YWluIGRhdGEgcXVhbGl0eS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VBZGRpdGlvbmFsbHksIHRoZSByb2xlIGluY2x1ZGVzIGFkdmlzaW5nIGNvbGxlYWd1ZXMgb24gU0lUUy1yZWxhdGVkIHF1ZXJpZXMsIHN1cHBvcnRpbmcgdGhlIG9ubGluZSBDaGFydGVyZWQgTWFuYWdlbWVudCBJbnN0aXR1dGUgKENNSSkgc3lzdGVtIGZvciBNQkEgc3R1ZGVudHMsIGFuZCBwZXJmb3JtaW5nIGtleSBhZG1pbmlzdHJhdGl2ZSBmdW5jdGlvbnMuIEV4Y2VsbGVudCBjdXN0b21lciBzZXJ2aWNlLCBvcmdhbml6YXRpb25hbCBza2lsbHMsIGFuZCB0aGUgYWJpbGl0eSB0byB3b3JrIGNvbGxhYm9yYXRpdmVseSBhcmUgZXNzZW50aWFsLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGhhdmUgNSBHQ1NFcyBhdCBHcmFkZSA0L0Mgb3IgZXF1aXZhbGVudCwgaW5jbHVkaW5nIEVuZ2xpc2ggYW5kIE1hdGhlbWF0aWNzLCBhbmQgQS1sZXZlbCBlZHVjYXRpb24uIFlvdSB3aWxsIGhhdmUgZXhwZXJpZW5jZSB1c2luZyBjb21wdXRlcmlzZWQgc3lzdGVtcywgZW5zdXJpbmcgZGF0YSBxdWFsaXR5LCBhbmQgcHJvdmlkaW5nIGV4Y2VsbGVudCBjdXN0b21lciBzZXJ2aWNlLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUtleSBza2lsbHMgaW5jbHVkZSBzdHJvbmcgY29tbXVuaWNhdGlvbiwgYXR0ZW50aW9uIHRvIGRldGFpbCwgb3JnYW5pc2F0aW9uYWwgYWJpbGl0aWVzLCBhbmQgcHJvZmljaWVuY3kgaW4gTWljcm9zb2Z0IGFwcGxpY2F0aW9ucy4gWW91IHdpbGwgYmUgYWJsZSB0byBwcmlvcml0aXNlIHdvcmtsb2Fkcywgd29yayB1bmRlciBwcmVzc3VyZSwgYW5kIGNvbGxhYm9yYXRlIGVmZmVjdGl2ZWx5IHdpdGhpbiBhIHRlYW0uXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlQSBwb3NpdGl2ZSwgcHJvYWN0aXZlIGF0dGl0dWRlLCBmbGV4aWJpbGl0eSBpbiBoYW5kbGluZyB2YXJpb3VzIHRhc2tzLCBhbmQgbWFpbnRhaW5pbmcgYSBjYWxtIGFuZCBoZWxwZnVsIGRlbWVhbm91ciBkdXJpbmcgYnVzeSBwZXJpb2RzIGFyZSBlc3NlbnRpYWwuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiUmVnaXN0cnkgRGF0YSBBZG1pbmlzdHJhdG9yIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzkzMGE2NzU5LWNiOTUtNDc5NS04ZjZmLWY1Nzg1MjlmMDMwNyIsInBhdGgiOiIvZW4vcG9zdGluZ3MvOTMwYTY3NTktY2I5NS00Nzk1LThmNmYtZjU3ODUyOWYwMzA3Iiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjIxMzIxIiwicmVxdWlzaXRpb25faWQiOiIxNzZfMjNfMjQiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMjkyNjIiLCJuYW1lIjoiU3R1ZGVudCBhbmQgUmVnaXN0cnkgU2VydmljZXMifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjIwMzI0NyIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVNhbGFyeTogR3JhZGUgNiwgwqMzMiwzMzIgdG8gwqMzNiwwMjQgcGVyIGFubnVtXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMzMiwzMzIgLSDCozM2LDAyNCAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6MzIzMzIuMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjM2MDI0LjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0yOFQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBjdXJyZW50bHkgc2Vla2luZyBhIFJlZ2lzdHJ5IERhdGEgQ29vcmRpbmF0b3IgdG8gam9pbiBvdXIgZGVkaWNhdGVkIGFuZCBzcGVjaWFsaXN0IHRlYW0gaW4gcHJvdmlkaW5nIG9wZXJhdGlvbmFsIHN1cHBvcnQgYW5kIGd1aWRhbmNlIGFyb3VuZCB0aGUgcXVhbGl0eSBhbmQgZWZmZWN0aXZlbmVzcyBvZiBzdHVkZW50IGRhdGEgYW5kIHByb2Nlc3NlcyB3aXRoaW4gU3R1ZGVudCBhbmQgUmVnaXN0cnkgU2VydmljZXMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZ1bGxfdGltZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRnVsbCBUaW1lIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQXMgUmVnaXN0cnkgRGF0YSBDb29yZGluYXRvclx1MDAzY3N0cm9uZ1x1MDAzZSBcdTAwM2Mvc3Ryb25nXHUwMDNleW91IHdpbGwgYmUgc3VwcG9ydGluZyBhbmQgb3BlcmF0aW9uYWxpc2luZyBjaGFuZ2UgcHJvamVjdHMsIG5ldyB3YXlzIG9mIHdvcmtpbmcsIGFuZCBwcm9jZXNzIGltcHJvdmVtZW50cyB3aXRoaW4gU3R1ZGVudCBhbmQgUmVnaXN0cnkgU2VydmljZXMuIFlvdSB3aWxsIHN1cHBvcnQgdGhlIG1hbmFnZW1lbnQgb2YgdGhlIFNMQyBhdHRlbmRhbmNlIHN5c3RlbSwgZW5zdXJpbmcgYWNjdXJhdGUgcmVwb3J0aW5nIGFuZCB0aW1lbHkgaW5jb21lIHJlY2VpcHQuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUmVzcG9uc2liaWxpdGllcyBpbmNsdWRlIGNyZWF0aW5nIGFuZCBtYWludGFpbmluZyB0aGUgQXR0ZW5kYW5jZSBDb25maXJtYXRpb24gUmVwb3J0aW5nIChBQ1IpIHNjaGVkdWxlLCBwcm9jZXNzaW5nIEFDUiBkYXRhLCBtYW5hZ2luZyBmZWUgZGlzY3JlcGFuY2llcywgYW5kIGVuc3VyaW5nIGNvbnNpc3RlbmN5IGluIGF0dGVuZGFuY2UgYW5kIGVuZ2FnZW1lbnQgZGF0YS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VXaXRoaW4gdGhlIHJvbGUgeW91IHdpbGwgbGlhaXNlIHdpdGggdmFyaW91cyB0ZWFtcywgbWFuYWdpbmcgY291cnNlIHByb3Zpc2lvbiBzZXQtdXAsIGFuZCBzdXBwb3J0aW5nIHRoZSBpbnRyb2R1Y3Rpb24gb2YgdGhlIExpZmVsb25nIExlYXJuaW5nIEVudGl0bGVtZW50IChMTEUpLiBJbiBhZGRpdGlvbiwgdGhlIHJvbGUgYWxzbyBpbnZvbHZlcyBkZXB1dGlzaW5nIGZvciB0aGUgUmVnaXN0cnkgRGF0YSBNYW5hZ2VyIGFuZCBlbnN1cmluZyBzdGFmZiBkZXZlbG9wbWVudCB0aHJvdWdoIHJlZ3VsYXIgMS0yLTFzIGFuZCB0cmFpbmluZy5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBiZSBkZXRhaWwtb3JpZW50ZWQgYW5kIGhpZ2hseSBvcmdhbmlzZWQgd2l0aCBhIGRlZ3JlZSBvciBlcXVpdmFsZW50IHByb2Zlc3Npb25hbCBleHBlcmllbmNlIGluIGEgcmVsZXZhbnQgYXJlYS4gWW91IHdpbGwgaGF2ZSBleHBlcmllbmNlIGluIGRhdGEgcm9sZXMsIGVuc3VyaW5nIGRhdGEgcXVhbGl0eSwgYW5kIHdvcmtpbmcgd2l0aCBkYXRhYmFzZXMuIFN0cm9uZyBvcmdhbmlzYXRpb25hbCBza2lsbHMsIHRoZSBhYmlsaXR5IHRvIHByaW9yaXRpc2UgY29tcGV0aW5nIGRlYWRsaW5lcywgYW5kIGEgaGlnaCBsZXZlbCBvZiBudW1lcmFjeSBhbmQgYXR0ZW50aW9uIHRvIGRldGFpbCBhcmUgZXNzZW50aWFsLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUV4Y2VsbGVudCB3cml0dGVuIGFuZCBvcmFsIGNvbW11bmljYXRpb24gc2tpbGxzLCBwcm9maWNpZW5jeSBpbiBNaWNyb3NvZnQgYXBwbGljYXRpb25zLCBhbmQgdGhlIGFiaWxpdHkgdG8gd29yayB1bmRlciBwcmVzc3VyZSBhcmUgcmVxdWlyZWQuIFlvdSB3aWxsIGFsc28gaGF2ZSBleGNlbGxlbnQgaW50ZXJwZXJzb25hbCBza2lsbHMsIHRoZSBhYmlsaXR5IHRvIHdvcmsgYm90aCBpbmRlcGVuZGVudGx5IGFuZCBhcyBwYXJ0IG9mIGEgdGVhbSwgYW5kIGEgcHJvYWN0aXZlLCBmbGV4aWJsZSBhcHByb2FjaCB0byBwcm9ibGVtLXNvbHZpbmcgYW5kIGFjaGlldmluZyB0ZWFtIGdvYWxzLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IlJlZ2lzdHJ5IERhdGEgQ29vcmRpbmF0b3IiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvOGQ0NGI0OGMtYWMyYS00ODBjLTllNDktNWI4ZjJlNTNjN2Q5IiwicGF0aCI6Ii9lbi9wb3N0aW5ncy84ZDQ0YjQ4Yy1hYzJhLTQ4MGMtOWU0OS01YjhmMmU1M2M3ZDkiLCJ3b3JrcGxhY2VfdHlwZSI6Imh5YnJpZCIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJIeWJyaWQiLCJqb2IiOnsiaWQiOiIyMjEzMjYiLCJyZXF1aXNpdGlvbl9pZCI6IjE3Nl8yM18yNCIsImRlcGFydG1lbnQiOnsiaWQiOiIyOTI2MiIsIm5hbWUiOiJTdHVkZW50IGFuZCBSZWdpc3RyeSBTZXJ2aWNlcyJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMjAzNzk4IiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhpcyBwb3N0IHJlZ3JldGZ1bGx5IHdlIGNhbm5vdCBhY2NlcHQgYXBwbGljYXRpb25zIHRoYXQgZG8gbm90IGhhdmUgdGhlIFJpZ2h0IHRvIFdvcmsvTGl2ZSBpbiB0aGUgVUsgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBiZSByZWplY3RlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBub3RlOlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VJTlRFUlZJRVdTIFdJTEwgQkUgT05HT0lORyBBTkQgVEhFIEpPQiBXSUxMIENMT1NFIE9OQ0UgQUxMIFBPU0lUSU9OUyBBUkUgRklMTEVEXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBlbWFpbCBSYWNoZWwgRXZhbnMsIFN1YmplY3QgTGVhZGVyIChEZXNpZ24pLCBvbiByLmV2YW5zM0BiYXRoc3BhLmFjLnVrIGZvciBhbiBpbmZvcm1hbCBkaXNjdXNzaW9uLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMjhUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgbG9va2luZyBmb3IgQXNzb2NpYXRlIExlY3R1cmVycyBpbiBIaXN0b3JpY2FsIGFuZCBDcml0aWNhbCBTdHVkaWVzOiBEZXNpZ24gdG8gam9pbiBvdXIgdGVhbSBvZiBleGlzdGluZyBBc3NvY2lhdGUgTGVjdHVyZXJzIGFuZCBFc3RhYmxpc2htZW50IFN0YWZmIGR1cmluZyB0aGUgYWNhZGVtaWMgeWVhciAyMDI0LTIwMjUuIEFzc29jaWF0ZSBMZWN0dXJlcnMgaW4gSGlzdG9yaWNhbCBhbmQgQ3JpdGljYWwgU3R1ZGllcyBkZWxpdmVyIHRlYWNoaW5nIGludG8gdGhlIEJhdGggU2Nob29sIG9mIERlc2lnbiBkZWdyZWUgcHJvZ3JhbW1lcy5cdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmbGV4aWJsZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRmxleGlibGUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgc3VjY2Vzc2Z1bCBhcHBsaWNhbnRzIHdpbGwgY29udHJpYnV0ZSBleHBlcnRpc2UgYWNyb3NzIGFsbCBsZXZlbHMgb2YgdGhlIHVuZGVyZ3JhZHVhdGUgcHJvZ3JhbW1lcy4gVGhlIHJvbGUgaW5jbHVkZXMgc2VtaW5hciB0ZWFjaGluZyBhbmQgc3R1ZHkgc2tpbGwgZGV2ZWxvcG1lbnQgZm9yIGxldmVscyBmb3VyIGFuZCBmaXZlIHN0dWRlbnRzIGFuZCBzdXBlcnZpc2lvbiBvZiBsZXZlbCBzaXggc3R1ZGVudOKAmXMgcHJvamVjdHMuIFlvdSB3aWxsIGJlIGludm9sdmVkIGluIG1hcmtpbmcsIG1vZGVyYXRpb24gYW5kIG90aGVyIHF1YWxpdHkgYXNzdXJhbmNlIHByb2Nlc3Nlcy5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IG1heSBiZSBleHBlY3RlZCB0byBjb250cmlidXRlIHRvIGFjdGl2aXRpZXMgc3VjaCBhcyBpbnZvbHZlbWVudCB3aXRoIG9wZW4gZGF5cyBhbmQgcHVibGljIGV2ZW50cywgYnVpbGRpbmcgYXBwcm9wcmlhdGUgbGlua3Mgd2l0aCBidXNpbmVzcyBhbmQgdGhlIGNvbW11bml0eS4gWW91IHdpbGwgZW5qb3kgZnVsbCBhY2Nlc3MgdG8gc3RhZmYgZGV2ZWxvcG1lbnQgb3Bwb3J0dW5pdGllcyBvZmZlcmVkIGJ5IHRoZSBVbml2ZXJzaXR5Llx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQXBwbGljYW50cyBzaG91bGQgaGF2ZSBleHBlcnRpc2UgaW4gdGhlIHRoZW9yeSBhbmQgY3JpdGlxdWUgb2YgZGVzaWduIHByYWN0aWNlIGFuZCBpbiBwYXJ0aWN1bGFyIHRoZSBkaXNjaXBsaW5lcyBvZiBHcmFwaGljIERlc2lnbiwgRmFzaGlvbiBQaG90b2dyYXBoeSwgRmFzaGlvbiBEZXNpZ24sIFRleHRpbGUgRGVzaWduLCBQcm9kdWN0IERlc2lnbiwgSW50ZXJpb3IgRGVzaWduIGFuZCBBcmNoaXRlY3R1cmUuIFRoaXMgZXhwZXJ0aXNlIHNob3VsZCBpbmZvcm0geW91ciB0ZWFjaGluZywgc2Nob2xhcnNoaXAgYW5kIHJlc2VhcmNoLiBZb3Ugd2lsbCBwb3NzZXNzIGV4Y2VwdGlvbmFsIGludGVycGVyc29uYWwsIG5ldHdvcmtpbmcgYW5kIGNvbW11bmljYXRpb24gc2tpbGxzLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkFzc29jaWF0ZSBMZWN0dXJlciBIaXN0b3JpY2FsIGFuZCBDcml0aWNhbCBTdHVkaWVzIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzNhYjYyOTJhLWQ4MGUtNDJlOS05YjY5LWIxMzNlZDJlODgxZiIsInBhdGgiOiIvZW4vcG9zdGluZ3MvM2FiNjI5MmEtZDgwZS00MmU5LTliNjktYjEzM2VkMmU4ODFmIiwid29ya3BsYWNlX3R5cGUiOiJvbnNpdGUiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiT25zaXRlIiwiam9iIjp7ImlkIjoiMjIxODg2IiwicmVxdWlzaXRpb25faWQiOiIiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMTkwODgiLCJuYW1lIjoiU2Nob29sIG9mIERlc2lnbiJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTYyIiwiY2l0eSI6IkJhdGgiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIFx1MDAyNiBMb2Nrc2Jyb29rIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIyMDQ1NzIiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VUaGUgcm9sZSBpcyBoeWJyaWQgYW5kIHlvdSB3aWxsIG5vcm1hbGx5IGJlIGV4cGVjdGVkIHRvIHNwZW5kIGEgbWluaW11bSAyIGRheXMgYXQgdGhlIG1haW4gVW5pdmVyc2l0eSBjYW1wdXMgYXQgTmV3dG9uIFBhcmssIHVubGVzcyB0cmF2ZWwgdG8gcGFydG5lcnMgaW4gZWFjaCB3ZWVrIGRpY3RhdGVzIG90aGVyd2lzZS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlR3JhZGUgNSAtIMKjMjcsOTc5IC0gwqMzMSwzOTYgcGVyIGFubnVtXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC0gMTd0aCBTZXB0ZW1iZXIgMjAyNFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlXHUwMDNjZW1cdTAwM2VQbGVhc2Ugbm90ZSB0aGF0IGFzIG9mIEFwcmlsIDIwMjQsIHRoZXJlIGhhcyBiZWVuIGEgY2hhbmdlIGluIHRoZSBVS+KAmXMgc3BvbnNvcnNoaXAgdGhyZXNob2xkLiBSZWdyZXR0YWJseSBhcyB0aGUgc2FsYXJ5IGZvciB0aGlzIHJvbGUgZmFsbHMgYmVuZWF0aCB0aGlzLCB5b3Ugd2lsbCBub3QgYmUgZWxpZ2libGUgZm9yIHNwb25zb3JzaGlwIHRoZXJlZm9yZSB5b3VyIGFwcGxpY2F0aW9uIHdpbGwgYXV0b21hdGljYWxseSBiZSByZWplY3RlZC5cdTAwM2MvZW1cdTAwM2VcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOiLCozI3LDk3OSAtIMKjMzEsMzk2IC8geWVhciIsImNvbXBlbnNhdGlvbl9taW5pbXVtIjoyNzk3OS4wLCJjb21wZW5zYXRpb25fbWF4aW11bSI6MzEzOTYuMCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjoiR0JQIiwiY29tcGVuc2F0aW9uX2ZyZXF1ZW5jeSI6InllYXIiLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA5LTAyVDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIHNlZWtpbmcgYW4gRWR1Y2F0aW9uYWwgUGFydG5lcnNoaXBzIENvb3JkaW5hdG9yIHRvIGpvaW4gb3VyIGZyaWVuZGx5IGFuZCBidXN5IENlbnRyZSBmb3IgRWR1Y2F0aW9uYWwgUGFydG5lcnNoaXBzIChDRVApIGluIHN1cHBvcnRpbmcgb3ZlcmFsbCBtYW5hZ2VtZW50IGFuZCBjb29yZGluYXRpb24gb2YgZWR1Y2F0aW9uYWwgcGFydG5lcnNoaXBzLCB3aGljaCBpbmNsdWRlIGZyYW5jaGlzZWQsIHZhbGlkYXRlZCBhbmQgdHJhbnNuYXRpb25hbCBlZHVjYXRpb24gYXJyYW5nZW1lbnRzLCBhcyB3ZWxsIGFzIG90aGVyIHR5cGVzIG9mIGFjYWRlbWljIGNvbGxhYm9yYXRpb24sIG9uIGJlaGFsZiBvZiB0aGUgVW5pdmVyc2l0eS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZnVsbF90aW1lIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGdWxsIFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgRWR1Y2F0aW9uYWwgUGFydG5lcnNoaXBzIENvb3JkaW5hdG9yIHdpbGwgcHJvdmlkZSBjb21wcmVoZW5zaXZlIHByb2Zlc3Npb25hbCBzdXBwb3J0IHRvIENFUCBhY3Jvc3MgYWxsIHdvcmsgc3RyZWFtcyBhcyBkaXJlY3RlZCBieSB0aGUgSGVhZCBvZiBFZHVjYXRpb25hbCBQYXJ0bmVyc2hpcHMgYW5kIHRoZSBQcm8gVmljZS1DaGFuY2VsbG9yIChQYXJ0bmVyc2hpcCBTdHJhdGVneSkgYW5kIHdpbGwgaGF2ZSByZXNwb25zaWJpbGl0eSBmb3IgY29vcmRpbmF0aW5nIHRoZSBwb3J0Zm9saW8gb2YgcGFydG5lcnNoaXAgcHJvdmlzaW9uIGFuZCBsZWFkaW5nIG9uIHJlY29yZC1rZWVwaW5nIGFuZCBjb21tdW5pY2F0aW9ucyB3aXRoIHBhcnRuZXJzIGFuZCBVbml2ZXJzaXR5IHRlYW1zLiBBcyBFZHVjYXRpb25hbCBQYXJ0bmVyc2hpcHMgQ29vcmRpbmF0b3IsIHlvdSB3aWxsIHdvcmsgb24gdmFyaW91cyB3b3Jrc3RyZWFtcyBhc3NvY2lhdGVkIHdpdGggb3VyIGVkdWNhdGlvbmFsIHBhcnRuZXJzaGlwcywgaW5jbHVkaW5nIHByb3ZpZGluZyBhZG1pbmlzdHJhdGl2ZSBzdXBwb3J0IGZvciB0aGUgaW1wbGVtZW50YXRpb24gb2Ygc3ViLXByb2plY3RzIHN0ZW1taW5nIGZyb20gY3VycmVudCBwYXJ0bmVyc2hpcHMsIGVzdGFibGlzaG1lbnQgb2YgbmV3IHBhcnRuZXJzaGlwcyBhbmQgcmVsYXRpb25zaGlwIG1hbmFnZW1lbnQgYW5kIHRyYWluaW5nIGJldHdlZW4gdGhlIFVuaXZlcnNpdHkgYW5kIG91ciBwYXJ0bmVyIGluc3RpdHV0aW9ucy4gWW91IHdpbGwgdHJhdmVsIHJlZ3VsYXJseSB0byB2aXNpdCBvdXIgcGFydG5lciBpbnN0aXR1dGlvbnMgYWNyb3NzIHRoZSBVSywgd2l0aCBzb21lIGludGVybmF0aW9uYWwgdHJhdmVsIHJlcXVpcmVkLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSByb2xlIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIGNvb3JkaW5hdGluZyBvbmdvaW5nIG11bHRpcGxlIHByb2plY3RzIHdpdGggcGFydG5lcnMsIGFzIHdlbGwgYXMgYW4gYXJyYXkgb2YgYWRtaW5pc3RyYXRpdmUgZHV0aWVzIHJlbGF0aW5nIHRvIG91ciBlZHVjYXRpb25hbCBwYXJ0bmVyc2hpcCBhY3Rpdml0eSwgc3VjaCBhcyBvdmVyc2VlaW5nIHBhcnRuZXIgdmlzaXRzLCBpbmNsdWRpbmcgYXVkaXRzLCBzZW5pb3IgbWFuYWdlbWVudCwgYW5kIHN0dWRlbnQgZXhjaGFuZ2VzLiBZb3UnbGwgb3JnYW5pc2UgYW5kIG1pbnV0ZSBPcGVyYXRpb25hbCBhbmQgU3RlZXJpbmcgR3JvdXAgbWVldGluZ3MsIG1haW50YWluIGEgcmVnaXN0ZXIgb2YgYWxsIHBhcnRuZXIgYWN0aXZpdGllcywgYW5kIG1hbmFnZSB0cmF2ZWwgYm9va2luZ3MgZm9yIGtleSB1bml2ZXJzaXR5IHN0YWZmLiBZb3VyIHJvbGUgd2lsbCBhbHNvIGludm9sdmUgY29vcmRpbmF0aW5nIHBvbGljaWVzIGFuZCBwcm9jZWR1cmVzLCBzdXBwb3J0aW5nIG1vZGVyYXRpb24gYW5kIGFzc2Vzc21lbnQgYm9hcmRzLCBhbmQgaW1wbGVtZW50aW5nIG5ldyBwcm9jZXNzZXMgdG8gZW5oYW5jZSBjb2xsYWJvcmF0aW9uIHdpdGggb3VyIGVkdWNhdGlvbmFsIHBhcnRuZXJzLlx1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaWRlYWxseSBoYXZlIGV4dGVuc2l2ZSBleHBlcmllbmNlIG9mIGRlbGl2ZXJpbmcgZXhjZWxsZW50IGN1c3RvbWVyIHNlcnZpY2UsIGJhbGFuY2luZyB0aGUgYnVzaW5lc3MgbmVlZHMgb2YgZGlmZmVyZW50IHN0YWtlaG9sZGVycywgYXMgd2VsbCBhcyBmYW1pbGlhcml0eSB3aXRoIHRoZSBIRSBvciBGRSBlbnZpcm9ubWVudCAob3Igc2ltaWxhcikgYW5kIGV4cGVyaWVuY2Ugb2YgZWZmZWN0aXZlIHdvcmtpbmcgd2l0aCBhIHJhbmdlIG9mIGludGVybmFsIGFuZCBleHRlcm5hbCBzdGFrZWhvbGRlcnMgaW4gYW55IGNvbnRleHQuXHUwMDI2bmJzcDsgWW91IHdpbGwgaGF2ZSBhIHN0cm9uZyBhcHByb2FjaCB0byBwcm9qZWN0IG1hbmFnZW1lbnQsIHdpdGggYSBjbGVhciBhYmlsaXR5IHRvIGJlIGd1aWRlZCBieSBlc3RhYmxpc2hlZCBwcm9jZXNzIGFuZCBwcmVjZWRlbnRzLCBidXQgd2hlcmUgbmVlZGVkLCBhIGRlbW9uc3RyYWJsZSBjYXBhYmlsaXR5IHRvIHVzZSBpbml0aWF0aXZlLCBleHBlcmllbmNlIGFuZCBqdWRnZW1lbnQgdG8gcmVzb2x2ZSBkYXktdG8tZGF5IGlzc3VlcyB3aGlsZSBzdWdnZXN0aW5nIG9wdGlvbnMgYW5kIG1ha2luZyByZWNvbW1lbmRhdGlvbnMgdG8gYWRkcmVzcyBtb3JlIGNvbXBsZXggcHJvYmxlbXMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IG11c3QgaGF2ZSBhIHByb3ZlbiBhYmlsaXR5IHRvIHdvcmsgYm90aCBpbmRlcGVuZGVudGx5IGFuZCBhcyBwYXJ0IG9mIGEgdGVhbSBhbmQgYmUgYWJsZSB0byBjb21tdW5pY2F0ZSwgbGlhaXNlIGFuZCBuZWdvdGlhdGUgZWZmZWN0aXZlbHkgd2l0aCBhIHdpZGUgcmFuZ2Ugb2Ygc3Rha2Vob2xkZXJzLCBpbmNsdWRpbmcgYWNhZGVtaWMgYW5kIHByb2Zlc3Npb25hbCBzZXJ2aWNlcyBzdGFmZiwgcGFydG5lciBjb250YWN0cywgcmVndWxhdG9yeSBib2RpZXMsIHJlY3J1aXRtZW50IGFnZW50cywgZXRjLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSBzaG91bGQgYmUgZmxleGlibGUsIHJlc2lsaWVudCBhbmQgYWRhcHRpdmUsIHdpdGggYSBkZW1vbnN0cmFibGUgY2FwYWNpdHkgdG8gbWFuYWdlIGNvbXBldGluZyBwcmlvcml0aWVzIGluIGEgYnVzeSBlbnZpcm9ubWVudC4gT3VyIHdvcmsgc29tZXRpbWVzIGludm9sdmVzIGEgbmVlZCBmb3IgY29uZmlkZW50aWFsaXR5LCBzbyBhIGRlbW9uc3RyYWJsZSBhYmlsaXR5IHRvIGRlYWwgc2Vuc2l0aXZlbHkgd2l0aCBjb25maWRlbnRpYWwgaW5mb3JtYXRpb24gaXMgYSBtdXN0LiBXZSBwYXJ0aWN1bGFybHkgd2VsY29tZSBjYW5kaWRhdGVzIHdpdGggcHJldmlvdXMgZXhwZXJpZW5jZSBlbmdhZ2luZyB3aXRoIHBhcnRuZXJzaGlwcyBhbmQgZmFtaWxpYXJpdHkgd2l0aCBNaWNyb3NvZnQgMzY1IHN1aXRlIChvciBzaW1pbGFyKS5cdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJFZHVjYXRpb25hbCBQYXJ0bmVyc2hpcHMgQ29vcmRpbmF0b3IgIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzLzNkMzRkMDA0LTdhNDctNGQzNC04Y2IzLWRjNTkxZTNkOTJkMCIsInBhdGgiOiIvZW4vcG9zdGluZ3MvM2QzNGQwMDQtN2E0Ny00ZDM0LThjYjMtZGM1OTFlM2Q5MmQwIiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjIyNjM3IiwicmVxdWlzaXRpb25faWQiOiIzODQvMjMvMjQiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMzgxMzkiLCJuYW1lIjoiQ2VudHJlIGZvciBFZHVjYXRpb25hbCBQYXJ0bmVyc2hpcHMgIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTgiLCJjaXR5IjoiQmF0aCAiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIiwicHJvdmluY2UiOiJCYXRoIn19XX0=
  recorded_at: Thu, 08 Aug 2024 10:46:26 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 08 Aug 2024 10:46:26 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"656e1346acef4e158ad87a4081ea7975"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-5f22611fe5f1c901c433892ce4506164'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB7; path=/
      - _pinpoint_session=sVK8iO4GyFl%2FAWcQ0r33RYnCtwbqZaITFR1JuV35x6Qlf5n7nIri%2F7g7PrV%2BfmNaUKK8n66QEwmYowNTZtmaJLt1LYyrr2Q4k%2FJ8ylTpwsbSyH1R6seNUm56yFSaY4Wi0ZpNUQ4DmCsFzRd4HXfAVozmHh%2Bb97i78H2s7ni03yaW5zTTBctELEQjjm28c3Q3iCPtsmOEsu7JeLX%2FKSatplyoLT1Pouk3hgMXUdt1tBMqGlIEQS9UYJPwe6h2DD5TwzbnJmaI6KkJeKegOfx6GzkuBZatCNyzY4S9VQwfSmr6jr6WG5ZnAfngo%2Fbqfl7emxwuFPKfLu%2FWVaUl48AGXPv3s%2BG6qVK3ICwT9n6Ya1%2FzFBui8tz5xUl9sQ2RtW%2FLEOQYoGqRDEkW7jtI3oujCECEOg%3D%3D--z7cYsbAgvUpQgA%2FO--Ls5z5BpRAKB0AqI75%2BGDpA%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 15 Aug 2024 10:46:26 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=2951ce98-c49d-460b-89b3-94d873beb9b1; path=/; expires=Thu, 08 Aug
        2024 14:46:26 GMT; secure
      - ahoy_visitor=291ad39b-9489-4c7f-97c8-01004a08ce8f; path=/; expires=Sat, 08
        Aug 2026 10:46:26 GMT; secure
      X-Request-Id:
      - aff460db-4c7d-4a2b-bad3-4aed384e2e4e
      X-Runtime:
      - '0.196376'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        PCFET0NUWVBFIGh0bWw+CjxodG1sIGxhbmc9ImVuLUdCIj4KPGhlYWQ+CjxzY3JpcHQgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0Ij52YXIgX3JvbGxiYXJDb25maWcgPSB7ImFjY2Vzc1Rva2VuIjoiMGFiNDFmODI3NGUwNGQ2MzgyMzhiNjFhZjkxYzI5N2EiLCJjYXB0dXJlVW5jYXVnaHQiOnRydWUsInBheWxvYWQiOnsiZW52aXJvbm1lbnQiOiJwcm9kdWN0aW9uIn0sImlnbm9yZWRNZXNzYWdlcyI6WyJTUDQwMSAtIFVuYXV0aG9yaXplZCJdLCJjaGVja0lnbm9yZSI6ZnVuY3Rpb24oaXNVbmNhdWdodCwgYXJncywgcGF5bG9hZCkgewogIHZhciBtZXNzYWdlID0gYXJnc1swXTsKICB2YXIgaWdub3JlZE1vYmlsZU1lc3NhZ2VzID0gWwogICAgYFVuY2F1Z2h0IFN5bnRheEVycm9yOiBVbmV4cGVjdGVkIHRva2VuICc7J2AsCiAgICBgU3ludGF4RXJyb3I6IFVuZXhwZWN0ZWQgdG9rZW4gJzsnLiBFeHBlY3RlZCAnKScgdG8gZW5kIGEgY29tcG91bmQgZXhwcmVzc2lvbi5gCiAgXTsKICB2YXIgdXNlckFnZW50Q29udGFpbnNNb2JpbGUgPSB3aW5kb3cgJiYgd2luZG93Lm5hdmlnYXRvciAmJiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudCAmJiB3aW5kb3cubmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdNb2JpbGUnKSAhPT0gLTE7CiAgaWYodXNlckFnZW50Q29udGFpbnNNb2JpbGUgJiYgaWdub3JlZE1vYmlsZU1lc3NhZ2VzLmluY2x1ZGVzKG1lc3NhZ2UpKSB7CiAgICAvLyBpZ25vcmUgdGhpcyBtZXNzYWdlCiAgICByZXR1cm4gdHJ1ZTsKICB9CiAgdmFyIGlnbm9yZWRNZXNzYWdlcyA9IFsKICAgIGBSZXNpemVPYnNlcnZlciBsb29wIGNvbXBsZXRlZCB3aXRoIHVuZGVsaXZlcmVkIG5vdGlmaWNhdGlvbnMuYCwKICAgIGBTY3JpcHQgZXJyb3IuYAogIF07CiAgaWYoaWdub3JlZE1lc3NhZ2VzLmluY2x1ZGVzKG1lc3NhZ2UpKSB7CiAgICAvLyBpZ25vcmUgdGhpcyBtZXNzYWdlCiAgICByZXR1cm4gdHJ1ZTsKICB9Cn0KfTs8L3NjcmlwdD4KPHNjcmlwdCBub25jZT0iNWYyMjYxMWZlNWYxYzkwMWM0MzM4OTJjZTQ1MDYxNjQiPiFmdW5jdGlvbihyKXt2YXIgZT17fTtmdW5jdGlvbiBvKG4pe2lmKGVbbl0pcmV0dXJuIGVbbl0uZXhwb3J0czt2YXIgdD1lW25dPXtpOm4sbDohMSxleHBvcnRzOnt9fTtyZXR1cm4gcltuXS5jYWxsKHQuZXhwb3J0cyx0LHQuZXhwb3J0cyxvKSx0Lmw9ITAsdC5leHBvcnRzfW8ubT1yLG8uYz1lLG8uZD1mdW5jdGlvbihyLGUsbil7by5vKHIsZSl8fE9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLGUse2VudW1lcmFibGU6ITAsZ2V0Om59KX0sby5yPWZ1bmN0aW9uKHIpeyJ1bmRlZmluZWQiIT10eXBlb2YgU3ltYm9sJiZTeW1ib2wudG9TdHJpbmdUYWcmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eShyLFN5bWJvbC50b1N0cmluZ1RhZyx7dmFsdWU6Ik1vZHVsZSJ9KSxPYmplY3QuZGVmaW5lUHJvcGVydHkociwiX19lc01vZHVsZSIse3ZhbHVlOiEwfSl9LG8udD1mdW5jdGlvbihyLGUpe2lmKDEmZSYmKHI9byhyKSksOCZlKXJldHVybiByO2lmKDQmZSYmIm9iamVjdCI9PXR5cGVvZiByJiZyJiZyLl9fZXNNb2R1bGUpcmV0dXJuIHI7dmFyIG49T2JqZWN0LmNyZWF0ZShudWxsKTtpZihvLnIobiksT2JqZWN0LmRlZmluZVByb3BlcnR5KG4sImRlZmF1bHQiLHtlbnVtZXJhYmxlOiEwLHZhbHVlOnJ9KSwyJmUmJiJzdHJpbmciIT10eXBlb2Ygcilmb3IodmFyIHQgaW4gcilvLmQobix0LGZ1bmN0aW9uKGUpe3JldHVybiByW2VdfS5iaW5kKG51bGwsdCkpO3JldHVybiBufSxvLm49ZnVuY3Rpb24ocil7dmFyIGU9ciYmci5fX2VzTW9kdWxlP2Z1bmN0aW9uKCl7cmV0dXJuIHIuZGVmYXVsdH06ZnVuY3Rpb24oKXtyZXR1cm4gcn07cmV0dXJuIG8uZChlLCJhIixlKSxlfSxvLm89ZnVuY3Rpb24ocixlKXtyZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHIsZSl9LG8ucD0iIixvKG8ucz0wKX0oW2Z1bmN0aW9uKHIsZSxvKXsidXNlIHN0cmljdCI7dmFyIG49bygxKSx0PW8oNSk7X3JvbGxiYXJDb25maWc9X3JvbGxiYXJDb25maWd8fHt9LF9yb2xsYmFyQ29uZmlnLnJvbGxiYXJKc1VybD1fcm9sbGJhckNvbmZpZy5yb2xsYmFySnNVcmx8fCJodHRwczovL2Nkbi5yb2xsYmFyLmNvbS9yb2xsYmFyanMvcmVmcy90YWdzL3YyLjI2LjEvcm9sbGJhci5taW4uanMiLF9yb2xsYmFyQ29uZmlnLmFzeW5jPXZvaWQgMD09PV9yb2xsYmFyQ29uZmlnLmFzeW5jfHxfcm9sbGJhckNvbmZpZy5hc3luYzt2YXIgYT1uLnNldHVwU2hpbSh3aW5kb3csX3JvbGxiYXJDb25maWcpLGw9dChfcm9sbGJhckNvbmZpZyk7d2luZG93LnJvbGxiYXI9bi5Sb2xsYmFyLGEubG9hZEZ1bGwod2luZG93LGRvY3VtZW50LCFfcm9sbGJhckNvbmZpZy5hc3luYyxfcm9sbGJhckNvbmZpZyxsKX0sZnVuY3Rpb24ocixlLG8peyJ1c2Ugc3RyaWN0Ijt2YXIgbj1vKDIpLHQ9bygzKTtmdW5jdGlvbiBhKHIpe3JldHVybiBmdW5jdGlvbigpe3RyeXtyZXR1cm4gci5hcHBseSh0aGlzLGFyZ3VtZW50cyl9Y2F0Y2gocil7dHJ5e2NvbnNvbGUuZXJyb3IoIltSb2xsYmFyXTogSW50ZXJuYWwgZXJyb3IiLHIpfWNhdGNoKHIpe319fX12YXIgbD0wO2Z1bmN0aW9uIGkocixlKXt0aGlzLm9wdGlvbnM9cix0aGlzLl9yb2xsYmFyT2xkT25FcnJvcj1udWxsO3ZhciBvPWwrKzt0aGlzLnNoaW1JZD1mdW5jdGlvbigpe3JldHVybiBvfSwidW5kZWZpbmVkIiE9dHlwZW9mIHdpbmRvdyYmd2luZG93Ll9yb2xsYmFyU2hpbXMmJih3aW5kb3cuX3JvbGxiYXJTaGltc1tvXT17aGFuZGxlcjplLG1lc3NhZ2VzOltdfSl9dmFyIHM9byg0KSxkPWZ1bmN0aW9uKHIsZSl7cmV0dXJuIG5ldyBpKHIsZSl9LGM9ZnVuY3Rpb24ocil7cmV0dXJuIG5ldyBzKGQscil9O2Z1bmN0aW9uIHUocil7cmV0dXJuIGEoKGZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSxuPXtzaGltOmUsbWV0aG9kOnIsYXJnczpvLHRzOm5ldyBEYXRlfTt3aW5kb3cuX3JvbGxiYXJTaGltc1t0aGlzLnNoaW1JZCgpXS5tZXNzYWdlcy5wdXNoKG4pfSkpfWkucHJvdG90eXBlLmxvYWRGdWxsPWZ1bmN0aW9uKHIsZSxvLG4sdCl7dmFyIGw9ITEsaT1lLmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLHM9ZS5nZXRFbGVtZW50c0J5VGFnTmFtZSgic2NyaXB0IilbMF0sZD1zLnBhcmVudE5vZGU7aS5jcm9zc09yaWdpbj0iIixpLnNyYz1uLnJvbGxiYXJKc1VybCxvfHwoaS5hc3luYz0hMCksaS5vbmxvYWQ9aS5vbnJlYWR5c3RhdGVjaGFuZ2U9YSgoZnVuY3Rpb24oKXtpZighKGx8fHRoaXMucmVhZHlTdGF0ZSYmImxvYWRlZCIhPT10aGlzLnJlYWR5U3RhdGUmJiJjb21wbGV0ZSIhPT10aGlzLnJlYWR5U3RhdGUpKXtpLm9ubG9hZD1pLm9ucmVhZHlzdGF0ZWNoYW5nZT1udWxsO3RyeXtkLnJlbW92ZUNoaWxkKGkpfWNhdGNoKHIpe31sPSEwLGZ1bmN0aW9uKCl7dmFyIGU7aWYodm9pZCAwPT09ci5fcm9sbGJhckRpZExvYWQpe2U9bmV3IEVycm9yKCJyb2xsYmFyLmpzIGRpZCBub3QgbG9hZCIpO2Zvcih2YXIgbyxuLGEsbCxpPTA7bz1yLl9yb2xsYmFyU2hpbXNbaSsrXTspZm9yKG89by5tZXNzYWdlc3x8W107bj1vLnNoaWZ0KCk7KWZvcihhPW4uYXJnc3x8W10saT0wO2k8YS5sZW5ndGg7KytpKWlmKCJmdW5jdGlvbiI9PXR5cGVvZihsPWFbaV0pKXtsKGUpO2JyZWFrfX0iZnVuY3Rpb24iPT10eXBlb2YgdCYmdChlKX0oKX19KSksZC5pbnNlcnRCZWZvcmUoaSxzKX0saS5wcm90b3R5cGUud3JhcD1mdW5jdGlvbihyLGUsbyl7dHJ5e3ZhciBuO2lmKG49ImZ1bmN0aW9uIj09dHlwZW9mIGU/ZTpmdW5jdGlvbigpe3JldHVybiBlfHx7fX0sImZ1bmN0aW9uIiE9dHlwZW9mIHIpcmV0dXJuIHI7aWYoci5faXNXcmFwKXJldHVybiByO2lmKCFyLl9yb2xsYmFyX3dyYXBwZWQmJihyLl9yb2xsYmFyX3dyYXBwZWQ9ZnVuY3Rpb24oKXtvJiYiZnVuY3Rpb24iPT10eXBlb2YgbyYmby5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dHJ5e3JldHVybiByLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1jYXRjaChvKXt2YXIgZT1vO3Rocm93IGUmJigic3RyaW5nIj09dHlwZW9mIGUmJihlPW5ldyBTdHJpbmcoZSkpLGUuX3JvbGxiYXJDb250ZXh0PW4oKXx8e30sZS5fcm9sbGJhckNvbnRleHQuX3dyYXBwZWRTb3VyY2U9ci50b1N0cmluZygpLHdpbmRvdy5fcm9sbGJhcldyYXBwZWRFcnJvcj1lKSxlfX0sci5fcm9sbGJhcl93cmFwcGVkLl9pc1dyYXA9ITAsci5oYXNPd25Qcm9wZXJ0eSkpZm9yKHZhciB0IGluIHIpci5oYXNPd25Qcm9wZXJ0eSh0KSYmKHIuX3JvbGxiYXJfd3JhcHBlZFt0XT1yW3RdKTtyZXR1cm4gci5fcm9sbGJhcl93cmFwcGVkfWNhdGNoKGUpe3JldHVybiByfX07Zm9yKHZhciBwPSJsb2csZGVidWcsaW5mbyx3YXJuLHdhcm5pbmcsZXJyb3IsY3JpdGljYWwsZ2xvYmFsLGNvbmZpZ3VyZSxoYW5kbGVVbmNhdWdodEV4Y2VwdGlvbixoYW5kbGVBbm9ueW1vdXNFcnJvcnMsaGFuZGxlVW5oYW5kbGVkUmVqZWN0aW9uLGNhcHR1cmVFdmVudCxjYXB0dXJlRG9tQ29udGVudExvYWRlZCxjYXB0dXJlTG9hZCIuc3BsaXQoIiwiKSxmPTA7ZjxwLmxlbmd0aDsrK2YpaS5wcm90b3R5cGVbcFtmXV09dShwW2ZdKTtyLmV4cG9ydHM9e3NldHVwU2hpbTpmdW5jdGlvbihyLGUpe2lmKHIpe3ZhciBvPWUuZ2xvYmFsQWxpYXN8fCJSb2xsYmFyIjtpZigib2JqZWN0Ij09dHlwZW9mIHJbb10pcmV0dXJuIHJbb107ci5fcm9sbGJhclNoaW1zPXt9LHIuX3JvbGxiYXJXcmFwcGVkRXJyb3I9bnVsbDt2YXIgbD1uZXcgYyhlKTtyZXR1cm4gYSgoZnVuY3Rpb24oKXtlLmNhcHR1cmVVbmNhdWdodCYmKGwuX3JvbGxiYXJPbGRPbkVycm9yPXIub25lcnJvcixuLmNhcHR1cmVVbmNhdWdodEV4Y2VwdGlvbnMocixsLCEwKSxlLndyYXBHbG9iYWxFdmVudEhhbmRsZXJzJiZ0KHIsbCwhMCkpLGUuY2FwdHVyZVVuaGFuZGxlZFJlamVjdGlvbnMmJm4uY2FwdHVyZVVuaGFuZGxlZFJlamVjdGlvbnMocixsLCEwKTt2YXIgYT1lLmF1dG9JbnN0cnVtZW50O3JldHVybiExIT09ZS5lbmFibGVkJiYodm9pZCAwPT09YXx8ITA9PT1hfHxmdW5jdGlvbihyKXtyZXR1cm4hKCJvYmplY3QiIT10eXBlb2Ygcnx8dm9pZCAwIT09ci5wYWdlJiYhci5wYWdlKX0oYSkpJiZyLmFkZEV2ZW50TGlzdGVuZXImJihyLmFkZEV2ZW50TGlzdGVuZXIoImxvYWQiLGwuY2FwdHVyZUxvYWQuYmluZChsKSksci5hZGRFdmVudExpc3RlbmVyKCJET01Db250ZW50TG9hZGVkIixsLmNhcHR1cmVEb21Db250ZW50TG9hZGVkLmJpbmQobCkpKSxyW29dPWwsbH0pKSgpfX0sUm9sbGJhcjpjfX0sZnVuY3Rpb24ocixlLG8peyJ1c2Ugc3RyaWN0IjtmdW5jdGlvbiBuKHIsZSxvLG4pe3IuX3JvbGxiYXJXcmFwcGVkRXJyb3ImJihuWzRdfHwobls0XT1yLl9yb2xsYmFyV3JhcHBlZEVycm9yKSxuWzVdfHwobls1XT1yLl9yb2xsYmFyV3JhcHBlZEVycm9yLl9yb2xsYmFyQ29udGV4dCksci5fcm9sbGJhcldyYXBwZWRFcnJvcj1udWxsKTt2YXIgdD1lLmhhbmRsZVVuY2F1Z2h0RXhjZXB0aW9uLmFwcGx5KGUsbik7byYmby5hcHBseShyLG4pLCJhbm9ueW1vdXMiPT09dCYmKGUuYW5vbnltb3VzRXJyb3JzUGVuZGluZys9MSl9ci5leHBvcnRzPXtjYXB0dXJlVW5jYXVnaHRFeGNlcHRpb25zOmZ1bmN0aW9uKHIsZSxvKXtpZihyKXt2YXIgdDtpZigiZnVuY3Rpb24iPT10eXBlb2YgZS5fcm9sbGJhck9sZE9uRXJyb3IpdD1lLl9yb2xsYmFyT2xkT25FcnJvcjtlbHNlIGlmKHIub25lcnJvcil7Zm9yKHQ9ci5vbmVycm9yO3QuX3JvbGxiYXJPbGRPbkVycm9yOyl0PXQuX3JvbGxiYXJPbGRPbkVycm9yO2UuX3JvbGxiYXJPbGRPbkVycm9yPXR9ZS5oYW5kbGVBbm9ueW1vdXNFcnJvcnMoKTt2YXIgYT1mdW5jdGlvbigpe3ZhciBvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtuKHIsZSx0LG8pfTtvJiYoYS5fcm9sbGJhck9sZE9uRXJyb3I9dCksci5vbmVycm9yPWF9fSxjYXB0dXJlVW5oYW5kbGVkUmVqZWN0aW9uczpmdW5jdGlvbihyLGUsbyl7aWYocil7ImZ1bmN0aW9uIj09dHlwZW9mIHIuX3JvbGxiYXJVUkgmJnIuX3JvbGxiYXJVUkguYmVsb25nc1RvU2hpbSYmci5yZW1vdmVFdmVudExpc3RlbmVyKCJ1bmhhbmRsZWRyZWplY3Rpb24iLHIuX3JvbGxiYXJVUkgpO3ZhciBuPWZ1bmN0aW9uKHIpe3ZhciBvLG4sdDt0cnl7bz1yLnJlYXNvbn1jYXRjaChyKXtvPXZvaWQgMH10cnl7bj1yLnByb21pc2V9Y2F0Y2gocil7bj0iW3VuaGFuZGxlZHJlamVjdGlvbl0gZXJyb3IgZ2V0dGluZyBgcHJvbWlzZWAgZnJvbSBldmVudCJ9dHJ5e3Q9ci5kZXRhaWwsIW8mJnQmJihvPXQucmVhc29uLG49dC5wcm9taXNlKX1jYXRjaChyKXt9b3x8KG89Ilt1bmhhbmRsZWRyZWplY3Rpb25dIGVycm9yIGdldHRpbmcgYHJlYXNvbmAgZnJvbSBldmVudCIpLGUmJmUuaGFuZGxlVW5oYW5kbGVkUmVqZWN0aW9uJiZlLmhhbmRsZVVuaGFuZGxlZFJlamVjdGlvbihvLG4pfTtuLmJlbG9uZ3NUb1NoaW09byxyLl9yb2xsYmFyVVJIPW4sci5hZGRFdmVudExpc3RlbmVyKCJ1bmhhbmRsZWRyZWplY3Rpb24iLG4pfX19fSxmdW5jdGlvbihyLGUsbyl7InVzZSBzdHJpY3QiO2Z1bmN0aW9uIG4ocixlLG8pe2lmKGUuaGFzT3duUHJvcGVydHkmJmUuaGFzT3duUHJvcGVydHkoImFkZEV2ZW50TGlzdGVuZXIiKSl7Zm9yKHZhciBuPWUuYWRkRXZlbnRMaXN0ZW5lcjtuLl9yb2xsYmFyT2xkQWRkJiZuLmJlbG9uZ3NUb1NoaW07KW49bi5fcm9sbGJhck9sZEFkZDt2YXIgdD1mdW5jdGlvbihlLG8sdCl7bi5jYWxsKHRoaXMsZSxyLndyYXAobyksdCl9O3QuX3JvbGxiYXJPbGRBZGQ9bix0LmJlbG9uZ3NUb1NoaW09byxlLmFkZEV2ZW50TGlzdGVuZXI9dDtmb3IodmFyIGE9ZS5yZW1vdmVFdmVudExpc3RlbmVyO2EuX3JvbGxiYXJPbGRSZW1vdmUmJmEuYmVsb25nc1RvU2hpbTspYT1hLl9yb2xsYmFyT2xkUmVtb3ZlO3ZhciBsPWZ1bmN0aW9uKHIsZSxvKXthLmNhbGwodGhpcyxyLGUmJmUuX3JvbGxiYXJfd3JhcHBlZHx8ZSxvKX07bC5fcm9sbGJhck9sZFJlbW92ZT1hLGwuYmVsb25nc1RvU2hpbT1vLGUucmVtb3ZlRXZlbnRMaXN0ZW5lcj1sfX1yLmV4cG9ydHM9ZnVuY3Rpb24ocixlLG8pe2lmKHIpe3ZhciB0LGEsbD0iRXZlbnRUYXJnZXQsV2luZG93LE5vZGUsQXBwbGljYXRpb25DYWNoZSxBdWRpb1RyYWNrTGlzdCxDaGFubmVsTWVyZ2VyTm9kZSxDcnlwdG9PcGVyYXRpb24sRXZlbnRTb3VyY2UsRmlsZVJlYWRlcixIVE1MVW5rbm93bkVsZW1lbnQsSURCRGF0YWJhc2UsSURCUmVxdWVzdCxJREJUcmFuc2FjdGlvbixLZXlPcGVyYXRpb24sTWVkaWFDb250cm9sbGVyLE1lc3NhZ2VQb3J0LE1vZGFsV2luZG93LE5vdGlmaWNhdGlvbixTVkdFbGVtZW50SW5zdGFuY2UsU2NyZWVuLFRleHRUcmFjayxUZXh0VHJhY2tDdWUsVGV4dFRyYWNrTGlzdCxXZWJTb2NrZXQsV2ViU29ja2V0V29ya2VyLFdvcmtlcixYTUxIdHRwUmVxdWVzdCxYTUxIdHRwUmVxdWVzdEV2ZW50VGFyZ2V0LFhNTEh0dHBSZXF1ZXN0VXBsb2FkIi5zcGxpdCgiLCIpO2Zvcih0PTA7dDxsLmxlbmd0aDsrK3QpclthPWxbdF1dJiZyW2FdLnByb3RvdHlwZSYmbihlLHJbYV0ucHJvdG90eXBlLG8pfX19LGZ1bmN0aW9uKHIsZSxvKXsidXNlIHN0cmljdCI7ZnVuY3Rpb24gbihyLGUpe3RoaXMuaW1wbD1yKGUsdGhpcyksdGhpcy5vcHRpb25zPWUsZnVuY3Rpb24ocil7Zm9yKHZhciBlPWZ1bmN0aW9uKHIpe3JldHVybiBmdW5jdGlvbigpe3ZhciBlPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKTtpZih0aGlzLmltcGxbcl0pcmV0dXJuIHRoaXMuaW1wbFtyXS5hcHBseSh0aGlzLmltcGwsZSl9fSxvPSJsb2csZGVidWcsaW5mbyx3YXJuLHdhcm5pbmcsZXJyb3IsY3JpdGljYWwsZ2xvYmFsLGNvbmZpZ3VyZSxoYW5kbGVVbmNhdWdodEV4Y2VwdGlvbixoYW5kbGVBbm9ueW1vdXNFcnJvcnMsaGFuZGxlVW5oYW5kbGVkUmVqZWN0aW9uLF9jcmVhdGVJdGVtLHdyYXAsbG9hZEZ1bGwsc2hpbUlkLGNhcHR1cmVFdmVudCxjYXB0dXJlRG9tQ29udGVudExvYWRlZCxjYXB0dXJlTG9hZCIuc3BsaXQoIiwiKSxuPTA7bjxvLmxlbmd0aDtuKyspcltvW25dXT1lKG9bbl0pfShuLnByb3RvdHlwZSl9bi5wcm90b3R5cGUuX3N3YXBBbmRQcm9jZXNzTWVzc2FnZXM9ZnVuY3Rpb24ocixlKXt2YXIgbyxuLHQ7Zm9yKHRoaXMuaW1wbD1yKHRoaXMub3B0aW9ucyk7bz1lLnNoaWZ0KCk7KW49by5tZXRob2QsdD1vLmFyZ3MsdGhpc1tuXSYmImZ1bmN0aW9uIj09dHlwZW9mIHRoaXNbbl0mJigiY2FwdHVyZURvbUNvbnRlbnRMb2FkZWQiPT09bnx8ImNhcHR1cmVMb2FkIj09PW4/dGhpc1tuXS5hcHBseSh0aGlzLFt0WzBdLG8udHNdKTp0aGlzW25dLmFwcGx5KHRoaXMsdCkpO3JldHVybiB0aGlzfSxyLmV4cG9ydHM9bn0sZnVuY3Rpb24ocixlLG8peyJ1c2Ugc3RyaWN0IjtyLmV4cG9ydHM9ZnVuY3Rpb24ocil7cmV0dXJuIGZ1bmN0aW9uKGUpe2lmKCFlJiYhd2luZG93Ll9yb2xsYmFySW5pdGlhbGl6ZWQpe2Zvcih2YXIgbyxuLHQ9KHI9cnx8e30pLmdsb2JhbEFsaWFzfHwiUm9sbGJhciIsYT13aW5kb3cucm9sbGJhcixsPWZ1bmN0aW9uKHIpe3JldHVybiBuZXcgYShyKX0saT0wO289d2luZG93Ll9yb2xsYmFyU2hpbXNbaSsrXTspbnx8KG49by5oYW5kbGVyKSxvLmhhbmRsZXIuX3N3YXBBbmRQcm9jZXNzTWVzc2FnZXMobCxvLm1lc3NhZ2VzKTt3aW5kb3dbdF09bix3aW5kb3cuX3JvbGxiYXJJbml0aWFsaXplZD0hMH19fX1dKTs8L3NjcmlwdD4KICA8bWV0YSBodHRwLWVxdWl2PSJYLVVBLUNvbXBhdGlibGUiIGNvbnRlbnQ9IklFPWVkZ2UiPgogIAogIDx0aXRsZT5Kb2JzIGF0IEJhdGggU3BhIFVuaXZlcnNpdHkgfCBCYXRoIFNwYSBVbml2ZXJzaXR5IENhcmVlcnM8L3RpdGxlPgogIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJMZWFybiBtb3JlIGFib3V0IHdvcmtpbmcgYXQgQmF0aCBTcGEgVW5pdmVyc2l0eSBhbmQgZGlzY292ZXIgb3VyIGxhdGVzdCBjYXJlZXIgb3Bwb3J0dW5pdGllcyI+CgogIDxzdHlsZT4KICAgIDpyb290IHsKICAgICAgLS10aGVtZS1wcmltYXJ5LWNvbG9yOiAjNDU1QzUxOwogICAgICAtLXRoZW1lLXNlY29uZGFyeS1jb2xvcjogI0Y0RjRGNDsKICAgICAgLS10aGVtZS1oaWdobGlnaHQtY29sb3I6ICNFRDlEODU7CiAgICAgIC0tdGhlbWUtcHJpbWFyeS1mb250LWNvbG9yOiAjRkZGRkZGOwogICAgICAtLXRoZW1lLXNlY29uZGFyeS1mb250LWNvbG9yOiAjMUMyMTIxOwogICAgICAtLXRoZW1lLWhpZ2hsaWdodC1mb250LWNvbG9yOiAjRkZGRkZGOwogICAgfQogIDwvc3R5bGU+CgogIDxzY3JpcHQgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0Ij4KLy88IVtDREFUQVsKCiAgICB3aW5kb3cuZXNzZW50aWFsQ29va2llc09ubHkgPSBmYWxzZTsKCiAgICB3aW5kb3cubGVnYWN5Q29va2llRGF0YSA9IHsiaHJlZiI6Ii9jb29raWUtcG9saWN5IiwibWVzc2FnZSI6IldlIHVzZSBjb29raWVzIHRvIGVuc3VyZSB5b3UgZ2V0IHRoZSBiZXN0IGV4cGVyaWVuY2Ugb24gb3VyIHdlYnNpdGUuIiwiZGlzbWlzcyI6IkdvdCBpdCEiLCJsaW5rIjoiTGVhcm4gbW9yZSJ9OwoKICAgIHdpbmRvdy5jb29raWVDb25zZW50RGF0YSA9IHsiY3VzdG9tQ29udGVudCI6eyJub3RpY2UiOiJXZSB1c2UgY29va2llcyB0byBlbnN1cmUgeW91IGdldCB0aGUgYmVzdCBleHBlcmllbmNlIG9uIG91ciB3ZWJzaXRlLiIsImV4cGxhbmF0aW9uIjoiV2UgdXNlIGNvb2tpZXMgdG8gZW5zdXJlIHRoZSBiYXNpYyBmdW5jdGlvbmFsaXRpZXMgb2YgdGhlIHdlYnNpdGUgYW5kIHRvIGVuaGFuY2UgeW91ciBvbmxpbmUgZXhwZXJpZW5jZS4gWW91IGNhbiBjaG9vc2UgZm9yIGVhY2ggY2F0ZWdvcnkgdG8gb3B0LWluL291dCB3aGVuZXZlciB5b3Ugd2FudC4gRm9yIG1vcmUgZGV0YWlscyByZWxhdGl2ZSB0byBjb29raWVzIGFuZCBvdGhlciBzZW5zaXRpdmUgZGF0YSwgcGxlYXNlIHJlYWQgdGhlIGZ1bGwgPGEgaHJlZj0nL2Nvb2tpZS1wb2xpY3knPnByaXZhY3kgcG9saWN5PC9hPi4iLCJmdXJ0aGVyX2luZm9ybWF0aW9uIjpudWxsfSwidHJhbnNsYXRpb25zIjp7ImFjY2VwdF9hbGwiOiJBY2NlcHQgYWxsIiwiY2xvc2UiOiJDbG9zZSIsImNvb2tpZV9wcmVmZXJlbmNlcyI6IkNvb2tpZSBwcmVmZXJlbmNlcyIsImNvb2tpZXMiOiJDb29raWVzIiwiZGVzY3JpcHRpb24iOiJEZXNjcmlwdGlvbiIsImRvbWFpbiI6IkRvbWFpbiIsImV4cGlyYXRpb24iOiJFeHBpcmF0aW9uIiwibW9yZV9pbmZvcm1hdGlvbiI6Ik1vcmUgaW5mb3JtYXRpb24iLCJuYW1lIjoiTmFtZSIsInJlamVjdF9hbGwiOiJSZWplY3QgYWxsIiwic2F2ZV9zZXR0aW5ncyI6IlNhdmUgc2V0dGluZ3MiLCJzZXR0aW5ncyI6IlNldHRpbmdzIiwic3RyaWN0bHlfbmVjZXNzYXJ5X2Nvb2tpZXMiOiJTdHJpY3RseSBuZWNlc3NhcnkgY29va2llcyIsInRoZXNlX2Nvb2tpZXNfYXJlX2Vzc2VudGlhbCI6IlRoZXNlIGNvb2tpZXMgYXJlIGVzc2VudGlhbCBmb3IgdGhlIHByb3BlciBmdW5jdGlvbmluZyBvZiBvdXIgd2Vic2l0ZS4gV2l0aG91dCB0aGVzZSBjb29raWVzLCB0aGUgd2Vic2l0ZSBtYXkgbm90IHdvcmsgcHJvcGVybHkuIiwiYXNfc29vbl9hc19icm93c2VyX3dpbmRvd19pc19jbG9zZWQiOiJBcyBzb29uIGFzIGJyb3dzZXIgd2luZG93IGlzIGNsb3NlZCIsImFsbG93c191c190b19hc3NvY2lhdGVfZmlsZV91cGxvYWRzIjoiQWxsb3dzIHVzIHRvIGFzc29jaWF0ZSBmaWxlIHVwbG9hZHMgdG8gb3VyIGZpbGUgc3RvcmFnZSBwcm92aWRlciB3aXRoIHlvdXIgZm9ybSBzdWJtaXNzaW9ucyIsImFsbG93c19vdXJfbG9hZF9iYWxhbmNlciI6IkFsbG93cyBvdXIgbG9hZCBiYWxhbmNlciB0byBzZW5kIHlvdXIgc3BlY2lmaWMgdHJhZmZpYyB0byB0aGUgc2FtZSBiYWNrZW5kIHNlcnZlciIsInNhdmVzX3lvdXJfZGVjaXNpb25zIjoiU2F2ZXMgeW91ciBkZWNpc2lvbnMgYWJvdXQgdGhlc2UgY29va2llcyBzbyB3ZSBkb24ndCBuZWVkIHRvIGFzayBldmVyeSB0aW1lIiwiYW5hbHl0aWNzX2FuZF9wZXJmb3JtYW5jZV9jb29raWVzIjoiQW5hbHl0aWNzIGFuZCBQZXJmb3JtYW5jZSBjb29raWVzIiwidGhlc2VfY29va2llc19yZW1lbWJlcl90aGVfY2hvaWNlcyI6IlRoZXNlIGNvb2tpZXMgYWxsb3cgdGhlIHdlYnNpdGUgdG8gcmVtZW1iZXIgdGhlIGNob2ljZXMgeW91IGhhdmUgbWFkZSBpbiB0aGUgcGFzdCIsImludGVybmFsX21ldHJpY3NfY29sbGVjdG9yIjoiV2UgdXNlIGFuIGludGVybmFsIG1ldHJpY3MgY29sbGVjdG9yIHRvIHVuZGVyc3RhbmQgaW50ZXJhY3Rpb25zIHdpdGggb3VyIHdlYnNpdGUgb3ZlciB0aW1lIiwic2l4X21vbnRocyI6IlNpeCBtb250aHMiLCJ0d29feWVhcnMiOiJUd28geWVhcnMiLCJmb3VyX2hvdXJzIjoiRm91ciBob3VycyJ9fTsKCi8vXV0+Cjwvc2NyaXB0PgogIDxzY3JpcHQgc3JjPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL2pzL3J1bnRpbWUtOTE5ZGNkOGNjMWI4NjNiMjc3MjQuanMiIGRhdGEtdHVyYm9saW5rcy10cmFjaz0icmVsb2FkIiBub25jZT0iNWYyMjYxMWZlNWYxYzkwMWM0MzM4OTJjZTQ1MDYxNjQiIGRlZmVyPSJkZWZlciI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL2pzLzg4NjAtNzVjOTU4ZjUzODE0ZDRkN2Y0ZWYuanMiIGRhdGEtdHVyYm9saW5rcy10cmFjaz0icmVsb2FkIiBub25jZT0iNWYyMjYxMWZlNWYxYzkwMWM0MzM4OTJjZTQ1MDYxNjQiIGRlZmVyPSJkZWZlciI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL2pzL2FwcGxpY2F0aW9uLTNhYjM5NjU2ZjRmOWU0ZDhhOTY3LmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9qcy83NzU4LTUwMDUzNGQxNGRlMTNkNmQ5MTNkLmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9qcy80OTM0LTdlZjFkZjQ4YzM4Y2I4YTMyNzA3LmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9qcy9jbG91ZGluYXJ5LTRlNWViNWQ4ZGMwZTE5M2Q0Y2VmLmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9qcy9jb29raWVjb25zZW50LTc2YmE3Y2NmODQ1OTdjMzVlNjY3LmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0Pgo8c2NyaXB0IHNyYz0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9qcy9jZHAtODRmZWZmMmRkYzhhOTk3ODU2MWQuanMiIGRhdGEtdHVyYm9saW5rcy10cmFjaz0icmVsb2FkIiBub25jZT0iNWYyMjYxMWZlNWYxYzkwMWM0MzM4OTJjZTQ1MDYxNjQiIGRlZmVyPSJkZWZlciI+PC9zY3JpcHQ+CjxzY3JpcHQgc3JjPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL2pzL2d0bS1kYXRhLWxheWVyLTljN2FmZDBmM2E1YWE3Yzk3MTljLmpzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiBkZWZlcj0iZGVmZXIiPjwvc2NyaXB0PgogIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgbWVkaWE9InNjcmVlbiIgaHJlZj0iaHR0cHM6Ly9kMm41aWVkOTRtYXpvcC5jbG91ZGZyb250Lm5ldC9wYWNrcy9jc3MvYXBwbGljYXRpb24tYjJkNTM1ZTAuY3NzIiBkYXRhLXR1cmJvbGlua3MtdHJhY2s9InJlbG9hZCIgLz4KPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBtZWRpYT0ic2NyZWVuIiBocmVmPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL2Nzcy9jb29raWVjb25zZW50LTRjNGRmYjA5LmNzcyIgZGF0YS10dXJib2xpbmtzLXRyYWNrPSJyZWxvYWQiIC8+CgogIDxtZXRhIG5hbWU9InR1cmJvbGlua3MtY2FjaGUtY29udHJvbCIgY29udGVudD0ibm8tcHJldmlldyI+CgogIDxtZXRhIG5hbWU9ImNzcmYtcGFyYW0iIGNvbnRlbnQ9ImF1dGhlbnRpY2l0eV90b2tlbiIgLz4KPG1ldGEgbmFtZT0iY3NyZi10b2tlbiIgY29udGVudD0iYlFqT2x4QTdZcDhITDk2Y1lhV3pHbTYzZXo1MitacGNUbkk0bVJNamlLSHFpSXV6UStZOCtSU2llMERzYk4rQ2tjNW9tQVo0MWMzTXZlQUlkRjR3MXc9PSIgLz4KICA8bWV0YSBuYW1lPSJjc3Atbm9uY2UiIGNvbnRlbnQ9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0IiAvPgoKICA8bGluayByZWw9InNob3J0Y3V0IGljb24iIHR5cGU9ImltYWdlL3gtaWNvbiIgaHJlZj0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vcGlucG9pbnRocS9pbWFnZS91cGxvYWQvY19maWxsLGZfYXV0byxoXzMyLHFfYXV0byx3XzMyL3YxL3VwbG9hZHMvcHJvZHVjdGlvbi9seWJ5NWFxcTN6a2NibHV3dHdndi5wbmciIC8+CgogIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MS4wIj4KCiAgPHNjcmlwdCBzcmM9Imh0dHBzOi8va2l0LmZvbnRhd2Vzb21lLmNvbS84MzJiYjg2ZDUyLmpzIiBjcm9zc29yaWdpbj0iYW5vbnltb3VzIiBub25jZT0iNWYyMjYxMWZlNWYxYzkwMWM0MzM4OTJjZTQ1MDYxNjQiPjwvc2NyaXB0PgoKICAKCiAgICA8bGluayByZWw9ImFsdGVybmF0ZSIgdHlwZT0iYXBwbGljYXRpb24vcnNzK3htbCIgdGl0bGU9IlJTUyIgaHJlZj0iaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2pvYnMucnNzIiAvPgoKCiAgCiAgICA8bGluayBocmVmPSJodHRwczovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2NzczI/ZmFtaWx5PU1vbnRzZXJyYXQ6d2dodEA0MDA7NTAwOzYwMDs3MDAmYW1wO2Rpc3BsYXk9c3dhcCIgcmVsPSJzdHlsZXNoZWV0Ij4KICAgIDxzdHlsZT4KICAgICAgYm9keSwKICAgICAgaW5wdXQgewogICAgICAgIGZvbnQtZmFtaWx5OiBNb250c2VycmF0LCAiR1RXYWxzaGVpbVBybyIsICJIZWx2ZXRpY2EgTmV1ZSIsICJIZWx2ZXRpY2EiLCBzYW5zLXNlcmlmICFpbXBvcnRhbnQ7CiAgICAgIH0KICAgIDwvc3R5bGU+CgoKICAKICAgIDxzdHlsZSB0eXBlPSJ0ZXh0L2NzcyI+CiAgICAgIC8qIChEZWZhdWx0IE9wdGlvbnMpIEN1c3RvbSBUeXBlIHRvIGFsbG93IHVzIHRvIHVzZSBib3RoIG9mIG91ciBicmFuZCB0eXBlZmFjZXMgaW4gaGVyb3MgZXRjICovCi5waW5wb2ludC1ibG9jay0taGVybyAuY2FyZWVycy1oZXJvLWJsb2NrX190aXRsZSB7CmZvbnQtd2VpZ2h0OiA3MDA7Cn0KLnBpbnBvaW50LWJsb2NrLS10ZXh0IC5jYXJlZXJzLWJsb2NrX19oMiB7CmZvbnQtd2VpZ2h0OiA3MDA7CmZvbnQtc2l6ZTogNHJlbTsKbGluZS1oZWlnaHQ6IDEuMTsKbWFyZ2luLWJvdHRvbTogMjBweDsKfQoucGlucG9pbnQtYmxvY2stLXRleHQgLmNhcmVlcnMtYmxvY2tfX3RyaXggewpmb250LXdlaWdodDogNDAwOwpsaW5lLWhlaWdodDogMS42Owpjb2xvcjogIzRENEQ0RDsKfQoucGlucG9pbnQtYmxvY2stLWNhcmRzIC5jYXJlZXJzLWNhcmQtYmxvY2tfX2gzIHsKZm9udC13ZWlnaHQ6IDcwMDsKbGluZS1oZWlnaHQ6IDEuMjsKfQoucGlucG9pbnQtYmxvY2stLWNhcmRzIC5jYXJlZXJzLWNhcmQtYmxvY2tfX3Agewpmb250LXdlaWdodDogNDAwOwpsaW5lLWhlaWdodDogMS42Owpjb2xvcjogIzRENEQ0RDsKfQoucGlucG9pbnQtYmxvY2stLWpvYnMgLmNhcmVlcnMtYmxvY2tfX2gyIHsKZm9udC13ZWlnaHQ6IDcwMDsKZm9udC1zaXplOiA0cmVtOwpsaW5lLWhlaWdodDogMS4xOwp9CgovKiAoRGVmYXVsdCBPcHRpb25zKSBDdXN0b20gRm9vdGVyICovCi5leHRlcm5hbC1mb290ZXIgewpwYWRkaW5nOiAzMnB4Owp9CgovKiAoRGVmYXVsdCBPcHRpb25zKSBUZXN0aW1vbmlhbCBCbG9jayAqLwoucGlucG9pbnQtYmxvY2stLXRlc3RpbW9uaWFsIGltZyB7CmJvcmRlci1yYWRpdXM6IDE4NXB4Owp9Ci5waW5wb2ludC1ibG9jay0tdGVzdGltb25pYWwgY2l0ZSB7CmZvbnQtd2VpZ2h0OiA3MDAgIWltcG9ydGFudDsKbGV0dGVyLXNwYWNpbmc6IDNweDsKfQoucGlucG9pbnQtYmxvY2stLXRlc3RpbW9uaWFsIC5jYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrIHsKYWxpZ24taXRlbXM6IGNlbnRlcjsKfQoKLyogKERlZmF1bHQgT3B0aW9ucykgRXh0ZXJuYWwgUGFuZWxzIC0gZS5nLiB0aXRsZXMgb24gSkRzLCBJbnRlcnZpZXcgU2NoZWR1bGluZywgZXRjLikgKi8KLmV4dGVybmFsLXBhbmVsIC5leHRlcm5hbC1wYW5lbF9fdGl0bGUgewpmb250LXdlaWdodDogNzAwOwp9CgovKiAoRGVmYXVsdCBPcHRpb25zKSBDdXN0b20gSGVybyBJbWFnZSBQb3NpdGlvbmluZyAqLwouY2FyZWVycy1oZXJvLWJsb2NrLS1pbWFnZSB7CmJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjsKfQoKLyogKERlZmF1bHQgT3B0aW9ucykgSGlkZSB0aGUgTG9nbyBUZXh0ICovCi5jYXJlZXJzLW5hdmlnYXRpb24tYmxvY2tfX2xvZ28tdGV4dCwKLmNhcmVlcnMtaGVyby1ibG9ja19fbG9nby10ZXh0IHsKZGlzcGxheTogbm9uZTsKfQoKLyogKERlZmF1bHQgT3B0aW9ucykgTWFrZSBoZXJvIGJpZ2dlciBiZWNhdXNlIHBlb3BsZSBsaWtlIHRvIHNlZSB2aWRlbyBhbmQgcGljdHVyZXMgKi8KLmNhcmVlcnMtaGVyby1ibG9jay1jb250YWluZXIgewpwYWRkaW5nLXRvcDogODBweCAhaW1wb3J0YW50OwpwYWRkaW5nLWJvdHRvbTogODBweCAhaW1wb3J0YW50Owp9CgovKiAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gQVMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi8KCi8qIEN1c3RvbWl6ZSBuYXZiYXIgKi8KLnBpbnBvaW50LWJsb2NrLS1uYXZpZ2F0aW9uIHsKICBwYWRkaW5nLXRvcDogNXB4OwogIHBhZGRpbmctYm90dG9tOiA1cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjsKfQoKLyogU2V0IGxvZ28gd2lkdGggKi8KQG1lZGlhIChtaW4td2lkdGg6IDc2OHB4KSB7CiAgLnBpbnBvaW50LWJsb2NrLS1uYXZpZ2F0aW9uIGltZywKICAuY2FyZWVycy1oZXJvLWJsb2NrLS1hbGlnbi1jZW50ZXIgaW1nIHsKICAgIHdpZHRoOiA2MHB4ICFpbXBvcnRhbnQ7CiAgICBoZWlnaHQ6IGF1dG8gIWltcG9ydGFudDsKICB9Cn0KCi8qIEN1c3RvbWl6ZSBuYXYgaXRlbXMgKi8KLmNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fbWVudS1pdGVtIHsKICBjb2xvcjogIzZENkQ2RCAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50ICFpbXBvcnRhbnQ7CiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsKfQoKLmNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fc3ViLW5hdi1tZW51IHsKICBjb2xvcjogIzZENkQ2RCAhaW1wb3J0YW50OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmYgIWltcG9ydGFudDsKfQoKLmNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fbWVudS1zZWN0aW9uLS1jZW50ZXIgPiBkaXYgPiBkaXYgPiAuY2FyZWVycy1uYXZpZ2F0aW9uLWJsb2NrX19tZW51LWl0ZW0gPiBkaXYgewogIGJveC1zaGFkb3c6IDBweCAwcHggMTBweCAtNHB4IHJnYigwIDAgMCAvIDQ1JSk7CiAgb3ZlcmZsb3c6IGhpZGRlbjsKfQoKLmNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fbWVudS1pdGVtOmhvdmVyLAouY2FyZWVycy1uYXZpZ2F0aW9uLWJsb2NrX19zdWItbmF2LW1lbnU6aG92ZXIgewogIGNvbG9yOiAjMDA3RUFDICFpbXBvcnRhbnQ7Cn0KCi8qIFVwZGF0ZSBzb21lIG9mIHRoZSBzdHlsZXMgdG8gbWVldCBhY2Nlc3NpYmlsaXR5IHJlcXVpcmVtZW50cyAqLwouZXh0ZXJuYWwtZGVmaW5pdGlvbi1saXN0IGR0IHsKICBjb2xvcjogIzAwNzhBMzsKfQoKI2pzLWNhcmVlcnMtam9icy1ibG9jaywKLmV4dGVybmFsLWRlZmluaXRpb24tbGlzdCBkZCwKLmV4dGVybmFsLWRlZmluaXRpb24tbGlzdCBkZCAKLmxpbmstLWRlZmF1bHQsCi50ZXh0LWJyYW5kLWFzaC1ncmV5ewogIGNvbG9yOiAjNWM1YzVjICFpbXBvcnRhbnQ7Cn0KCi5leHRlcm5hbC1idXR0b246Zm9jdXMsIAouZXh0ZXJuYWwtYnV0dG9uOmFjdGl2ZSwKLmxpbms6Zm9jdXMsCi5zZWFyY2hfX2lucHV0OmZvY3VzLAouZmlsdGVyIC5maWx0ZXJfX2J1dHRvbjpmb2N1cyB7CiAgb3V0bGluZTogMnB4IHNvbGlkICMyYTg4NTMgIWltcG9ydGFudDsKfQoKLmV4dGVybmFsLWJ1dHRvbi0tdGhlbWUtaGlnaGxpZ2h0OmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA0ZjY2Owp9Cgouc2xpY2stZG90cyBsaSBidXR0b246aG92ZXIsIC5zbGljay1kb3RzIGxpIGJ1dHRvbjpmb2N1cyB7CiAgb3V0bGluZTogMXB4IHNvbGlkICMyYTg4NTMgIWltcG9ydGFudDsKfQoKLyogRml4IHRoZSBwbGFjZWhvbGRlciBjb2xvcnMgKi8KaW5wdXQ6OnBsYWNlaG9sZGVyLAouY2hlY2thYmxlLWlucHV0X19sYWJlbCwKLnJlYWN0LXNlbGVjdCAucmVhY3Qtc2VsZWN0X19wbGFjZWhvbGRlciB7CiAgY29sb3I6ICM2RjZGNkYgIWltcG9ydGFudDsKICBvcGFjaXR5OiAxOwp9CiAgICA8L3N0eWxlPgoKCiAgICAKCgoKCiAgCgogIDxtZXRhIHByb3BlcnR5PSJvZzp1cmwiIGNvbnRlbnQ9Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS8iPgo8bWV0YSBwcm9wZXJ0eT0ib2c6dHlwZSIgY29udGVudD0id2Vic2l0ZSI+CjxtZXRhIHByb3BlcnR5PSJvZzpsb2NhbGUiIGNvbnRlbnQ9ImVuX0dCIj4KPG1ldGEgcHJvcGVydHk9Im9nOnRpdGxlIiBjb250ZW50PSJDYXJlZXJzIGF0IEJhdGggU3BhIFVuaXZlcnNpdHkiPgo8bWV0YSBwcm9wZXJ0eT0ib2c6ZGVzY3JpcHRpb24iIGNvbnRlbnQ9IkJhdGggU3BhIFVuaXZlcnNpdHkgaXMgd2hlcmUgY3JlYXRpdmUgbWluZHMgbWVldC4gT2ZmZXJpbmcgYSB3aWRlIHJhbmdlIG9mIGNvdXJzZXMgYWNyb3NzIHRoZSBhcnRzLCBzY2llbmNlcywgZWR1Y2F0aW9uLCBzb2NpYWwgc2NpZW5jZSBhbmQgYnVzaW5lc3MgdG8gb3ZlciA3LDUwMCBzdHVkZW50cywgdGhlIFVuaXZlcnNpdHkgZW1wbG95cyBvdXRzdGFuZGluZyBjcmVhdGl2ZSBwcm9mZXNzaW9uYWxzIHdoaWNoIHN1cHBvcnQgaXRzIGFpbSB0byBiZSBhIGxlYWRpbmcgZWR1Y2F0aW9uYWwgaW5zdGl0dXRpb24uLi4iPgo8bWV0YSBwcm9wZXJ0eT0ib2c6aW1hZ2UiIGNvbnRlbnQ9Imh0dHBzOi8vYXBwLnBpbnBvaW50aHEuY29tL3JhaWxzL2FjdGl2ZV9zdG9yYWdlL2Jsb2JzL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQmVIWTJia0U5UFNJc0ltVjRjQ0k2Ym5Wc2JDd2ljSFZ5SWpvaVlteHZZbDlwWkNKOWZRPT0tLTRiZGEwZDRlYjY0ZDlmZTYyMjhmNWQwYjA4OWMwZjRjN2I2ZDU0Njgvb3Blbl9ncmFwaC5wbmciPgo8bWV0YSBuYW1lPSJ0d2l0dGVyOmNhcmQiIGNvbnRlbnQ9InN1bW1hcnlfbGFyZ2VfaW1hZ2UiPgo8bWV0YSBuYW1lPSJ0d2l0dGVyOnNpdGUiIGNvbnRlbnQ9IkBwaW5wb2ludGhxIj4KPG1ldGEgbmFtZT0idHdpdHRlcjppbWFnZSIgY29udGVudD0iaHR0cHM6Ly9hcHAucGlucG9pbnRocS5jb20vcmFpbHMvYWN0aXZlX3N0b3JhZ2UvYmxvYnMvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhSEJCZUhZMmJrRTlQU0lzSW1WNGNDSTZiblZzYkN3aWNIVnlJam9pWW14dllsOXBaQ0o5ZlE9PS0tNGJkYTBkNGViNjRkOWZlNjIyOGY1ZDBiMDg5YzBmNGM3YjZkNTQ2OC9vcGVuX2dyYXBoLnBuZyI+CgogIDxzY3JpcHQgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0Ij4KLy88IVtDREFUQVsKCiAgICB3aW5kb3cucmFpbHNFbnYgPSAicHJvZHVjdGlvbiI7CgovL11dPgo8L3NjcmlwdD4KICAKCiAgICA8bGluayBocmVmPSJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vIiByZWw9ImNhbm9uaWNhbCIgLz4KPC9oZWFkPgoKPGJvZHkgZGlyPSdhdXRvJyBjbGFzcz0iZXh0ZXJuYWwtYm9keSBwaW5wb2ludC1wYWdlIHBpbnBvaW50LXBhZ2UtLWhvbWUgdGhlbWUtZGVmYXVsdCI+CgogIAoKICAKICA8c3R5bGU+CiAgICA6cm9vdCB7CiAgICAgIC0tdGhlbWUtcHJpbWFyeS1jb2xvcjogIzAwN2VhYzsKICAgICAgLS10aGVtZS1zZWNvbmRhcnktY29sb3I6ICNGNEY0RjQ7CiAgICAgIC0tdGhlbWUtaGlnaGxpZ2h0LWNvbG9yOiAjMDA3OGEzOwogICAgICAtLXRoZW1lLXByaW1hcnktZm9udC1jb2xvcjogI0ZGRkZGRjsKICAgICAgLS10aGVtZS1zZWNvbmRhcnktZm9udC1jb2xvcjogIzFDMjEyMTsKICAgICAgLS10aGVtZS1oaWdobGlnaHQtZm9udC1jb2xvcjogI0ZGRkZGRjsKICAgIH0KICA8L3N0eWxlPgoKICA8c3R5bGU+CiAgICBAbWVkaWEgc2NyZWVuIGFuZCAoLW1zLWhpZ2gtY29udHJhc3Q6IGFjdGl2ZSksICgtbXMtaGlnaC1jb250cmFzdDogbm9uZSkgewogICAgICAudGhlbWUtcHJpbWFyeS1jb2xvci1pZS1vdmVycmlkZSB7CiAgICAgICAgY29sb3I6ICMwMDdlYWMgIWltcG9ydGFudDsKICAgICAgfQogICAgICAudGhlbWUtcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3ZWFjICFpbXBvcnRhbnQ7CiAgICAgIH0KICAgICAgLnRoZW1lLXByaW1hcnktYm9yZGVyLWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBib3JkZXItY29sb3I6ICMwMDdlYWMgIWltcG9ydGFudDsKICAgICAgfQogICAgICAudGhlbWUtc2Vjb25kYXJ5LWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBjb2xvcjogI0Y0RjRGNCAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC50aGVtZS1zZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvci1pZS1vdmVycmlkZSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0Y0RjRGNCAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC50aGVtZS1zZWNvbmRhcnktYm9yZGVyLWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBib3JkZXItY29sb3I6ICNGNEY0RjQgIWltcG9ydGFudDsKICAgICAgfQogICAgICAudGhlbWUtaGlnaGxpZ2h0LWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBjb2xvcjogIzAwNzhhMyAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC50aGVtZS1oaWdobGlnaHQtYmFja2dyb3VuZC1jb2xvci1pZS1vdmVycmlkZSB7CiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzAwNzhhMyAhaW1wb3J0YW50OwogICAgICB9CiAgICAgIC50aGVtZS1oaWdobGlnaHQtYm9yZGVyLWNvbG9yLWllLW92ZXJyaWRlIHsKICAgICAgICBib3JkZXItY29sb3I6ICMwMDc4YTMgIWltcG9ydGFudDsKICAgICAgfQogICAgfQogIDwvc3R5bGU+CgoKICA8ZGl2IGNsYXNzPSJleHRlcm5hbC1jb250ZW50IiBpZD0iZXh0ZXJuYWwtY29udGVudC1ib2R5Ij4KCgogICAgCgoKCgoKCjxtYWluIGNsYXNzPSJleHRlcm5hbC1tYWluIj4KCiAgCiAgICA8c2VjdGlvbiBjbGFzcz0icGlucG9pbnQtYmxvY2sgcGlucG9pbnQtYmxvY2stLW5hdmlnYXRpb24gY2FyZWVycy1ibG9jayBjYXJlZXJzLW5hdmlnYXRpb24tYmxvY2sgY2FyZWVycy1uYXZpZ2F0aW9uLWJsb2NrLS1qdXN0aWZpZWQgdGhlbWUtcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yLWllLW92ZXJyaWRlIiBzdHlsZT0iIj4KCiAgPGRpdiBjbGFzcz0iIGZyb3cgZnJvdy0tZ3V0dGVycyBmcm93LS1qdXN0aWZ5LWJldHdlZW4gZnJvdy0taXRlbXMtY2VudGVyIGZyb3ctLW5vd3JhcCI+CgogIDxkaXYgY2xhc3M9ImNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fbWVudS1zZWN0aW9uLS1sZWZ0Ij4KICAgIDxhIHN0eWxlPSJkaXNwbGF5OiBibG9jayIgaHJlZj0iLyI+CgogICAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWl0ZW1zLWNlbnRlciBmcm93LS1ndXR0ZXJzIj4KCiAgICAgICAgPHNwYW4gY2xhc3M9ImNhcmVlcnMtbmF2aWdhdGlvbi1ibG9ja19fbG9nby10ZXh0IiBzdHlsZT0iY29sb3I6IGluaGVyaXQiPgogICAgICAgICAgQ2FyZWVycyBhdAogICAgICAgIDwvc3Bhbj4KCiAgICAgICAgPGRpdiBjbGFzcz0iaGlkZS1hdC1zbS1ibG9jayI+PGltZyBhbHQ9IkJhdGggU3BhIFVuaXZlcnNpdHkgLSBIb21lIiBzdHlsZT0id2lkdGg6IDIxLjZweDsgaGVpZ2h0OiAzMC4wcHg7IiB3aWR0aD0iMjEiIGhlaWdodD0iMzAiIHNyYz0iaHR0cHM6Ly9hcHAucGlucG9pbnRocS5jb20vcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQ1NHZzVRWGRGUFNJc0ltVjRjQ0k2Ym5Wc2JDd2ljSFZ5SWpvaVlteHZZbDlwWkNKOWZRPT0tLWY5ODY5MGRkYmY0MmViMjRhZWJiNjJhYWI4MzhmOTJhZWRjOGNlNzEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDYW05TVkyMVdlbUZZY0d4VFUwbFFUa1JSZDB4cVFqUk9ha0YxVFVGWk5rSnJWbFVpTENKbGVIQWlPbTUxYkd3c0luQjFjaUk2SW5aaGNtbGhkR2x2YmlKOWZRPT0tLWE4YWFmNDVkNjkxY2VmZjU1YmI0ZWNmY2M5YmVjMjFmODA2ODkwZmEvQlNVJTIwbWFzdGVyJTIwbG9nby5wbmciIC8+PC9kaXY+PGRpdiBjbGFzcz0iaGlkZS1zbS1ibG9jayI+PGltZyBhbHQ9IkJhdGggU3BhIFVuaXZlcnNpdHkgLSBIb21lIiBzdHlsZT0id2lkdGg6IDM2LjFweDsgaGVpZ2h0OiA1MC4wcHg7IiB3aWR0aD0iMzYiIGhlaWdodD0iNTAiIHNyYz0iaHR0cHM6Ly9hcHAucGlucG9pbnRocS5jb20vcmFpbHMvYWN0aXZlX3N0b3JhZ2UvcmVwcmVzZW50YXRpb25zL2V5SmZjbUZwYkhNaU9uc2liV1Z6YzJGblpTSTZJa0pCYUhCQ1NHZzVRWGRGUFNJc0ltVjRjQ0k2Ym5Wc2JDd2ljSFZ5SWpvaVlteHZZbDlwWkNKOWZRPT0tLWY5ODY5MGRkYmY0MmViMjRhZWJiNjJhYWI4MzhmOTJhZWRjOGNlNzEvZXlKZmNtRnBiSE1pT25zaWJXVnpjMkZuWlNJNklrSkJhRGRDYW05TVkyMVdlbUZZY0d4VFUwbFJUa1JSZDB4cVFqUk5WRUYzVEdwQlIwOW5Xa1pXUVQwOUlpd2laWGh3SWpwdWRXeHNMQ0p3ZFhJaU9pSjJZWEpwWVhScGIyNGlmWDA9LS01ZmQ5OTBiNTczN2YwNDFiOGIwMDZlMGY2ZjhiOWJkMzA0M2M5NjMxL0JTVSUyMG1hc3RlciUyMGxvZ28ucG5nIiAvPjwvZGl2PgoKICAgICAgPC9kaXY+Cgo8L2E+ICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0iY2FyZWVycy1uYXZpZ2F0aW9uLWJsb2NrX19tZW51LXNlY3Rpb24tLWNlbnRlciI+CgogICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBpZD0ianMtcmVhY3Qtb24tcmFpbHMtY29udGV4dCI+eyJyYWlsc0VudiI6InByb2R1Y3Rpb24iLCJpbk1haWxlciI6ZmFsc2UsImkxOG5Mb2NhbGUiOiJlbiIsImkxOG5EZWZhdWx0TG9jYWxlIjoiZW4iLCJyb3JWZXJzaW9uIjoiMTMuMC4yIiwicm9yUHJvIjpmYWxzZSwiaHJlZiI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS8iLCJsb2NhdGlvbiI6Ii8iLCJzY2hlbWUiOiJodHRwcyIsImhvc3QiOiJiYXRoc3BhLnBpbnBvaW50aHEuY29tIiwicG9ydCI6bnVsbCwicGF0aG5hbWUiOiIvIiwic2VhcmNoIjpudWxsLCJodHRwQWNjZXB0TGFuZ3VhZ2UiOm51bGwsInNlcnZlclNpZGUiOmZhbHNlfTwvc2NyaXB0Pgo8ZGl2IGNsYXNzPSJjYXJlZXJzLW5hdmlnYXRpb24tb3ZlcmZsb3ctbWVudSIgc3R5bGU9IiIgaWQ9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6UmVzcG9uc2l2ZW5hdmlnYXRpb24tcmVhY3QtY29tcG9uZW50LTU5MWMzY2FlLWVhYWQtNDgyZS1iZTgzLTM2NjYzZjlhMDJkMCI+PC9kaXY+CiAgICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vanNvbiIgY2xhc3M9ImpzLXJlYWN0LW9uLXJhaWxzLWNvbXBvbmVudCIgZGF0YS1jb21wb25lbnQtbmFtZT0iRXh0ZXJuYWw6OkNhcmVlcnNwYWdlOjpSZXNwb25zaXZlbmF2aWdhdGlvbiIgZGF0YS1kb20taWQ9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6UmVzcG9uc2l2ZW5hdmlnYXRpb24tcmVhY3QtY29tcG9uZW50LTU5MWMzY2FlLWVhYWQtNDgyZS1iZTgzLTM2NjYzZjlhMDJkMCI+eyJtZW51SXRlbXMiOltdLCJmZWF0dXJlRmxhZ3MiOnsiam9iX3RlbXBsYXRlcyI6ImVuYWJsZWQifSwiY29tcGFueVNldHRpbmdzIjp7ImVkaXRfb2ZmZXJfYmVmb3JlX3NlbmQiOnRydWUsImFkdmFuY2VkX3NlYXJjaCI6dHJ1ZSwiZmFjZWJvb2tfYWR2ZXJ0IjpmYWxzZSwiYnVsa19kb3dubG9hZCI6ZmFsc2UsIm1vdmVfdG9faGlyZWRfb25fb2ZmZXJfYWNjZXB0YW5jZSI6dHJ1ZSwiYnVsa19lbWFpbF9qb2Jfc2Vla2VycyI6ZmFsc2UsIndvcmtmbG93X2F1dG9tYXRpb24iOnRydWUsImNyb25vZnlfZW50ZXJwcmlzZV9jb25uZWN0Ijp0cnVlLCJqb2JfcmVxdWlzaXRpb25fbWFuYWdlbWVudCI6dHJ1ZSwiZXNzZW50aWFsX2Nvb2tpZXNfb25seSI6ZmFsc2UsInVzZV9jb21wYW55X2Zyb21fYWRkcmVzcyI6dHJ1ZSwic2VtaV9wcml2YXRlX2NvbW1lbnRzIjpmYWxzZSwiYWRkaXRpb25hbF9zdGF0dXNlcyI6dHJ1ZSwibXVsdGlwbGVfY29tcGFueV90aGVtZXMiOmZhbHNlLCJzdHJpY3Rfb2ZjY3BfY29tcGxpYW5jZSI6ZmFsc2UsImdyb3VwZWRfam9icyI6ZmFsc2UsIm1vdmVfdG9fYW55X2pvYiI6dHJ1ZSwicmVtb3ZlX2xvZ29fZnJvbV9lbWFpbF90ZW1wbGF0ZSI6ZmFsc2UsImNhbmRpZGF0ZV9qb2JfcHJlZmVyZW5jZXMiOmZhbHNlLCJhdXRvbWF0aWNhbGx5X3JlamVjdF9yZWZlcnJhbHMiOmZhbHNlLCJpbmRlZWRfZmVlZF9zdGFnZXMiOmZhbHNlLCJ2YXJpYWJsZV9zaWduX29mZl9zaWduYXRvcmllcyI6dHJ1ZSwicmVhY3Rfc2VsZWN0X29uX2V4dGVybmFsX2pvYnMiOmZhbHNlLCJtb25pdG9yX3dpdGhfcnVtIjpmYWxzZSwicmVzdHJpY3RlZF9jcm9ub2Z5X29hdXRoX3Njb3BlIjpmYWxzZSwiYXBwbGljYXRpb25fbmF0aW9uYWxfaWRlbnRpZmllcnMiOmZhbHNlLCJhbGxvd19pbmFjdGl2ZV9zdHJ1Y3R1cmVzIjpmYWxzZSwidmlzaWJsZV9vdGhlcl9hcHBsaWNhdGlvbnMiOmZhbHNlLCJhbGxvd19lZGl0aW5nX2pvYl9yZXF1aXNpdGlvbl9maWVsZHMiOnRydWUsInR3b19jb2x1bW5fc2lkZWJhciI6ZmFsc2UsIm11bHRpcGxlX2pvYl9wb3N0aW5ncyI6ZmFsc2UsIm1heF9hcHBsaWNhdGlvbnMiOmZhbHNlLCJncm91cF9pbnRlcnZpZXdzIjpmYWxzZSwiY3JlYXRlX3JlcXVpc2l0aW9uc19mb3JfZXhpc3Rpbmdfam9icyI6dHJ1ZSwidGVhbV9yZWplY3Rpb25fbm90aWZpY2F0aW9uIjpmYWxzZSwic2VuZF9wZGZfY29weV9vZl9hcHBsaWNhdGlvbiI6ZmFsc2UsImRpc2FibGVfaW5kZWVkX2ZlZWQiOmZhbHNlLCJ2b25xX3YyIjp0cnVlLCJyZWRpcmVjdF90b19jdXN0b21fc3ViZG9tYWluIjp0cnVlLCJhZGRfY2NfYW5kX2JjY190b19lbWFpbCI6dHJ1ZSwiYWxsb3dfY3JlYXRpbmdfY29tcGFueV90ZWFtcyI6ZmFsc2UsIm1hbnVhbGx5X3NlbmRfb2ZmZXJzIjpmYWxzZSwicHJpdmF0ZV9jYWxlbmRhcl9ldmVudHMiOnRydWUsImNhbmRpZGF0ZV9kZXRhaWxzX2luX29mZmVyX2hlYWRlciI6ZmFsc2UsInNob3dfZGF0ZV9pbl9vZmZlcl9oZWFkZXIiOnRydWUsInNob3dfam9iX3NlZWtlcnNfaW5fYWxsX2NhbmRpZGF0ZXMiOmZhbHNlLCJ0YWxlbnRfcGlwZWxpbmUiOnRydWUsImFub255bW91c19zY3JlZW5pbmciOnRydWUsImNhbmRpZGF0ZV9zdXJ2ZXlzIjp0cnVlLCJ0YXNrX21hbmFnZW1lbnQiOnRydWUsIm9mZmVyX21hbmFnZW1lbnQiOnRydWUsInJlZmVycmFsX21hbmFnZW1lbnQiOnRydWUsImFkdmFuY2VkX3JlcG9ydGluZyI6dHJ1ZSwiYWxsb3dfY292ZXJfbGV0dGVycyI6dHJ1ZSwibG9jYXRpb25fY2l0eV9zdGF0ZSI6ZmFsc2UsImRlaV9yZXBvcnRzIjp0cnVlLCJhY2Nlc3NpYmxlX2RhdGVfYW5kX3Bob25lIjpmYWxzZSwiZW5hYmxlX3JlZGFjdGlvbiI6dHJ1ZSwiaW50ZXJuc2hpcF9wcm9ncmFtbWUiOmZhbHNlLCJkb2N1bWVudF90ZW1wbGF0ZXNfb25fc3RhZ2UiOnRydWUsInN0YWdlX3Zpc2liaWxpdGllcyI6dHJ1ZSwib25ib2FyZGluZ192MiI6ZmFsc2UsImxpbWl0X29uYm9hcmRpbmdfdG9faGlyZWRfY2FuZGlkYXRlcyI6ZmFsc2UsInBlcnNvbmFsX2RldGFpbHNfYXV0b191cGRhdGUiOnRydWUsImdyb3VwX2Fzc2Vzc21lbnRzIjp0cnVlLCJlbmZvcmNlX2FsbF9vZmZlcl9maWVsZHNfcmVxdWlyZWQiOmZhbHNlLCJyZXN1bWVfcGFyc2luZyI6dHJ1ZSwiY3VzdG9tX2pvYl9wb3N0aW5nX2xvY2F0aW9ucyI6ZmFsc2UsIm9mZmVyX3NwbGl0dGluZyI6ZmFsc2UsImluZGVlZF9sb2NhbGVfdXJsIjpmYWxzZSwiZG93bmxvYWRfcGRmX2FwcGxpY2F0aW9uIjp0cnVlLCJ3b3JrZmxvd19hdXRvbWF0aW9uX3YyIjpmYWxzZSwiZGlzYWJsZV9jb29raWVfZGlhbG9nIjpmYWxzZSwibGlua2VkaW5fam9iX3Bvc3RpbmdzIjpmYWxzZSwidGFsZW50X3BpcGVsaW5lX3YyIjp0cnVlLCJyZXF1aXJlX2hlYWRjb3VudCI6ZmFsc2UsIm9uYm9hcmRpbmdfdjEiOnRydWUsInNraWxscyI6dHJ1ZSwiY2FyZWVyc19zaXRlX2J1aWxkZXJfdjIiOmZhbHNlLCJleHRyYV9tb25pdG9yaW5nX2Zvcl9hdXRvbWF0aW9ucyI6ZmFsc2UsInF1ZXN0aW9ubmFpcmVzIjpmYWxzZSwiY2FuZGlkYXRlX3BvbGljeV9wbHVja2luZyI6ZmFsc2UsInN0YWdlX2dyb3VwcyI6ZmFsc2UsImRvY3VzaWduX2xvZ2dpbmciOmZhbHNlLCJlbmFibGVfY3Jvbm9meV9ldmVudF9kZWxldGlvbl90cmFja2luZyI6ZmFsc2V9LCJlbmFibGVkTG9jYWxlS2V5cyI6WyJlbiJdLCJ1c2VyUm9sZXMiOm51bGwsIm9uYm9hcmRpbmdTZXR0aW5ncyI6eyJpc09uYm9hcmRpbmdFbmFibGVkIjp0cnVlfX08L3NjcmlwdD4KICAgICAgCgoKICA8L2Rpdj4KCiAgPGRpdiBjbGFzcz0iY2FyZWVycy1uYXZpZ2F0aW9uLWJsb2NrX19tZW51LXNlY3Rpb24tLXJpZ2h0Ij4KCiAgICAgIDxhIGNsYXNzPSJjYXJlZXJzLW5hdmlnYXRpb24tYmxvY2tfX21lbnUtaXRlbSIgc3R5bGU9IiIgaHJlZj0iLz9zY3JvbGxfdG89anMtY2FyZWVycy1qb2JzLWJsb2NrIj5WaWV3IEpvYnM8L2E+CgogIDwvZGl2PgoKPC9kaXY+CgoKPC9zZWN0aW9uPgoKCiAgICA8c2VjdGlvbiBjbGFzcz0icGlucG9pbnQtYmxvY2sgcGlucG9pbnQtYmxvY2stLWhlcm8gY2FyZWVycy1oZXJvLWJsb2NrIGNhcmVlcnMtaGVyby1ibG9jay0tYWxpZ24tbGVmdCBjYXJlZXJzLWhlcm8tYmxvY2stLWltYWdlIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogIzIyMjIyMjsgY29sb3I6ICNmZmZmZmY7IGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudChyZ2JhKDAsIDAsIDAsIDAuNSksIHJnYmEoMCwgMCwgMCwgMC41KSksIHVybChodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9mX2F1dG8scV9hdXRvL3YxL3VwbG9hZHMvcHJvZHVjdGlvbi9oOW16a2duMTVoZWtrdmNqY3lkZyk7Ij4KCgoKICAgICAgPGRpdiBjbGFzcz0iZXh0ZXJuYWwtY29udGVudC13cmFwIGNhcmVlcnMtaGVyby1ibG9ja19fY29udGVudC13cmFwIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1oZXJvLWJsb2NrX19jb250ZW50Ij4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMS0xIGNvbC1zbS02LTcgY29sLW1kLTQtNSBjb2wtbGctMy01Ij4KCiAgICAgICAgICAgIDxoMiBjbGFzcz0iY2FyZWVycy1oZXJvLWJsb2NrX190aXRsZSI+V29yayBhdCBCYXRoIFNwYSBVbml2ZXJzaXR5PC9oMj4KICAgICAgICAgICAgPHAgY2xhc3M9ImNhcmVlcnMtaGVyby1ibG9ja19fdGV4dCI+T3VyIHB1cnBvc2UgaXMgdG8gY2hhbGxlbmdlIG91ciBzdGFmZiBhbmQgc3R1ZGVudHMgdG8gcmVhbGlzZSB0aGVpciB0YWxlbnQgYW5kIHRocml2ZS48L3A+CgogICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgIDxhIGFyaWEtbGFiZWw9IiIgY2xhc3M9ImV4dGVybmFsLWJ1dHRvbiBleHRlcm5hbC1idXR0b24tLXRoZW1lLXByaW1hcnkgbWFyLWItNSBtYXItc20tYi0xMCB0aGVtZS1wcmltYXJ5LWJhY2tncm91bmQtY29sb3ItaWUtb3ZlcnJpZGUgdGhlbWUtcHJpbWFyeS1ib3JkZXItY29sb3ItaWUtb3ZlcnJpZGUiIGhyZWY9IiNqcy1jYXJlZXJzLWpvYnMtYmxvY2siPlZpZXcgSm9iczwvYT4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgIDwvZGl2PgoKICAgICAgPC9kaXY+CgoKPC9zZWN0aW9uPgoKCiAgICA8c2VjdGlvbiBjbGFzcz0icGlucG9pbnQtYmxvY2sgcGlucG9pbnQtYmxvY2stLXRleHQgY2FyZWVycy1ibG9jayBjYXJlZXJzLWJsb2NrLS1oZWFkZXIgY2FyZWVycy1ibG9jay0tdGhlbWUtc2Vjb25kYXJ5IHRoZW1lLXNlY29uZGFyeS1iYWNrZ3JvdW5kLWNvbG9yLWllLW92ZXJyaWRlIj4KCiAgPGRpdiBjbGFzcz0iZXh0ZXJuYWwtY29udGVudC13cmFwIj4KCiAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWJsb2NrX19pbm5lciI+CgogICAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWNlbnRlcmVkLWNvbHVtbiAiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtMS0xIGNvbC1zbS02LTcgY29sLW1kLTQtNSBjb2wtbGctMy01Ij4KCiAgICAgICAgICAgIDxoMiBjbGFzcz0iY2FyZWVycy1ibG9ja19faDIgdGV4dC1jZW50ZXIiPk91ciB2YWx1ZXM8L2gyPgoKICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1ibG9ja19fdHJpeCBleHRlcm5hbC1wYW5lbCB0ZXh0LWNlbnRlciI+PGRpdj5BdCBCYXRoIFNwYSB3ZSByZWNvZ25pc2UgdGhhdCBlcXVhbGl0eSwgZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24gYXJlIGVzc2VudGlhbCB0byBidWlsZGluZyB0aGUgY3JlYXRpdmUsIGlubm92YXRpdmUgYW5kIG51cnR1cmluZyBldGhvcyB0aGF0IHdlIHByaWRlIG91cnNlbHZlcyBvbi4gVGhhdOKAmXMgd2h5IDxzdHJvbmc+SW5jbHVzaW9uPC9zdHJvbmc+IGZvcm1zIG9uZSBvZiBvdXIgZm91ciBjb3JlIGN1bHR1cmFsIHZhbHVlcyBhbG9uZ3NpZGUgPHN0cm9uZz5SZXNwZWN0PC9zdHJvbmc+LCA8c3Ryb25nPkNvbGxhYm9yYXRpb24gPC9zdHJvbmc+YW5kIDxzdHJvbmc+U3VzdGFpbmFiaWxpdHk8L3N0cm9uZz4uPC9kaXY+PC9kaXY+CgogICAgICAgIDwvZGl2PgoKICAgICAgPC9kaXY+CgogICAgPC9kaXY+CgogIDwvZGl2PgoKPC9zZWN0aW9uPgoKCiAgICA8c2VjdGlvbiBjbGFzcz0icGlucG9pbnQtYmxvY2sgcGlucG9pbnQtYmxvY2stLXZpZGVvIGNhcmVlcnMtYmxvY2siPgoKICA8ZGl2IGNsYXNzPSJleHRlcm5hbC1jb250ZW50LXdyYXAiPgoKICAgIDxkaXYgaWQ9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6VmlkZW8tcmVhY3QtY29tcG9uZW50LTQzNWY5MTllLWI0YWYtNDE2YS04OGYwLWUzZGFiMGZkOGY5ZSI+PC9kaXY+CiAgICAgIDxzY3JpcHQgdHlwZT0iYXBwbGljYXRpb24vanNvbiIgY2xhc3M9ImpzLXJlYWN0LW9uLXJhaWxzLWNvbXBvbmVudCIgZGF0YS1jb21wb25lbnQtbmFtZT0iRXh0ZXJuYWw6OkNhcmVlcnNwYWdlOjpWaWRlbyIgZGF0YS1kb20taWQ9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6VmlkZW8tcmVhY3QtY29tcG9uZW50LTQzNWY5MTllLWI0YWYtNDE2YS04OGYwLWUzZGFiMGZkOGY5ZSI+eyJwcm92aWRlciI6InlvdXR1YmUiLCJ2aWRlb0lkIjoiaHR0cHM6Ly93d3cueW91dHViZS5jb20vZW1iZWQvb01uaUNsenl6cEk/c2k9NjRFOTRlMlh1YUJhbUdraiIsImZlYXR1cmVGbGFncyI6eyJqb2JfdGVtcGxhdGVzIjoiZW5hYmxlZCJ9LCJjb21wYW55U2V0dGluZ3MiOnsiZWRpdF9vZmZlcl9iZWZvcmVfc2VuZCI6dHJ1ZSwiYWR2YW5jZWRfc2VhcmNoIjp0cnVlLCJmYWNlYm9va19hZHZlcnQiOmZhbHNlLCJidWxrX2Rvd25sb2FkIjpmYWxzZSwibW92ZV90b19oaXJlZF9vbl9vZmZlcl9hY2NlcHRhbmNlIjp0cnVlLCJidWxrX2VtYWlsX2pvYl9zZWVrZXJzIjpmYWxzZSwid29ya2Zsb3dfYXV0b21hdGlvbiI6dHJ1ZSwiY3Jvbm9meV9lbnRlcnByaXNlX2Nvbm5lY3QiOnRydWUsImpvYl9yZXF1aXNpdGlvbl9tYW5hZ2VtZW50Ijp0cnVlLCJlc3NlbnRpYWxfY29va2llc19vbmx5IjpmYWxzZSwidXNlX2NvbXBhbnlfZnJvbV9hZGRyZXNzIjp0cnVlLCJzZW1pX3ByaXZhdGVfY29tbWVudHMiOmZhbHNlLCJhZGRpdGlvbmFsX3N0YXR1c2VzIjp0cnVlLCJtdWx0aXBsZV9jb21wYW55X3RoZW1lcyI6ZmFsc2UsInN0cmljdF9vZmNjcF9jb21wbGlhbmNlIjpmYWxzZSwiZ3JvdXBlZF9qb2JzIjpmYWxzZSwibW92ZV90b19hbnlfam9iIjp0cnVlLCJyZW1vdmVfbG9nb19mcm9tX2VtYWlsX3RlbXBsYXRlIjpmYWxzZSwiY2FuZGlkYXRlX2pvYl9wcmVmZXJlbmNlcyI6ZmFsc2UsImF1dG9tYXRpY2FsbHlfcmVqZWN0X3JlZmVycmFscyI6ZmFsc2UsImluZGVlZF9mZWVkX3N0YWdlcyI6ZmFsc2UsInZhcmlhYmxlX3NpZ25fb2ZmX3NpZ25hdG9yaWVzIjp0cnVlLCJyZWFjdF9zZWxlY3Rfb25fZXh0ZXJuYWxfam9icyI6ZmFsc2UsIm1vbml0b3Jfd2l0aF9ydW0iOmZhbHNlLCJyZXN0cmljdGVkX2Nyb25vZnlfb2F1dGhfc2NvcGUiOmZhbHNlLCJhcHBsaWNhdGlvbl9uYXRpb25hbF9pZGVudGlmaWVycyI6ZmFsc2UsImFsbG93X2luYWN0aXZlX3N0cnVjdHVyZXMiOmZhbHNlLCJ2aXNpYmxlX290aGVyX2FwcGxpY2F0aW9ucyI6ZmFsc2UsImFsbG93X2VkaXRpbmdfam9iX3JlcXVpc2l0aW9uX2ZpZWxkcyI6dHJ1ZSwidHdvX2NvbHVtbl9zaWRlYmFyIjpmYWxzZSwibXVsdGlwbGVfam9iX3Bvc3RpbmdzIjpmYWxzZSwibWF4X2FwcGxpY2F0aW9ucyI6ZmFsc2UsImdyb3VwX2ludGVydmlld3MiOmZhbHNlLCJjcmVhdGVfcmVxdWlzaXRpb25zX2Zvcl9leGlzdGluZ19qb2JzIjp0cnVlLCJ0ZWFtX3JlamVjdGlvbl9ub3RpZmljYXRpb24iOmZhbHNlLCJzZW5kX3BkZl9jb3B5X29mX2FwcGxpY2F0aW9uIjpmYWxzZSwiZGlzYWJsZV9pbmRlZWRfZmVlZCI6ZmFsc2UsInZvbnFfdjIiOnRydWUsInJlZGlyZWN0X3RvX2N1c3RvbV9zdWJkb21haW4iOnRydWUsImFkZF9jY19hbmRfYmNjX3RvX2VtYWlsIjp0cnVlLCJhbGxvd19jcmVhdGluZ19jb21wYW55X3RlYW1zIjpmYWxzZSwibWFudWFsbHlfc2VuZF9vZmZlcnMiOmZhbHNlLCJwcml2YXRlX2NhbGVuZGFyX2V2ZW50cyI6dHJ1ZSwiY2FuZGlkYXRlX2RldGFpbHNfaW5fb2ZmZXJfaGVhZGVyIjpmYWxzZSwic2hvd19kYXRlX2luX29mZmVyX2hlYWRlciI6dHJ1ZSwic2hvd19qb2Jfc2Vla2Vyc19pbl9hbGxfY2FuZGlkYXRlcyI6ZmFsc2UsInRhbGVudF9waXBlbGluZSI6dHJ1ZSwiYW5vbnltb3VzX3NjcmVlbmluZyI6dHJ1ZSwiY2FuZGlkYXRlX3N1cnZleXMiOnRydWUsInRhc2tfbWFuYWdlbWVudCI6dHJ1ZSwib2ZmZXJfbWFuYWdlbWVudCI6dHJ1ZSwicmVmZXJyYWxfbWFuYWdlbWVudCI6dHJ1ZSwiYWR2YW5jZWRfcmVwb3J0aW5nIjp0cnVlLCJhbGxvd19jb3Zlcl9sZXR0ZXJzIjp0cnVlLCJsb2NhdGlvbl9jaXR5X3N0YXRlIjpmYWxzZSwiZGVpX3JlcG9ydHMiOnRydWUsImFjY2Vzc2libGVfZGF0ZV9hbmRfcGhvbmUiOmZhbHNlLCJlbmFibGVfcmVkYWN0aW9uIjp0cnVlLCJpbnRlcm5zaGlwX3Byb2dyYW1tZSI6ZmFsc2UsImRvY3VtZW50X3RlbXBsYXRlc19vbl9zdGFnZSI6dHJ1ZSwic3RhZ2VfdmlzaWJpbGl0aWVzIjp0cnVlLCJvbmJvYXJkaW5nX3YyIjpmYWxzZSwibGltaXRfb25ib2FyZGluZ190b19oaXJlZF9jYW5kaWRhdGVzIjpmYWxzZSwicGVyc29uYWxfZGV0YWlsc19hdXRvX3VwZGF0ZSI6dHJ1ZSwiZ3JvdXBfYXNzZXNzbWVudHMiOnRydWUsImVuZm9yY2VfYWxsX29mZmVyX2ZpZWxkc19yZXF1aXJlZCI6ZmFsc2UsInJlc3VtZV9wYXJzaW5nIjp0cnVlLCJjdXN0b21fam9iX3Bvc3RpbmdfbG9jYXRpb25zIjpmYWxzZSwib2ZmZXJfc3BsaXR0aW5nIjpmYWxzZSwiaW5kZWVkX2xvY2FsZV91cmwiOmZhbHNlLCJkb3dubG9hZF9wZGZfYXBwbGljYXRpb24iOnRydWUsIndvcmtmbG93X2F1dG9tYXRpb25fdjIiOmZhbHNlLCJkaXNhYmxlX2Nvb2tpZV9kaWFsb2ciOmZhbHNlLCJsaW5rZWRpbl9qb2JfcG9zdGluZ3MiOmZhbHNlLCJ0YWxlbnRfcGlwZWxpbmVfdjIiOnRydWUsInJlcXVpcmVfaGVhZGNvdW50IjpmYWxzZSwib25ib2FyZGluZ192MSI6dHJ1ZSwic2tpbGxzIjp0cnVlLCJjYXJlZXJzX3NpdGVfYnVpbGRlcl92MiI6ZmFsc2UsImV4dHJhX21vbml0b3JpbmdfZm9yX2F1dG9tYXRpb25zIjpmYWxzZSwicXVlc3Rpb25uYWlyZXMiOmZhbHNlLCJjYW5kaWRhdGVfcG9saWN5X3BsdWNraW5nIjpmYWxzZSwic3RhZ2VfZ3JvdXBzIjpmYWxzZSwiZG9jdXNpZ25fbG9nZ2luZyI6ZmFsc2UsImVuYWJsZV9jcm9ub2Z5X2V2ZW50X2RlbGV0aW9uX3RyYWNraW5nIjpmYWxzZX0sImVuYWJsZWRMb2NhbGVLZXlzIjpbImVuIl0sInVzZXJSb2xlcyI6bnVsbCwib25ib2FyZGluZ1NldHRpbmdzIjp7ImlzT25ib2FyZGluZ0VuYWJsZWQiOnRydWV9fTwvc2NyaXB0PgogICAgICAKCgogIDwvZGl2PgoKPC9zZWN0aW9uPgoKCiAgICA8c2VjdGlvbiBjbGFzcz0icGlucG9pbnQtYmxvY2sgcGlucG9pbnQtYmxvY2stLWNhcmRzIGNhcmVlcnMtYmxvY2sgY2FyZWVycy1jYXJkcy1ibG9jayBjYXJlZXJzLWJsb2NrLS10aGVtZS1zZWNvbmRhcnkgdGhlbWUtc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3ItaWUtb3ZlcnJpZGUiPgoKICA8ZGl2IGNsYXNzPSJleHRlcm5hbC1jb250ZW50LXdyYXAiPgoKICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2lubmVyIj4KCgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtY2FyZHMtYmxvY2tfX2NhcmRzIj4KCgogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iY2FyZWVycy1jYXJkcy1ibG9ja19fY2FyZCBjb2wtbWQtMS0xIGNhcmVlcnMtY2FyZC1ibG9jayBjYXJlZXJzLWNhcmQtYmxvY2stLWFsaWduLWxlZnQgY2FyZWVycy1jYXJkLWJsb2NrLS12YXJpYW50LWxhcmdlIj4KICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iIj4KCgogICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1ndXR0ZXJzLTJ4IGZyb3ctLWd1dHRlcnMtc20tNHggZnJvdy0tZ3V0dGVycy1tZC04eCI+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tNy0xMiBjb2wtc20tb3JkZXItMSBjb2wtb3JkZXItMiI+CgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19fY29udGVudCI+CgogICAgICAgICAgCiAgICAgICAgICA8aDMgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faDMiPldoeSBhcHBseSB0byBCYXRoIFNwYSBVbml2ZXJzaXR5PzwvaDM+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX3AgIj48ZGl2PldlIGFyZSB0aGUgVUsncyB1bml2ZXJzaXR5IG9mIGNob2ljZSBmb3IgY3JlYXRpdml0eSwgY3VsdHVyZSwgZW50ZXJwcmlzZSBhbmQgZWR1Y2F0aW9uLCBhbmQgYXJlIGhvbWUgdG8gc3R1ZGVudHMgYW5kIHN0YWZmIGZyb20gb3ZlciA4MCBjb3VudHJpZXMuIFRoZSBVbml2ZXJzaXR5IGlzIGNvbW1pdHRlZCB0byByZWNydWl0aW5nIGFuZCByZXRhaW5pbmcgdGhlIGhpZ2hlc3QgcXVhbGl0eSBzdGFmZi48YnI+PGJyPldlIHByb3ZpZGUgYW4gZW52aXJvbm1lbnQgdGhhdCByZXNwZWN0cyBhbmQgY2VsZWJyYXRlcyBhbGwgbWVtYmVycyBvZiBvdXIgY29tbXVuaXR5LCBhbmQgaXMgZnJlZSBmcm9tIGRpc2NyaW1pbmF0aW9uLCBwcmVqdWRpY2UsIGhhcmFzc21lbnQgYW5kIGJ1bGx5aW5nLiBTbyBtdWNoIHNvLCB3ZSBhcmUgcHJvdWQgdG8gaGF2ZSBhIHdpZGUgcmFuZ2Ugb2Ygc3RhZmYgbmV0d29ya3Mgc2V0LXVwIHRvIGZvc3RlciBkaXZlcnNpdHkgYW5kIGluY2x1c2lvbiBoZXJlIGF0IEJhdGggU3BhLsKgPGJyPjxicj5UaGVzZSBpbmNsdWRlOjwvZGl2Pjx1bD4KPGxpPkJhdGhTcGErIChmb3Igb3VyIExHQlRRSUErIFN0YWZmKcKgPC9saT4KPGxpPkRpc2FibGVkIFN0YWZmIE5ldHdvcms8L2xpPgo8bGk+V29tZW4ncyBTdGFmZiBOZXR3b3JrwqA8L2xpPgo8bGk+TmV1cm9kaXZlcnNpdHkgU3RhZmYgTmV0d29ya8KgPC9saT4KPGxpPlBhcmVudCBhbmQgQ2FyZXJzIE5ldHdvcmvCoDwvbGk+CjxsaT5HbG9iYWwgSW5jbHVzaXZpdHkgTmV0d29yayBmb3Igc3RhZmYgd2hvIGlkZW50aWZ5IGFzIEJsYWNrLCBBc2lhbiwgbWl4ZWQgcmFjZSwgb3IgYW5vdGhlciBtaW5vcml0aXNlZCBldGhuaWNpdHkuwqA8L2xpPgo8L3VsPjxkaXY+V2UgYWxzbyBoYXZlIGEgU3RhZmYgRXF1YWxpdGllcyBOZXR3b3JrIGZvciBjb2xsZWFndWVzIGludGVyZXN0ZWQgaW4gYWN0aXZpc20gYW5kIGVuYWN0aW5nIGNoYW5nZSBhdCBhIGdyYXNzcm9vdHMgbGV2ZWwuPGJyPjxicj5UaGVzZSBhcmUgc29tZSBvZiB0aGUgZmFiIHJlYXNvbnMgd2h5IDgyJSBvZiBvdXIgc3RhZmYgc2FpZCB0aGV5IHdvdWxkIHJlY29tbWVuZCB1cyB0byBhIGZyaWVuZCBhcyBhIGdvb2QgZW1wbG95ZXIgaW4gdGhlIGxhc3Qgc3RhZmYgc3VydmV5Ljxicj48YnI+Q2Fycnkgb24gc2Nyb2xsaW5nIGZvciBtb3JlIGdyZWF0IHJlYXNvbnMuLi48L2Rpdj48L2Rpdj4KICAgICAgICAgIAoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTUtMTIgY29sLXNtLW9yZGVyLTIgY29sLW9yZGVyLTEiPgoKICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19pbWFnZSBjbGQtcmVzcG9uc2l2ZSIgYWx0PSIiIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9jX2ZpdCxkcHJfYXV0byxmX2F1dG8scV9hdXRvLHdfYXV0by92MS91cGxvYWRzL3Byb2R1Y3Rpb24vZWlkaHV6bnBkZjhobG11dHNmMG0iIC8+PG5vc2NyaXB0PjxpbWcgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faW1hZ2UiIGFsdD0iIiBzcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2luZnVzZS1ncm91cC9pbWFnZS91cGxvYWQvZl9hdXRvLHFfYXV0by92MS91cGxvYWRzL3Byb2R1Y3Rpb24vZWlkaHV6bnBkZjhobG11dHNmMG0iIC8+PC9ub3NjcmlwdD4KCgogICAgICAgIDwvZGl2PgoKCiAgICA8L2Rpdj4KCgo8L3NlY3Rpb24+Cjwvc2VjdGlvbj4KCiAgICAgICAgPC9kaXY+CgoKICAgIDwvZGl2PgoKICA8L2Rpdj4KCjwvc2VjdGlvbj4KCgogICAgPHNlY3Rpb24gY2xhc3M9InBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS1pbWFnZS1nYWxsZXJ5IGNhcmVlcnMtYmxvY2siPgoKICA8ZGl2IGNsYXNzPSJleHRlcm5hbC1jb250ZW50LXdyYXAiPgoKICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2lubmVyIj4KCiAgICAgIDxkaXYgaWQ9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6SW1hZ2VnYWxsZXJ5LXJlYWN0LWNvbXBvbmVudC1iODc2MGE2NS1kNGJhLTQ1NzktOWI3ZS0zZjliMGEwMzRhZGEiPjwvZGl2PgogICAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iIGNsYXNzPSJqcy1yZWFjdC1vbi1yYWlscy1jb21wb25lbnQiIGRhdGEtY29tcG9uZW50LW5hbWU9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6SW1hZ2VnYWxsZXJ5IiBkYXRhLWRvbS1pZD0iRXh0ZXJuYWw6OkNhcmVlcnNwYWdlOjpJbWFnZWdhbGxlcnktcmVhY3QtY29tcG9uZW50LWI4NzYwYTY1LWQ0YmEtNDU3OS05YjdlLTNmOWIwYTAzNGFkYSI+eyJjbG91ZGluYXJ5SW1hZ2VzIjpbeyJzcmMiOiJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9jX2ZpdCxmX2F1dG8saF8xMDgwLHFfYXV0byx3XzE5MjAvdjEvdXBsb2Fkcy9wcm9kdWN0aW9uL2xwd2F0NmkybXB3cGd6a29tYzY4Iiwid2lkdGgiOjUzMzIsImhlaWdodCI6MzU1MiwiYWx0IjoiIiwicHVibGljSWQiOiJ1cGxvYWRzL3Byb2R1Y3Rpb24vbHB3YXQ2aTJtcHdwZ3prb21jNjgifSx7InNyYyI6Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3BpbnBvaW50aHEvaW1hZ2UvdXBsb2FkL2NfZml0LGZfYXV0byxoXzEwODAscV9hdXRvLHdfMTkyMC92MS91cGxvYWRzL3Byb2R1Y3Rpb24vZ3hqNG1pNGtsMG94ZXI3d2R3Z2kiLCJ3aWR0aCI6MTAwMCwiaGVpZ2h0IjoxMDAwLCJhbHQiOiIiLCJwdWJsaWNJZCI6InVwbG9hZHMvcHJvZHVjdGlvbi9neGo0bWk0a2wwb3hlcjd3ZHdnaSJ9LHsic3JjIjoiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vcGlucG9pbnRocS9pbWFnZS91cGxvYWQvY19maXQsZl9hdXRvLGhfMTA4MCxxX2F1dG8sd18xOTIwL3YxL3VwbG9hZHMvcHJvZHVjdGlvbi9vdGtlNXZsa21yZzZhNWdwMGh4bCIsIndpZHRoIjoxMDAwLCJoZWlnaHQiOjE1MDAsImFsdCI6IiIsInB1YmxpY0lkIjoidXBsb2Fkcy9wcm9kdWN0aW9uL290a2U1dmxrbXJnNmE1Z3AwaHhsIn0seyJzcmMiOiJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9jX2ZpdCxmX2F1dG8saF8xMDgwLHFfYXV0byx3XzE5MjAvdjEvdXBsb2Fkcy9wcm9kdWN0aW9uL2lxemdjd2N1MnpyMDM1OGNrZjM3Iiwid2lkdGgiOjc5NTIsImhlaWdodCI6NTMwNCwiYWx0IjoiIiwicHVibGljSWQiOiJ1cGxvYWRzL3Byb2R1Y3Rpb24vaXF6Z2N3Y3UyenIwMzU4Y2tmMzcifSx7InNyYyI6Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3BpbnBvaW50aHEvaW1hZ2UvdXBsb2FkL2NfZml0LGZfYXV0byxoXzEwODAscV9hdXRvLHdfMTkyMC92MS91cGxvYWRzL3Byb2R1Y3Rpb24vdG9peWVydWdkbmtnamkwZHNmeWgiLCJ3aWR0aCI6NTEyNSwiaGVpZ2h0IjozNDE3LCJhbHQiOiIiLCJwdWJsaWNJZCI6InVwbG9hZHMvcHJvZHVjdGlvbi90b2l5ZXJ1Z2Rua2dqaTBkc2Z5aCJ9LHsic3JjIjoiaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vcGlucG9pbnRocS9pbWFnZS91cGxvYWQvY19maXQsZl9hdXRvLGhfMTA4MCxxX2F1dG8sd18xOTIwL3YxL3VwbG9hZHMvcHJvZHVjdGlvbi96cncxbnJ1aXN0ZXZ6b2xsZnd1dSIsIndpZHRoIjo1NzYwLCJoZWlnaHQiOjM4NDAsImFsdCI6IiIsInB1YmxpY0lkIjoidXBsb2Fkcy9wcm9kdWN0aW9uL3pydzFucnVpc3RldnpvbGxmd3V1In1dLCJmZWF0dXJlRmxhZ3MiOnsiam9iX3RlbXBsYXRlcyI6ImVuYWJsZWQifSwiY29tcGFueVNldHRpbmdzIjp7ImVkaXRfb2ZmZXJfYmVmb3JlX3NlbmQiOnRydWUsImFkdmFuY2VkX3NlYXJjaCI6dHJ1ZSwiZmFjZWJvb2tfYWR2ZXJ0IjpmYWxzZSwiYnVsa19kb3dubG9hZCI6ZmFsc2UsIm1vdmVfdG9faGlyZWRfb25fb2ZmZXJfYWNjZXB0YW5jZSI6dHJ1ZSwiYnVsa19lbWFpbF9qb2Jfc2Vla2VycyI6ZmFsc2UsIndvcmtmbG93X2F1dG9tYXRpb24iOnRydWUsImNyb25vZnlfZW50ZXJwcmlzZV9jb25uZWN0Ijp0cnVlLCJqb2JfcmVxdWlzaXRpb25fbWFuYWdlbWVudCI6dHJ1ZSwiZXNzZW50aWFsX2Nvb2tpZXNfb25seSI6ZmFsc2UsInVzZV9jb21wYW55X2Zyb21fYWRkcmVzcyI6dHJ1ZSwic2VtaV9wcml2YXRlX2NvbW1lbnRzIjpmYWxzZSwiYWRkaXRpb25hbF9zdGF0dXNlcyI6dHJ1ZSwibXVsdGlwbGVfY29tcGFueV90aGVtZXMiOmZhbHNlLCJzdHJpY3Rfb2ZjY3BfY29tcGxpYW5jZSI6ZmFsc2UsImdyb3VwZWRfam9icyI6ZmFsc2UsIm1vdmVfdG9fYW55X2pvYiI6dHJ1ZSwicmVtb3ZlX2xvZ29fZnJvbV9lbWFpbF90ZW1wbGF0ZSI6ZmFsc2UsImNhbmRpZGF0ZV9qb2JfcHJlZmVyZW5jZXMiOmZhbHNlLCJhdXRvbWF0aWNhbGx5X3JlamVjdF9yZWZlcnJhbHMiOmZhbHNlLCJpbmRlZWRfZmVlZF9zdGFnZXMiOmZhbHNlLCJ2YXJpYWJsZV9zaWduX29mZl9zaWduYXRvcmllcyI6dHJ1ZSwicmVhY3Rfc2VsZWN0X29uX2V4dGVybmFsX2pvYnMiOmZhbHNlLCJtb25pdG9yX3dpdGhfcnVtIjpmYWxzZSwicmVzdHJpY3RlZF9jcm9ub2Z5X29hdXRoX3Njb3BlIjpmYWxzZSwiYXBwbGljYXRpb25fbmF0aW9uYWxfaWRlbnRpZmllcnMiOmZhbHNlLCJhbGxvd19pbmFjdGl2ZV9zdHJ1Y3R1cmVzIjpmYWxzZSwidmlzaWJsZV9vdGhlcl9hcHBsaWNhdGlvbnMiOmZhbHNlLCJhbGxvd19lZGl0aW5nX2pvYl9yZXF1aXNpdGlvbl9maWVsZHMiOnRydWUsInR3b19jb2x1bW5fc2lkZWJhciI6ZmFsc2UsIm11bHRpcGxlX2pvYl9wb3N0aW5ncyI6ZmFsc2UsIm1heF9hcHBsaWNhdGlvbnMiOmZhbHNlLCJncm91cF9pbnRlcnZpZXdzIjpmYWxzZSwiY3JlYXRlX3JlcXVpc2l0aW9uc19mb3JfZXhpc3Rpbmdfam9icyI6dHJ1ZSwidGVhbV9yZWplY3Rpb25fbm90aWZpY2F0aW9uIjpmYWxzZSwic2VuZF9wZGZfY29weV9vZl9hcHBsaWNhdGlvbiI6ZmFsc2UsImRpc2FibGVfaW5kZWVkX2ZlZWQiOmZhbHNlLCJ2b25xX3YyIjp0cnVlLCJyZWRpcmVjdF90b19jdXN0b21fc3ViZG9tYWluIjp0cnVlLCJhZGRfY2NfYW5kX2JjY190b19lbWFpbCI6dHJ1ZSwiYWxsb3dfY3JlYXRpbmdfY29tcGFueV90ZWFtcyI6ZmFsc2UsIm1hbnVhbGx5X3NlbmRfb2ZmZXJzIjpmYWxzZSwicHJpdmF0ZV9jYWxlbmRhcl9ldmVudHMiOnRydWUsImNhbmRpZGF0ZV9kZXRhaWxzX2luX29mZmVyX2hlYWRlciI6ZmFsc2UsInNob3dfZGF0ZV9pbl9vZmZlcl9oZWFkZXIiOnRydWUsInNob3dfam9iX3NlZWtlcnNfaW5fYWxsX2NhbmRpZGF0ZXMiOmZhbHNlLCJ0YWxlbnRfcGlwZWxpbmUiOnRydWUsImFub255bW91c19zY3JlZW5pbmciOnRydWUsImNhbmRpZGF0ZV9zdXJ2ZXlzIjp0cnVlLCJ0YXNrX21hbmFnZW1lbnQiOnRydWUsIm9mZmVyX21hbmFnZW1lbnQiOnRydWUsInJlZmVycmFsX21hbmFnZW1lbnQiOnRydWUsImFkdmFuY2VkX3JlcG9ydGluZyI6dHJ1ZSwiYWxsb3dfY292ZXJfbGV0dGVycyI6dHJ1ZSwibG9jYXRpb25fY2l0eV9zdGF0ZSI6ZmFsc2UsImRlaV9yZXBvcnRzIjp0cnVlLCJhY2Nlc3NpYmxlX2RhdGVfYW5kX3Bob25lIjpmYWxzZSwiZW5hYmxlX3JlZGFjdGlvbiI6dHJ1ZSwiaW50ZXJuc2hpcF9wcm9ncmFtbWUiOmZhbHNlLCJkb2N1bWVudF90ZW1wbGF0ZXNfb25fc3RhZ2UiOnRydWUsInN0YWdlX3Zpc2liaWxpdGllcyI6dHJ1ZSwib25ib2FyZGluZ192MiI6ZmFsc2UsImxpbWl0X29uYm9hcmRpbmdfdG9faGlyZWRfY2FuZGlkYXRlcyI6ZmFsc2UsInBlcnNvbmFsX2RldGFpbHNfYXV0b191cGRhdGUiOnRydWUsImdyb3VwX2Fzc2Vzc21lbnRzIjp0cnVlLCJlbmZvcmNlX2FsbF9vZmZlcl9maWVsZHNfcmVxdWlyZWQiOmZhbHNlLCJyZXN1bWVfcGFyc2luZyI6dHJ1ZSwiY3VzdG9tX2pvYl9wb3N0aW5nX2xvY2F0aW9ucyI6ZmFsc2UsIm9mZmVyX3NwbGl0dGluZyI6ZmFsc2UsImluZGVlZF9sb2NhbGVfdXJsIjpmYWxzZSwiZG93bmxvYWRfcGRmX2FwcGxpY2F0aW9uIjp0cnVlLCJ3b3JrZmxvd19hdXRvbWF0aW9uX3YyIjpmYWxzZSwiZGlzYWJsZV9jb29raWVfZGlhbG9nIjpmYWxzZSwibGlua2VkaW5fam9iX3Bvc3RpbmdzIjpmYWxzZSwidGFsZW50X3BpcGVsaW5lX3YyIjp0cnVlLCJyZXF1aXJlX2hlYWRjb3VudCI6ZmFsc2UsIm9uYm9hcmRpbmdfdjEiOnRydWUsInNraWxscyI6dHJ1ZSwiY2FyZWVyc19zaXRlX2J1aWxkZXJfdjIiOmZhbHNlLCJleHRyYV9tb25pdG9yaW5nX2Zvcl9hdXRvbWF0aW9ucyI6ZmFsc2UsInF1ZXN0aW9ubmFpcmVzIjpmYWxzZSwiY2FuZGlkYXRlX3BvbGljeV9wbHVja2luZyI6ZmFsc2UsInN0YWdlX2dyb3VwcyI6ZmFsc2UsImRvY3VzaWduX2xvZ2dpbmciOmZhbHNlLCJlbmFibGVfY3Jvbm9meV9ldmVudF9kZWxldGlvbl90cmFja2luZyI6ZmFsc2V9LCJlbmFibGVkTG9jYWxlS2V5cyI6WyJlbiJdLCJ1c2VyUm9sZXMiOm51bGwsIm9uYm9hcmRpbmdTZXR0aW5ncyI6eyJpc09uYm9hcmRpbmdFbmFibGVkIjp0cnVlfX08L3NjcmlwdD4KICAgICAgCgoKICAgIDwvZGl2PgoKICA8L2Rpdj4KCjwvc2VjdGlvbj4KCgogICAgPHNlY3Rpb24gY2xhc3M9InBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS10ZXh0IGNhcmVlcnMtYmxvY2sgY2FyZWVycy1ibG9jay0taGVhZGVyIGNhcmVlcnMtYmxvY2stLXRoZW1lLXNlY29uZGFyeSB0aGVtZS1zZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvci1pZS1vdmVycmlkZSI+CgogIDxkaXYgY2xhc3M9ImV4dGVybmFsLWNvbnRlbnQtd3JhcCI+CgogICAgPGRpdiBjbGFzcz0iY2FyZWVycy1ibG9ja19faW5uZXIiPgoKICAgICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1jZW50ZXJlZC1jb2x1bW4gIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEtMSBjb2wtc20tNi03IGNvbC1tZC00LTUgY29sLWxnLTMtNSI+CgogICAgICAgICAgICA8aDIgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2gyIHRleHQtY2VudGVyIj5CZW5lZml0czwvaDI+CgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWJsb2NrX190cml4IGV4dGVybmFsLXBhbmVsIHRleHQtY2VudGVyIj5XZSB3b3JrIGhhcmQsIGJ1dCB3ZSBhbHNvIGtub3cgeW91IGhhdmUgYSBmYW1pbHksIGZyaWVuZHMsIGhvYmJpZXMsIGFuZCBhIGxpZmUgb3V0c2lkZSB0aGUgb2ZmaWNlLiBUaGF04oCZcyB3aHkgd2Ugb2ZmZXIgYSBncmVhdCBiZW5lZml0cyBwYWNrYWdlLCBub3QganVzdCBhIGNvbXBldGl0aXZlIHNhbGFyeS48L2Rpdj4KCiAgICAgICAgPC9kaXY+CgogICAgICA8L2Rpdj4KCiAgICA8L2Rpdj4KCiAgPC9kaXY+Cgo8L3NlY3Rpb24+CgoKICAgIDxzZWN0aW9uIGNsYXNzPSJwaW5wb2ludC1ibG9jayBwaW5wb2ludC1ibG9jay0tY2FyZHMgY2FyZWVycy1ibG9jayBjYXJlZXJzLWNhcmRzLWJsb2NrIGNhcmVlcnMtYmxvY2stLXRoZW1lLXNlY29uZGFyeSB0aGVtZS1zZWNvbmRhcnktYmFja2dyb3VuZC1jb2xvci1pZS1vdmVycmlkZSI+CgogIDxkaXYgY2xhc3M9ImV4dGVybmFsLWNvbnRlbnQtd3JhcCI+CgogICAgPGRpdiBjbGFzcz0iY2FyZWVycy1ibG9ja19faW5uZXIiPgoKCiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1jYXJkcy1ibG9ja19fY2FyZHMiPgoKCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjYXJlZXJzLWNhcmRzLWJsb2NrX19jYXJkIGNvbC1tZC0xLTMgY2FyZWVycy1jYXJkLWJsb2NrIGNhcmVlcnMtY2FyZC1ibG9jay0tYWxpZ24tY2VudGVyIGNhcmVlcnMtY2FyZC1ibG9jay0tdmFyaWFudC1ub3JtYWwiPgogICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSIiPgoKCiAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWd1dHRlcnMtMnggZnJvdy0tZ3V0dGVycy1zbS00eCBmcm93LS1ndXR0ZXJzLW1kLTh4Ij4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC0xLTEgY29sLXNtLW9yZGVyLTIgY29sLW9yZGVyLTIiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2NvbnRlbnQiPgoKICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faWNvbiBjbGQtcmVzcG9uc2l2ZSIgYWx0PSIiIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3BpbnBvaW50aHEvaW1hZ2UvdXBsb2FkL2NfZml0LGRwcl9hdXRvLGZfYXV0byxoXzgwLHFfYXV0byx3X2F1dG8vdjEvY2FyZWVyc19zaXRlc190ZW1wbGF0ZXMvY29tcG9zZS9wcm9kdWN0aW9uL3B0ZnFvcXl4Zm50em9vZHg4Z3lwIiAvPjxub3NjcmlwdD48aW1nIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2ljb24iIGFsdD0iIiBzcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2luZnVzZS1ncm91cC9pbWFnZS91cGxvYWQvZl9hdXRvLHFfYXV0by92MS9jYXJlZXJzX3NpdGVzX3RlbXBsYXRlcy9jb21wb3NlL3Byb2R1Y3Rpb24vcHRmcW9xeXhmbnR6b29keDhneXAiIC8+PC9ub3NjcmlwdD4KICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19oMyI+NDEgZGF5cyBob2xpZGF5PC9oMz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19fcCAiPjxkaXY+VGhpcyBpbmNsdWRlcyBiYW5rIGhvbGlkYXlzIGFuZCBVbml2ZXJzaXR5IGNsb3N1cmUgZGF5cy4gRXZlcnlvbmUgbmVlZHMgYSBoZWFsdGh5LCBoYXBweSwgYW5kIHByb2R1Y3RpdmUgbGlmZS4gVGhpcyBtZWFucyB5b3UnbGwgbmVlZCB0aW1lIHRvIHJlc3QgYW5kIHJlY292ZXIuPC9kaXY+PC9kaXY+CiAgICAgICAgICAKCiAgICAgICAgPC9kaXY+CgogICAgICA8L2Rpdj4KCgogICAgPC9kaXY+CgoKPC9zZWN0aW9uPgo8L3NlY3Rpb24+CgogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iY2FyZWVycy1jYXJkcy1ibG9ja19fY2FyZCBjb2wtbWQtMS0zIGNhcmVlcnMtY2FyZC1ibG9jayBjYXJlZXJzLWNhcmQtYmxvY2stLWFsaWduLWNlbnRlciBjYXJlZXJzLWNhcmQtYmxvY2stLXZhcmlhbnQtbm9ybWFsIj4KICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iIj4KCgogICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1ndXR0ZXJzLTJ4IGZyb3ctLWd1dHRlcnMtc20tNHggZnJvdy0tZ3V0dGVycy1tZC04eCI+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtMS0xIGNvbC1zbS1vcmRlci0yIGNvbC1vcmRlci0yIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19jb250ZW50Ij4KCiAgICAgICAgICA8aW1nIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2ljb24gY2xkLXJlc3BvbnNpdmUiIGFsdD0iIiByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9jX2ZpdCxkcHJfYXV0byxmX2F1dG8saF84MCxxX2F1dG8sd19hdXRvL3YxL2NhcmVlcnNfc2l0ZXNfdGVtcGxhdGVzL2NvbXBvc2UvcHJvZHVjdGlvbi9hMjlncWk5anhibWxtemdiNTVuZCIgLz48bm9zY3JpcHQ+PGltZyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19pY29uIiBhbHQ9IiIgc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9pbmZ1c2UtZ3JvdXAvaW1hZ2UvdXBsb2FkL2ZfYXV0byxxX2F1dG8vdjEvY2FyZWVyc19zaXRlc190ZW1wbGF0ZXMvY29tcG9zZS9wcm9kdWN0aW9uL2EyOWdxaTlqeGJtbG16Z2I1NW5kIiAvPjwvbm9zY3JpcHQ+CiAgICAgICAgICA8aDMgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faDMiPkdlbmVyb3VzIHBlbnNpb24gcGxhbnM8L2gzPgogICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19wICI+PGRpdj5XZSd2ZSBnb3QgeW91IGNvdmVyZWQgZm9yIHRoZSBmdXR1cmUuIFdvcmsgaW4gdGhlIGNvbWZvcnQgb2Yga25vd2luZyB0aGF0IGFsbCB5b3VyIGhhcmQgd29yayBpcyBub3Qgb25seSBwYXlpbmcgb2ZmIG5vdyBidXQgYWxzbyBzZXR0aW5nIHlvdSB1cCBmb3IgdGhlIGZ1dHVyZS48L2Rpdj48L2Rpdj4KICAgICAgICAgIAoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKCiAgICA8L2Rpdj4KCgo8L3NlY3Rpb24+Cjwvc2VjdGlvbj4KCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjYXJlZXJzLWNhcmRzLWJsb2NrX19jYXJkIGNvbC1tZC0xLTMgY2FyZWVycy1jYXJkLWJsb2NrIGNhcmVlcnMtY2FyZC1ibG9jay0tYWxpZ24tY2VudGVyIGNhcmVlcnMtY2FyZC1ibG9jay0tdmFyaWFudC1ub3JtYWwiPgogICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSIiPgoKCiAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWd1dHRlcnMtMnggZnJvdy0tZ3V0dGVycy1zbS00eCBmcm93LS1ndXR0ZXJzLW1kLTh4Ij4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC0xLTEgY29sLXNtLW9yZGVyLTIgY29sLW9yZGVyLTIiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2NvbnRlbnQiPgoKICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faWNvbiBjbGQtcmVzcG9uc2l2ZSIgYWx0PSIiIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3BpbnBvaW50aHEvaW1hZ2UvdXBsb2FkL2NfZml0LGRwcl9hdXRvLGZfYXV0byxoXzgwLHFfYXV0byx3X2F1dG8vdjEvY2FyZWVyc19zaXRlc190ZW1wbGF0ZXMvY29tcG9zZS9wcm9kdWN0aW9uL3h0dGVhZmdyOHpibm04cHN4a2lrIiAvPjxub3NjcmlwdD48aW1nIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2ljb24iIGFsdD0iIiBzcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2luZnVzZS1ncm91cC9pbWFnZS91cGxvYWQvZl9hdXRvLHFfYXV0by92MS9jYXJlZXJzX3NpdGVzX3RlbXBsYXRlcy9jb21wb3NlL3Byb2R1Y3Rpb24veHR0ZWFmZ3I4emJubThwc3hraWsiIC8+PC9ub3NjcmlwdD4KICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19oMyI+RmxleGlibGUgd29ya2luZzwvaDM+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX3AgIj48ZGl2PldlIGtub3cgbGlmZSBpcyBidXN5IHNvLCB3aGVyZSB3ZSBjYW4sIHdlIHN1cHBvcnQgZmxleGlibGUgd29ya2luZyB0byBlbnN1cmUgb3VyIHRlYW1zIGFyZSBoYXBweSwgcHJvZHVjdGl2ZSBhbmQgbGlzdGVuZWQgdG8uPC9kaXY+PC9kaXY+CiAgICAgICAgICAKCiAgICAgICAgPC9kaXY+CgogICAgICA8L2Rpdj4KCgogICAgPC9kaXY+CgoKPC9zZWN0aW9uPgo8L3NlY3Rpb24+CgogICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iY2FyZWVycy1jYXJkcy1ibG9ja19fY2FyZCBjb2wtbWQtMS0zIGNhcmVlcnMtY2FyZC1ibG9jayBjYXJlZXJzLWNhcmQtYmxvY2stLWFsaWduLWNlbnRlciBjYXJlZXJzLWNhcmQtYmxvY2stLXZhcmlhbnQtbm9ybWFsIj4KICAgICAgICAgICAgICA8c2VjdGlvbiBjbGFzcz0iIj4KCgogICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1ndXR0ZXJzLTJ4IGZyb3ctLWd1dHRlcnMtc20tNHggZnJvdy0tZ3V0dGVycy1tZC04eCI+CgogICAgICA8ZGl2IGNsYXNzPSJjb2wtMS0xIGNvbC1zbS1vcmRlci0yIGNvbC1vcmRlci0yIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19jb250ZW50Ij4KCiAgICAgICAgICA8aW1nIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2ljb24gY2xkLXJlc3BvbnNpdmUiIGFsdD0iIiByb2xlPSJwcmVzZW50YXRpb24iIGRhdGEtc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9waW5wb2ludGhxL2ltYWdlL3VwbG9hZC9jX2ZpdCxkcHJfYXV0byxmX2F1dG8saF84MCxxX2F1dG8sd19hdXRvL3YxL2NhcmVlcnNfc2l0ZXNfdGVtcGxhdGVzL2NvbXBvc2UvcHJvZHVjdGlvbi96bmYxcmNoN3lhOTlkZWQ5dnNnOCIgLz48bm9zY3JpcHQ+PGltZyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19pY29uIiBhbHQ9IiIgc3JjPSJodHRwczovL3Jlcy5jbG91ZGluYXJ5LmNvbS9pbmZ1c2UtZ3JvdXAvaW1hZ2UvdXBsb2FkL2ZfYXV0byxxX2F1dG8vdjEvY2FyZWVyc19zaXRlc190ZW1wbGF0ZXMvY29tcG9zZS9wcm9kdWN0aW9uL3puZjFyY2g3eWE5OWRlZDl2c2c4IiAvPjwvbm9zY3JpcHQ+CiAgICAgICAgICA8aDMgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faDMiPk9uc2l0ZSBudXJzZXJ5IDwvaDM+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX3AgIj48ZGl2PlJlZHVjZSB0aGUgbW9ybmluZyBzdHJlc3MgYnkgZHJvcHBpbmcgdGhlIGtpZHMgb2ZmIGF0IHRoZSBvbnNpdGUgbnVyc2VyeS4gV2UndmUgZ290IHlvdSBhbmQgeW91ciBmYW1pbHkgY292ZXJlZC48L2Rpdj48L2Rpdj4KICAgICAgICAgIAoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKCiAgICA8L2Rpdj4KCgo8L3NlY3Rpb24+Cjwvc2VjdGlvbj4KCiAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSJjYXJlZXJzLWNhcmRzLWJsb2NrX19jYXJkIGNvbC1tZC0xLTMgY2FyZWVycy1jYXJkLWJsb2NrIGNhcmVlcnMtY2FyZC1ibG9jay0tYWxpZ24tY2VudGVyIGNhcmVlcnMtY2FyZC1ibG9jay0tdmFyaWFudC1ub3JtYWwiPgogICAgICAgICAgICAgIDxzZWN0aW9uIGNsYXNzPSIiPgoKCiAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWd1dHRlcnMtMnggZnJvdy0tZ3V0dGVycy1zbS00eCBmcm93LS1ndXR0ZXJzLW1kLTh4Ij4KCiAgICAgIDxkaXYgY2xhc3M9ImNvbC0xLTEgY29sLXNtLW9yZGVyLTIgY29sLW9yZGVyLTIiPgoKICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2NvbnRlbnQiPgoKICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faWNvbiBjbGQtcmVzcG9uc2l2ZSIgYWx0PSIiIHJvbGU9InByZXNlbnRhdGlvbiIgZGF0YS1zcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3BpbnBvaW50aHEvaW1hZ2UvdXBsb2FkL2NfZml0LGRwcl9hdXRvLGZfYXV0byxoXzgwLHFfYXV0byx3X2F1dG8vdjEvY2FyZWVyc19zaXRlc190ZW1wbGF0ZXMvY29tcG9zZS9wcm9kdWN0aW9uL2RpdWppZ2NhcHBtYmFwcW9lNXdvIiAvPjxub3NjcmlwdD48aW1nIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2ljb24iIGFsdD0iIiBzcmM9Imh0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL2luZnVzZS1ncm91cC9pbWFnZS91cGxvYWQvZl9hdXRvLHFfYXV0by92MS9jYXJlZXJzX3NpdGVzX3RlbXBsYXRlcy9jb21wb3NlL3Byb2R1Y3Rpb24vZGl1amlnY2FwcG1iYXBxb2U1d28iIC8+PC9ub3NjcmlwdD4KICAgICAgICAgIDxoMyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19oMyI+RW1wbG95ZWUgYXNzaXN0YW5jZSBwcm9ncmFtbWUgPC9oMz4KICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19fcCAiPjxkaXY+V2UndmUgdGVhbWVkIHVwIHdpdGggVGVsdXMgSGVhbHRoIHRvIHByb3ZpZGUgeW91IHdpdGggZXh0cmEgc3VwcG9ydCB3aGVuIG5lZWRlZC4gV2hldGhlciBpdCBpcyBoZWFsdGgsIGZhbWlseSwgbW9uZXksIHdvcmsgb3IgeW91cnNlbGYsIFRlbHVzIEhlYWx0aCBpcyBvbmx5IGEgcGhvbmUgY2FsbCBhd2F5LjwvZGl2PjwvZGl2PgogICAgICAgICAgCgogICAgICAgIDwvZGl2PgoKICAgICAgPC9kaXY+CgoKICAgIDwvZGl2PgoKCjwvc2VjdGlvbj4KPC9zZWN0aW9uPgoKICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9ImNhcmVlcnMtY2FyZHMtYmxvY2tfX2NhcmQgY29sLW1kLTEtMyBjYXJlZXJzLWNhcmQtYmxvY2sgY2FyZWVycy1jYXJkLWJsb2NrLS1hbGlnbi1jZW50ZXIgY2FyZWVycy1jYXJkLWJsb2NrLS12YXJpYW50LW5vcm1hbCI+CiAgICAgICAgICAgICAgPHNlY3Rpb24gY2xhc3M9IiI+CgoKICAgIDxkaXYgY2xhc3M9ImZyb3cgZnJvdy0tZ3V0dGVycy0yeCBmcm93LS1ndXR0ZXJzLXNtLTR4IGZyb3ctLWd1dHRlcnMtbWQtOHgiPgoKICAgICAgPGRpdiBjbGFzcz0iY29sLTEtMSBjb2wtc20tb3JkZXItMiBjb2wtb3JkZXItMiI+CgogICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19fY29udGVudCI+CgogICAgICAgICAgPGltZyBjbGFzcz0iY2FyZWVycy1jYXJkLWJsb2NrX19pY29uIGNsZC1yZXNwb25zaXZlIiBhbHQ9IiIgcm9sZT0icHJlc2VudGF0aW9uIiBkYXRhLXNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vcGlucG9pbnRocS9pbWFnZS91cGxvYWQvY19maXQsZHByX2F1dG8sZl9hdXRvLGhfODAscV9hdXRvLHdfYXV0by92MS9jYXJlZXJzX3NpdGVzX3RlbXBsYXRlcy9jb21wb3NlL3Byb2R1Y3Rpb24vdDMxZmhlOGRsdGF3cTN2ZW1ncGsiIC8+PG5vc2NyaXB0PjxpbWcgY2xhc3M9ImNhcmVlcnMtY2FyZC1ibG9ja19faWNvbiIgYWx0PSIiIHNyYz0iaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vaW5mdXNlLWdyb3VwL2ltYWdlL3VwbG9hZC9mX2F1dG8scV9hdXRvL3YxL2NhcmVlcnNfc2l0ZXNfdGVtcGxhdGVzL2NvbXBvc2UvcHJvZHVjdGlvbi90MzFmaGU4ZGx0YXdxM3ZlbWdwayIgLz48L25vc2NyaXB0PgogICAgICAgICAgPGgzIGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX2gzIj5BIHRlYW0gdGhhdCBjYXJlczwvaDM+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWNhcmQtYmxvY2tfX3AgIj48ZGl2PllvdeKAmWxsIGJlIGpvaW5pbmcgYSB0ZWFtIG9mIHNtYXJ0LCBjYXBhYmxlLCBoZWxwZnVsIHBlb3BsZSB0aGF0IHdhbnQgeW91IHRvIHdpbiwgb3VyIHN0dWRlbnRzIHRvIHdpbiBhbmQgb3VyIFVuaXZlcnNpdHkgYW5kIGNvbW11bml0eSB0byBncm93LiBOb3QgdG8gbWVudGlvbiBvdXIgdGVhbSBvZiBjYXJlIGRvZ3Mgd2hvIGFyZSBvbiBoYW5kIHRvIHB1dCBhIHNtaWxlIG9uIHlvdXIgZmFjZSBpZiBuZWVkZWQuPC9kaXY+PC9kaXY+CiAgICAgICAgICAKCiAgICAgICAgPC9kaXY+CgogICAgICA8L2Rpdj4KCgogICAgPC9kaXY+CgoKPC9zZWN0aW9uPgo8L3NlY3Rpb24+CgogICAgICAgIDwvZGl2PgoKCiAgICA8L2Rpdj4KCiAgPC9kaXY+Cgo8L3NlY3Rpb24+CgoKICAgIDxzZWN0aW9uIGNsYXNzPSJwaW5wb2ludC1ibG9jayBwaW5wb2ludC1ibG9jay0tdGV4dCBjYXJlZXJzLWJsb2NrIGNhcmVlcnMtYmxvY2stLWhlYWRlciI+CgogIDxkaXYgY2xhc3M9ImV4dGVybmFsLWNvbnRlbnQtd3JhcCI+CgogICAgPGRpdiBjbGFzcz0iY2FyZWVycy1ibG9ja19faW5uZXIiPgoKICAgICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1jb2x1bW4tc3RhcnQgIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iY29sLTEtMSBjb2wtc20tNi03IGNvbC1tZC00LTUgY29sLWxnLTMtNSI+CgogICAgICAgICAgICA8aDIgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2gyIHRleHQtbGVmdCI+V2UgYXNrZWQgb3VyIHRlYW1zLi4uPC9oMj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX3RyaXggZXh0ZXJuYWwtcGFuZWwgdGV4dC1sZWZ0Ij48ZGl2PiJCZXlvbmQgcGF5IGFuZCBiZW5lZml0cywgd2hhdCB0aGluZ3MgbWFrZSBCYXRoIFNwYSBhIGdyZWF0IHBsYWNlIHRvIHdvcms/IjwvZGl2PjwvZGl2PgoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgoKICA8L2Rpdj4KCjwvc2VjdGlvbj4KCgogICAgPHNlY3Rpb24gY2xhc3M9InBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS1jYXJvdXNlbCBjYXJlZXJzLWJsb2NrIGNhcmVlcnMtY2Fyb3VzZWwtYmxvY2siPgoKICA8ZGl2IGNsYXNzPSJleHRlcm5hbC1jb250ZW50LXdyYXAiPgoKICAgIDxkaXYgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2lubmVyIj4KCgogICAgICA8ZGl2IGlkPSJFeHRlcm5hbDo6Q2FyZWVyc3BhZ2U6OkNhcm91c2VsLXJlYWN0LWNvbXBvbmVudC1hNWRmNzE2NC02YWU4LTRjZGUtYWVhZi1jOGE5MzEwNjhjMGQiPjwvZGl2PgogICAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iIGNsYXNzPSJqcy1yZWFjdC1vbi1yYWlscy1jb21wb25lbnQiIGRhdGEtY29tcG9uZW50LW5hbWU9IkV4dGVybmFsOjpDYXJlZXJzcGFnZTo6Q2Fyb3VzZWwiIGRhdGEtZG9tLWlkPSJFeHRlcm5hbDo6Q2FyZWVyc3BhZ2U6OkNhcm91c2VsLXJlYWN0LWNvbXBvbmVudC1hNWRmNzE2NC02YWU4LTRjZGUtYWVhZi1jOGE5MzEwNjhjMGQiPnsicmVuZGVyZWRCbG9ja3MiOlsiXHUwMDNjc2VjdGlvbiBjbGFzcz1cInBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS10ZXN0aW1vbmlhbCBjYXJlZXJzLWJsb2NrXCJcdTAwM2VcblxuICBcdTAwM2NkaXYgY2xhc3M9XCJleHRlcm5hbC1jb250ZW50LXdyYXBcIlx1MDAzZVxuXG4gICAgXHUwMDNjZGl2IGNsYXNzPVwiY2FyZWVycy1ibG9ja19faW5uZXJcIlx1MDAzZVxuXG4gICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrXCJcdTAwM2VcblxuICAgICAgICBcblxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrX19jb250ZW50XCJcdTAwM2VcblxuXG4gICAgICAgICAgICBcdTAwM2NibG9ja3F1b3RlIGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja19fcXVvdGF0aW9uXCJcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDI2bGRxdW87VGhlIHNlbnNlIG9mIGNvbW11bml0eSwgbXkgY29sbGVhZ3VlcywgdGhlIHN0dWRlbnRzLCB0aGUgY2FtcHVzLCB0aGUgZ2VuZXJhbCBhdG1vc3BoZXJlIG9mIHBvc2l0aXZpdHkgYW5kIGFwcHJlY2lhdGlvbi5cdTAwMjZyZHF1bztcbiAgICAgICAgICAgIFx1MDAzYy9ibG9ja3F1b3RlXHUwMDNlXG5cblxuICAgICAgICAgIFx1MDAzY2NpdGUgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrX19hdHRyaWJ1dGlvbiB0aGVtZS1oaWdobGlnaHQtY29sb3ItaWUtb3ZlcnJpZGVcIlx1MDAzZVxuICAgICAgICAgICAgU2FyYWggXG4gICAgICAgICAgXHUwMDNjL2NpdGVcdTAwM2VcblxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICBcdTAwM2MvZGl2XHUwMDNlXG5cblx1MDAzYy9zZWN0aW9uXHUwMDNlIiwiXHUwMDNjc2VjdGlvbiBjbGFzcz1cInBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS10ZXN0aW1vbmlhbCBjYXJlZXJzLWJsb2NrXCJcdTAwM2VcblxuICBcdTAwM2NkaXYgY2xhc3M9XCJleHRlcm5hbC1jb250ZW50LXdyYXBcIlx1MDAzZVxuXG4gICAgXHUwMDNjZGl2IGNsYXNzPVwiY2FyZWVycy1ibG9ja19faW5uZXJcIlx1MDAzZVxuXG4gICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrXCJcdTAwM2VcblxuICAgICAgICBcblxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrX19jb250ZW50XCJcdTAwM2VcblxuXG4gICAgICAgICAgICBcdTAwM2NibG9ja3F1b3RlIGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja19fcXVvdGF0aW9uXCJcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDI2bGRxdW87QSBjdWx0dXJlIHRoYXQgc3VwcG9ydCBlcXVhbCBhY2Nlc3MgZm9yIHN0YWZmIGFuZCBzdHVkZW50cy5cdTAwMjZyZHF1bztcbiAgICAgICAgICAgIFx1MDAzYy9ibG9ja3F1b3RlXHUwMDNlXG5cblxuICAgICAgICAgIFx1MDAzY2NpdGUgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrX19hdHRyaWJ1dGlvbiB0aGVtZS1oaWdobGlnaHQtY29sb3ItaWUtb3ZlcnJpZGVcIlx1MDAzZVxuICAgICAgICAgICAgTWVnXG4gICAgICAgICAgXHUwMDNjL2NpdGVcdTAwM2VcblxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICBcdTAwM2MvZGl2XHUwMDNlXG5cblx1MDAzYy9zZWN0aW9uXHUwMDNlIiwiXHUwMDNjc2VjdGlvbiBjbGFzcz1cInBpbnBvaW50LWJsb2NrIHBpbnBvaW50LWJsb2NrLS10ZXN0aW1vbmlhbCBjYXJlZXJzLWJsb2NrXCJcdTAwM2VcblxuICBcdTAwM2NkaXYgY2xhc3M9XCJleHRlcm5hbC1jb250ZW50LXdyYXBcIlx1MDAzZVxuXG4gICAgXHUwMDNjZGl2IGNsYXNzPVwiY2FyZWVycy1ibG9ja19faW5uZXJcIlx1MDAzZVxuXG4gICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrXCJcdTAwM2VcblxuICAgICAgICBcblxuICAgICAgICBcdTAwM2NkaXYgY2xhc3M9XCJjYXJlZXJzLXRlc3RpbW9uaWFsLWJsb2NrX19jb250ZW50XCJcdTAwM2VcblxuXG4gICAgICAgICAgICBcdTAwM2NibG9ja3F1b3RlIGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja19fcXVvdGF0aW9uXCJcdTAwM2VcbiAgICAgICAgICAgICAgXHUwMDI2bGRxdW87QmVhdXRpZnVsIGNhbXB1cyB3aXRoIHRoZSBvcHBvcnR1bml0eSB0byBsZWFybiBuZXcgdGhpbmdzIGZyb20gdGhvc2UgYXJvdW5kIHVzLiBBbHNvLFxuYSBnb29kIHRlYW0gd29ya2luZyBhdG1vc3BoZXJlIHdoZXJlIHRlYW0gbWVtYmVycyBhcmUgd2lsbGluZyB0byBoZWxwIGFuZCBzdXBwb3J0IGVhY2ggb3RoZXIuIEN1bHRpdmF0aW5nIGEgZnVuLCBoYXBweSBhbmQgaGFyZC13b3JraW5nIGN1bHR1cmUgd2hlcmUgZXZlcnlvbmUgZmVlbHMgdmFsdWVkLlx1MDAyNnJkcXVvO1xuICAgICAgICAgICAgXHUwMDNjL2Jsb2NrcXVvdGVcdTAwM2VcblxuXG4gICAgICAgICAgXHUwMDNjY2l0ZSBjbGFzcz1cImNhcmVlcnMtdGVzdGltb25pYWwtYmxvY2tfX2F0dHJpYnV0aW9uIHRoZW1lLWhpZ2hsaWdodC1jb2xvci1pZS1vdmVycmlkZVwiXHUwMDNlXG4gICAgICAgICAgICBTaW1vblxuICAgICAgICAgIFx1MDAzYy9jaXRlXHUwMDNlXG5cbiAgICAgICAgXHUwMDNjL2Rpdlx1MDAzZVxuXG4gICAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgXHUwMDNjL2Rpdlx1MDAzZVxuXG5cdTAwM2Mvc2VjdGlvblx1MDAzZSIsIlx1MDAzY3NlY3Rpb24gY2xhc3M9XCJwaW5wb2ludC1ibG9jayBwaW5wb2ludC1ibG9jay0tdGVzdGltb25pYWwgY2FyZWVycy1ibG9ja1wiXHUwMDNlXG5cbiAgXHUwMDNjZGl2IGNsYXNzPVwiZXh0ZXJuYWwtY29udGVudC13cmFwXCJcdTAwM2VcblxuICAgIFx1MDAzY2RpdiBjbGFzcz1cImNhcmVlcnMtYmxvY2tfX2lubmVyXCJcdTAwM2VcblxuICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja1wiXHUwMDNlXG5cbiAgICAgICAgXG5cbiAgICAgICAgXHUwMDNjZGl2IGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja19fY29udGVudFwiXHUwMDNlXG5cblxuICAgICAgICAgICAgXHUwMDNjYmxvY2txdW90ZSBjbGFzcz1cImNhcmVlcnMtdGVzdGltb25pYWwtYmxvY2tfX3F1b3RhdGlvblwiXHUwMDNlXG4gICAgICAgICAgICAgIFx1MDAyNmxkcXVvO1RoZSBwZW9wbGUgYXJlIHdvbmRlcmZ1bCAtIHRoZWlyIHZhbHVlcyBhcmUgb25lcyBJIGFncmVlIHdpdGggYW5kIHRyeSB0byBsaXZlIGJ5LlxuXHUwMDI2cmRxdW87XG4gICAgICAgICAgICBcdTAwM2MvYmxvY2txdW90ZVx1MDAzZVxuXG5cbiAgICAgICAgICBcdTAwM2NjaXRlIGNsYXNzPVwiY2FyZWVycy10ZXN0aW1vbmlhbC1ibG9ja19fYXR0cmlidXRpb24gdGhlbWUtaGlnaGxpZ2h0LWNvbG9yLWllLW92ZXJyaWRlXCJcdTAwM2VcbiAgICAgICAgICAgIFN1bWFuXG4gICAgICAgICAgXHUwMDNjL2NpdGVcdTAwM2VcblxuICAgICAgICBcdTAwM2MvZGl2XHUwMDNlXG5cbiAgICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICAgIFx1MDAzYy9kaXZcdTAwM2VcblxuICBcdTAwM2MvZGl2XHUwMDNlXG5cblx1MDAzYy9zZWN0aW9uXHUwMDNlIl0sImF1dG9wbGF5IjpmYWxzZSwiYXV0b3BsYXlTcGVlZE1zIjoxMDAwMCwic2hvd0RvdHMiOnRydWUsImluZmluaXRlIjp0cnVlLCJzY3JvbGxBbW91bnQiOjEsInNob3dBbW91bnQiOjEsInNjcm9sbFNwZWVkTXMiOjUwMCwiZmVhdHVyZUZsYWdzIjp7ImpvYl90ZW1wbGF0ZXMiOiJlbmFibGVkIn0sImNvbXBhbnlTZXR0aW5ncyI6eyJlZGl0X29mZmVyX2JlZm9yZV9zZW5kIjp0cnVlLCJhZHZhbmNlZF9zZWFyY2giOnRydWUsImZhY2Vib29rX2FkdmVydCI6ZmFsc2UsImJ1bGtfZG93bmxvYWQiOmZhbHNlLCJtb3ZlX3RvX2hpcmVkX29uX29mZmVyX2FjY2VwdGFuY2UiOnRydWUsImJ1bGtfZW1haWxfam9iX3NlZWtlcnMiOmZhbHNlLCJ3b3JrZmxvd19hdXRvbWF0aW9uIjp0cnVlLCJjcm9ub2Z5X2VudGVycHJpc2VfY29ubmVjdCI6dHJ1ZSwiam9iX3JlcXVpc2l0aW9uX21hbmFnZW1lbnQiOnRydWUsImVzc2VudGlhbF9jb29raWVzX29ubHkiOmZhbHNlLCJ1c2VfY29tcGFueV9mcm9tX2FkZHJlc3MiOnRydWUsInNlbWlfcHJpdmF0ZV9jb21tZW50cyI6ZmFsc2UsImFkZGl0aW9uYWxfc3RhdHVzZXMiOnRydWUsIm11bHRpcGxlX2NvbXBhbnlfdGhlbWVzIjpmYWxzZSwic3RyaWN0X29mY2NwX2NvbXBsaWFuY2UiOmZhbHNlLCJncm91cGVkX2pvYnMiOmZhbHNlLCJtb3ZlX3RvX2FueV9qb2IiOnRydWUsInJlbW92ZV9sb2dvX2Zyb21fZW1haWxfdGVtcGxhdGUiOmZhbHNlLCJjYW5kaWRhdGVfam9iX3ByZWZlcmVuY2VzIjpmYWxzZSwiYXV0b21hdGljYWxseV9yZWplY3RfcmVmZXJyYWxzIjpmYWxzZSwiaW5kZWVkX2ZlZWRfc3RhZ2VzIjpmYWxzZSwidmFyaWFibGVfc2lnbl9vZmZfc2lnbmF0b3JpZXMiOnRydWUsInJlYWN0X3NlbGVjdF9vbl9leHRlcm5hbF9qb2JzIjpmYWxzZSwibW9uaXRvcl93aXRoX3J1bSI6ZmFsc2UsInJlc3RyaWN0ZWRfY3Jvbm9meV9vYXV0aF9zY29wZSI6ZmFsc2UsImFwcGxpY2F0aW9uX25hdGlvbmFsX2lkZW50aWZpZXJzIjpmYWxzZSwiYWxsb3dfaW5hY3RpdmVfc3RydWN0dXJlcyI6ZmFsc2UsInZpc2libGVfb3RoZXJfYXBwbGljYXRpb25zIjpmYWxzZSwiYWxsb3dfZWRpdGluZ19qb2JfcmVxdWlzaXRpb25fZmllbGRzIjp0cnVlLCJ0d29fY29sdW1uX3NpZGViYXIiOmZhbHNlLCJtdWx0aXBsZV9qb2JfcG9zdGluZ3MiOmZhbHNlLCJtYXhfYXBwbGljYXRpb25zIjpmYWxzZSwiZ3JvdXBfaW50ZXJ2aWV3cyI6ZmFsc2UsImNyZWF0ZV9yZXF1aXNpdGlvbnNfZm9yX2V4aXN0aW5nX2pvYnMiOnRydWUsInRlYW1fcmVqZWN0aW9uX25vdGlmaWNhdGlvbiI6ZmFsc2UsInNlbmRfcGRmX2NvcHlfb2ZfYXBwbGljYXRpb24iOmZhbHNlLCJkaXNhYmxlX2luZGVlZF9mZWVkIjpmYWxzZSwidm9ucV92MiI6dHJ1ZSwicmVkaXJlY3RfdG9fY3VzdG9tX3N1YmRvbWFpbiI6dHJ1ZSwiYWRkX2NjX2FuZF9iY2NfdG9fZW1haWwiOnRydWUsImFsbG93X2NyZWF0aW5nX2NvbXBhbnlfdGVhbXMiOmZhbHNlLCJtYW51YWxseV9zZW5kX29mZmVycyI6ZmFsc2UsInByaXZhdGVfY2FsZW5kYXJfZXZlbnRzIjp0cnVlLCJjYW5kaWRhdGVfZGV0YWlsc19pbl9vZmZlcl9oZWFkZXIiOmZhbHNlLCJzaG93X2RhdGVfaW5fb2ZmZXJfaGVhZGVyIjp0cnVlLCJzaG93X2pvYl9zZWVrZXJzX2luX2FsbF9jYW5kaWRhdGVzIjpmYWxzZSwidGFsZW50X3BpcGVsaW5lIjp0cnVlLCJhbm9ueW1vdXNfc2NyZWVuaW5nIjp0cnVlLCJjYW5kaWRhdGVfc3VydmV5cyI6dHJ1ZSwidGFza19tYW5hZ2VtZW50Ijp0cnVlLCJvZmZlcl9tYW5hZ2VtZW50Ijp0cnVlLCJyZWZlcnJhbF9tYW5hZ2VtZW50Ijp0cnVlLCJhZHZhbmNlZF9yZXBvcnRpbmciOnRydWUsImFsbG93X2NvdmVyX2xldHRlcnMiOnRydWUsImxvY2F0aW9uX2NpdHlfc3RhdGUiOmZhbHNlLCJkZWlfcmVwb3J0cyI6dHJ1ZSwiYWNjZXNzaWJsZV9kYXRlX2FuZF9waG9uZSI6ZmFsc2UsImVuYWJsZV9yZWRhY3Rpb24iOnRydWUsImludGVybnNoaXBfcHJvZ3JhbW1lIjpmYWxzZSwiZG9jdW1lbnRfdGVtcGxhdGVzX29uX3N0YWdlIjp0cnVlLCJzdGFnZV92aXNpYmlsaXRpZXMiOnRydWUsIm9uYm9hcmRpbmdfdjIiOmZhbHNlLCJsaW1pdF9vbmJvYXJkaW5nX3RvX2hpcmVkX2NhbmRpZGF0ZXMiOmZhbHNlLCJwZXJzb25hbF9kZXRhaWxzX2F1dG9fdXBkYXRlIjp0cnVlLCJncm91cF9hc3Nlc3NtZW50cyI6dHJ1ZSwiZW5mb3JjZV9hbGxfb2ZmZXJfZmllbGRzX3JlcXVpcmVkIjpmYWxzZSwicmVzdW1lX3BhcnNpbmciOnRydWUsImN1c3RvbV9qb2JfcG9zdGluZ19sb2NhdGlvbnMiOmZhbHNlLCJvZmZlcl9zcGxpdHRpbmciOmZhbHNlLCJpbmRlZWRfbG9jYWxlX3VybCI6ZmFsc2UsImRvd25sb2FkX3BkZl9hcHBsaWNhdGlvbiI6dHJ1ZSwid29ya2Zsb3dfYXV0b21hdGlvbl92MiI6ZmFsc2UsImRpc2FibGVfY29va2llX2RpYWxvZyI6ZmFsc2UsImxpbmtlZGluX2pvYl9wb3N0aW5ncyI6ZmFsc2UsInRhbGVudF9waXBlbGluZV92MiI6dHJ1ZSwicmVxdWlyZV9oZWFkY291bnQiOmZhbHNlLCJvbmJvYXJkaW5nX3YxIjp0cnVlLCJza2lsbHMiOnRydWUsImNhcmVlcnNfc2l0ZV9idWlsZGVyX3YyIjpmYWxzZSwiZXh0cmFfbW9uaXRvcmluZ19mb3JfYXV0b21hdGlvbnMiOmZhbHNlLCJxdWVzdGlvbm5haXJlcyI6ZmFsc2UsImNhbmRpZGF0ZV9wb2xpY3lfcGx1Y2tpbmciOmZhbHNlLCJzdGFnZV9ncm91cHMiOmZhbHNlLCJkb2N1c2lnbl9sb2dnaW5nIjpmYWxzZSwiZW5hYmxlX2Nyb25vZnlfZXZlbnRfZGVsZXRpb25fdHJhY2tpbmciOmZhbHNlfSwiZW5hYmxlZExvY2FsZUtleXMiOlsiZW4iXSwidXNlclJvbGVzIjpudWxsLCJvbmJvYXJkaW5nU2V0dGluZ3MiOnsiaXNPbmJvYXJkaW5nRW5hYmxlZCI6dHJ1ZX19PC9zY3JpcHQ+CiAgICAgIAoKCiAgICA8L2Rpdj4KCjwvZGl2Pgo8L3NlY3Rpb24+CgoKICAgIDxzZWN0aW9uIGNsYXNzPSJwaW5wb2ludC1ibG9jayBwaW5wb2ludC1ibG9jay0tam9icyBjYXJlZXJzLWJsb2NrIiBpZD0ianMtY2FyZWVycy1qb2JzLWJsb2NrIj4KCiAgPGRpdiBjbGFzcz0iZXh0ZXJuYWwtY29udGVudC13cmFwIj4KCiAgICA8ZGl2IGNsYXNzPSJjYXJlZXJzLWJsb2NrX19pbm5lciI+CgogICAgICA8aDIgY2xhc3M9ImNhcmVlcnMtYmxvY2tfX2gyIHRleHQtY2VudGVyIj5DdXJyZW50IE9wcG9ydHVuaXRpZXM8L2gyPgoKICAgICAgPGRpdiBjbGFzcz0iY2FyZWVycy1ibG9ja19fY29udGVudCBwYWQtYi0zIj4KCiAgICAgICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1ndXR0ZXJzIGZyb3ctLWd1dHRlcnMtbWQtMnggZnJvdy0taXRlbXMtZW5kIj4KCiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtZmxleC1ncm93LTEiPgoKICAgICAgICAgICAgPGZvcm0gcm9sZT0ic2VhcmNoIj4KICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgZGlzYWJsZWQgc3R5bGU9ImRpc3BsYXk6IG5vbmUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2J1dHRvbj4KICAgICAgICAgICAgICA8ZGl2IGlkPSJTaGFyZWQ6OlNlYXJjaC1yZWFjdC1jb21wb25lbnQtNTlhODYyZWMtYzA4Ny00YzFhLTgxYmMtYzkxMzQ5ZDU5Zjk5Ij48L2Rpdj4KICAgICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBjbGFzcz0ianMtcmVhY3Qtb24tcmFpbHMtY29tcG9uZW50IiBkYXRhLWNvbXBvbmVudC1uYW1lPSJTaGFyZWQ6OlNlYXJjaCIgZGF0YS1kb20taWQ9IlNoYXJlZDo6U2VhcmNoLXJlYWN0LWNvbXBvbmVudC01OWE4NjJlYy1jMDg3LTRjMWEtODFiYy1jOTEzNDlkNTlmOTkiPnsidGFyZ2V0IjoiZXh0ZXJuYWw6am9iczppbmRleDo1NDk0Iiwid2lsbFVwZGF0ZVVybCI6dHJ1ZSwic2VhcmNoUGxhY2Vob2xkZXJUZXh0IjoiU2VhcmNoLi4uIiwiZmVhdHVyZUZsYWdzIjp7ImpvYl90ZW1wbGF0ZXMiOiJlbmFibGVkIn0sImNvbXBhbnlTZXR0aW5ncyI6eyJlZGl0X29mZmVyX2JlZm9yZV9zZW5kIjp0cnVlLCJhZHZhbmNlZF9zZWFyY2giOnRydWUsImZhY2Vib29rX2FkdmVydCI6ZmFsc2UsImJ1bGtfZG93bmxvYWQiOmZhbHNlLCJtb3ZlX3RvX2hpcmVkX29uX29mZmVyX2FjY2VwdGFuY2UiOnRydWUsImJ1bGtfZW1haWxfam9iX3NlZWtlcnMiOmZhbHNlLCJ3b3JrZmxvd19hdXRvbWF0aW9uIjp0cnVlLCJjcm9ub2Z5X2VudGVycHJpc2VfY29ubmVjdCI6dHJ1ZSwiam9iX3JlcXVpc2l0aW9uX21hbmFnZW1lbnQiOnRydWUsImVzc2VudGlhbF9jb29raWVzX29ubHkiOmZhbHNlLCJ1c2VfY29tcGFueV9mcm9tX2FkZHJlc3MiOnRydWUsInNlbWlfcHJpdmF0ZV9jb21tZW50cyI6ZmFsc2UsImFkZGl0aW9uYWxfc3RhdHVzZXMiOnRydWUsIm11bHRpcGxlX2NvbXBhbnlfdGhlbWVzIjpmYWxzZSwic3RyaWN0X29mY2NwX2NvbXBsaWFuY2UiOmZhbHNlLCJncm91cGVkX2pvYnMiOmZhbHNlLCJtb3ZlX3RvX2FueV9qb2IiOnRydWUsInJlbW92ZV9sb2dvX2Zyb21fZW1haWxfdGVtcGxhdGUiOmZhbHNlLCJjYW5kaWRhdGVfam9iX3ByZWZlcmVuY2VzIjpmYWxzZSwiYXV0b21hdGljYWxseV9yZWplY3RfcmVmZXJyYWxzIjpmYWxzZSwiaW5kZWVkX2ZlZWRfc3RhZ2VzIjpmYWxzZSwidmFyaWFibGVfc2lnbl9vZmZfc2lnbmF0b3JpZXMiOnRydWUsInJlYWN0X3NlbGVjdF9vbl9leHRlcm5hbF9qb2JzIjpmYWxzZSwibW9uaXRvcl93aXRoX3J1bSI6ZmFsc2UsInJlc3RyaWN0ZWRfY3Jvbm9meV9vYXV0aF9zY29wZSI6ZmFsc2UsImFwcGxpY2F0aW9uX25hdGlvbmFsX2lkZW50aWZpZXJzIjpmYWxzZSwiYWxsb3dfaW5hY3RpdmVfc3RydWN0dXJlcyI6ZmFsc2UsInZpc2libGVfb3RoZXJfYXBwbGljYXRpb25zIjpmYWxzZSwiYWxsb3dfZWRpdGluZ19qb2JfcmVxdWlzaXRpb25fZmllbGRzIjp0cnVlLCJ0d29fY29sdW1uX3NpZGViYXIiOmZhbHNlLCJtdWx0aXBsZV9qb2JfcG9zdGluZ3MiOmZhbHNlLCJtYXhfYXBwbGljYXRpb25zIjpmYWxzZSwiZ3JvdXBfaW50ZXJ2aWV3cyI6ZmFsc2UsImNyZWF0ZV9yZXF1aXNpdGlvbnNfZm9yX2V4aXN0aW5nX2pvYnMiOnRydWUsInRlYW1fcmVqZWN0aW9uX25vdGlmaWNhdGlvbiI6ZmFsc2UsInNlbmRfcGRmX2NvcHlfb2ZfYXBwbGljYXRpb24iOmZhbHNlLCJkaXNhYmxlX2luZGVlZF9mZWVkIjpmYWxzZSwidm9ucV92MiI6dHJ1ZSwicmVkaXJlY3RfdG9fY3VzdG9tX3N1YmRvbWFpbiI6dHJ1ZSwiYWRkX2NjX2FuZF9iY2NfdG9fZW1haWwiOnRydWUsImFsbG93X2NyZWF0aW5nX2NvbXBhbnlfdGVhbXMiOmZhbHNlLCJtYW51YWxseV9zZW5kX29mZmVycyI6ZmFsc2UsInByaXZhdGVfY2FsZW5kYXJfZXZlbnRzIjp0cnVlLCJjYW5kaWRhdGVfZGV0YWlsc19pbl9vZmZlcl9oZWFkZXIiOmZhbHNlLCJzaG93X2RhdGVfaW5fb2ZmZXJfaGVhZGVyIjp0cnVlLCJzaG93X2pvYl9zZWVrZXJzX2luX2FsbF9jYW5kaWRhdGVzIjpmYWxzZSwidGFsZW50X3BpcGVsaW5lIjp0cnVlLCJhbm9ueW1vdXNfc2NyZWVuaW5nIjp0cnVlLCJjYW5kaWRhdGVfc3VydmV5cyI6dHJ1ZSwidGFza19tYW5hZ2VtZW50Ijp0cnVlLCJvZmZlcl9tYW5hZ2VtZW50Ijp0cnVlLCJyZWZlcnJhbF9tYW5hZ2VtZW50Ijp0cnVlLCJhZHZhbmNlZF9yZXBvcnRpbmciOnRydWUsImFsbG93X2NvdmVyX2xldHRlcnMiOnRydWUsImxvY2F0aW9uX2NpdHlfc3RhdGUiOmZhbHNlLCJkZWlfcmVwb3J0cyI6dHJ1ZSwiYWNjZXNzaWJsZV9kYXRlX2FuZF9waG9uZSI6ZmFsc2UsImVuYWJsZV9yZWRhY3Rpb24iOnRydWUsImludGVybnNoaXBfcHJvZ3JhbW1lIjpmYWxzZSwiZG9jdW1lbnRfdGVtcGxhdGVzX29uX3N0YWdlIjp0cnVlLCJzdGFnZV92aXNpYmlsaXRpZXMiOnRydWUsIm9uYm9hcmRpbmdfdjIiOmZhbHNlLCJsaW1pdF9vbmJvYXJkaW5nX3RvX2hpcmVkX2NhbmRpZGF0ZXMiOmZhbHNlLCJwZXJzb25hbF9kZXRhaWxzX2F1dG9fdXBkYXRlIjp0cnVlLCJncm91cF9hc3Nlc3NtZW50cyI6dHJ1ZSwiZW5mb3JjZV9hbGxfb2ZmZXJfZmllbGRzX3JlcXVpcmVkIjpmYWxzZSwicmVzdW1lX3BhcnNpbmciOnRydWUsImN1c3RvbV9qb2JfcG9zdGluZ19sb2NhdGlvbnMiOmZhbHNlLCJvZmZlcl9zcGxpdHRpbmciOmZhbHNlLCJpbmRlZWRfbG9jYWxlX3VybCI6ZmFsc2UsImRvd25sb2FkX3BkZl9hcHBsaWNhdGlvbiI6dHJ1ZSwid29ya2Zsb3dfYXV0b21hdGlvbl92MiI6ZmFsc2UsImRpc2FibGVfY29va2llX2RpYWxvZyI6ZmFsc2UsImxpbmtlZGluX2pvYl9wb3N0aW5ncyI6ZmFsc2UsInRhbGVudF9waXBlbGluZV92MiI6dHJ1ZSwicmVxdWlyZV9oZWFkY291bnQiOmZhbHNlLCJvbmJvYXJkaW5nX3YxIjp0cnVlLCJza2lsbHMiOnRydWUsImNhcmVlcnNfc2l0ZV9idWlsZGVyX3YyIjpmYWxzZSwiZXh0cmFfbW9uaXRvcmluZ19mb3JfYXV0b21hdGlvbnMiOmZhbHNlLCJxdWVzdGlvbm5haXJlcyI6ZmFsc2UsImNhbmRpZGF0ZV9wb2xpY3lfcGx1Y2tpbmciOmZhbHNlLCJzdGFnZV9ncm91cHMiOmZhbHNlLCJkb2N1c2lnbl9sb2dnaW5nIjpmYWxzZSwiZW5hYmxlX2Nyb25vZnlfZXZlbnRfZGVsZXRpb25fdHJhY2tpbmciOmZhbHNlfSwiZW5hYmxlZExvY2FsZUtleXMiOlsiZW4iXSwidXNlclJvbGVzIjpudWxsLCJvbmJvYXJkaW5nU2V0dGluZ3MiOnsiaXNPbmJvYXJkaW5nRW5hYmxlZCI6dHJ1ZX19PC9zY3JpcHQ+CiAgICAgIAoKICAgICAgICAgICAgPC9mb3JtPgoKICAgICAgICAgIDwvZGl2PgoKCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1tZC02LTEyIj4KICAgICAgICAgICAgICA8ZGl2IGlkPSJFeHRlcm5hbDo6RmlsdGVycy1yZWFjdC1jb21wb25lbnQtZDU2YThmZDItZGQ2ZS00MWQ0LTgzMzEtYjQ1Yjk2Y2I2ZWI2Ij48L2Rpdj4KICAgICAgPHNjcmlwdCB0eXBlPSJhcHBsaWNhdGlvbi9qc29uIiBjbGFzcz0ianMtcmVhY3Qtb24tcmFpbHMtY29tcG9uZW50IiBkYXRhLWNvbXBvbmVudC1uYW1lPSJFeHRlcm5hbDo6RmlsdGVycyIgZGF0YS1kb20taWQ9IkV4dGVybmFsOjpGaWx0ZXJzLXJlYWN0LWNvbXBvbmVudC1kNTZhOGZkMi1kZDZlLTQxZDQtODMzMS1iNDViOTZjYjZlYjYiPnsiZmlsdGVycyI6W3sibmFtZSI6ImxvY2F0aW9uIiwiYXR0cmlidXRlIjoibG9jYXRpb25faWQiLCJ2YWx1ZXMiOltdLCJpdGVtcyI6W3sibGFiZWwiOiJCYXRoIiwidmFsdWUiOjEwMzkzfSx7ImxhYmVsIjoiQmF0aCAtIENvcnNoYW0gQ291cnQiLCJ2YWx1ZSI6MTQ5NjF9LHsibGFiZWwiOiJCYXRoIC0gTG9ja3Nicm9vayBDYW1wdXMiLCJ2YWx1ZSI6MTQ5NTl9LHsibGFiZWwiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJ2YWx1ZSI6MTQ5NTh9LHsibGFiZWwiOiJCYXRoIC0gTmV3dG9uIFBhcmsgXHUwMDI2IExvY2tzYnJvb2siLCJ2YWx1ZSI6MTQ5NjJ9LHsibGFiZWwiOiJCYXRoIC0gUGFsYWNlIFlhcmQgTWV3cyIsInZhbHVlIjoxNzQ3MX0seyJsYWJlbCI6IkJhdGggLSBTaW9uIEhpbGwgQ2FtcHVzIiwidmFsdWUiOjE0OTYwfSx7ImxhYmVsIjoiQmF0aCBTcGEgVW5pdmVyc2l0eSBMb25kb24iLCJ2YWx1ZSI6MjM0NzB9LHsibGFiZWwiOiJMb25kb24gLSBOZXcgQ2l0eSBDb2xsZWdlICIsInZhbHVlIjoxNDk2M30seyJsYWJlbCI6IlJlbW90ZSIsInZhbHVlIjoyNzMyN30seyJsYWJlbCI6IlRoZSBTdHVkaW8gLSBQYWxhY2UgWWFyZCBNZXdzIiwidmFsdWUiOjI2NjM1fSx7ImxhYmVsIjoiVmFyaW91cyAtIEFjcm9zcyBTVyBFbmdsYW5kICIsInZhbHVlIjoyODU2NH1dLCJ0cmFuc2xhdGlvbnMiOnsic2luZ2xlSXRlbSI6IkxvY2F0aW9uIiwicGx1cmFsSXRlbXMiOiJMb2NhdGlvbnMiLCJhbGxJdGVtcyI6IkFsbCBMb2NhdGlvbnMifX0seyJuYW1lIjoiZGVwYXJ0bWVudCIsImF0dHJpYnV0ZSI6ImRlcGFydG1lbnRfaWQiLCJ2YWx1ZXMiOltdLCJpdGVtcyI6W3sibGFiZWwiOiIgSW5ub3ZhdGlvbiBhbmQgS25vd2xlZGdlIEV4Y2hhbmdlIENlbnRyZSIsInZhbHVlIjozNzY4OX0seyJsYWJlbCI6IkFjYWRlbWljIFBsYW5uaW5nIiwidmFsdWUiOjE5MDg2fSx7ImxhYmVsIjoiQXJ0LCBGaWxtIFx1MDAyNiBNZWRpYSAiLCJ2YWx1ZSI6NDE1MDd9LHsibGFiZWwiOiJCYXRoIEJ1c2luZXNzIHNjaG9vbCAtIExvbmRvbiAiLCJ2YWx1ZSI6MzQ0MzF9LHsibGFiZWwiOiJCYXRoIFNjaG9vbCBvZiBNdXNpYyBhbmQgUGVyZm9ybWluZyBBcnRzICIsInZhbHVlIjozMTkwNH0seyJsYWJlbCI6IkJhdGggU3BhIFVuaXZlcnNpdHkgTG9uZG9uICIsInZhbHVlIjoyOTk2Mn0seyJsYWJlbCI6IkJ1c2luZXNzIFNjaG9vbCIsInZhbHVlIjoxOTA4NX0seyJsYWJlbCI6IkNhcmVlcnMgYW5kIEVtcGxveWFiaWxpdHkiLCJ2YWx1ZSI6Mjg1MzN9LHsibGFiZWwiOiJDYXRlcmluZyAiLCJ2YWx1ZSI6MzQxMzV9LHsibGFiZWwiOiJDZW50cmUgZm9yIEVkdWNhdGlvbmFsIFBhcnRuZXJzaGlwcyAiLCJ2YWx1ZSI6MzgxMzl9LHsibGFiZWwiOiJDaGFuY2VscnkiLCJ2YWx1ZSI6MjU0NzJ9LHsibGFiZWwiOiJEYXRhIFx1MDAyNiBJbnNpZ2h0cyBTZXJ2aWNlIiwidmFsdWUiOjMzMTA0fSx7ImxhYmVsIjoiRUFVIiwidmFsdWUiOjMyMDY0fSx7ImxhYmVsIjoiRUFVIFNob3J0IENvdXJzZXMiLCJ2YWx1ZSI6Mjk4MDh9LHsibGFiZWwiOiJFc3RhdGVzIiwidmFsdWUiOjI1NDczfSx7ImxhYmVsIjoiRXN0YXRlcyBhbmQgU2VydmljZXMiLCJ2YWx1ZSI6MzA2NzV9LHsibGFiZWwiOiJFc3RhdGVzL1NlY3VyaXR5IiwidmFsdWUiOjMwOTUxfSx7ImxhYmVsIjoiRXh0ZXJuYWwgQWZmYWlycyBVbml0IiwidmFsdWUiOjI1NDc0fSx7ImxhYmVsIjoiRmFjaWxpdGllcyBhbmQgU2VydmljZXMiLCJ2YWx1ZSI6MzAwNTB9LHsibGFiZWwiOiJGaW5hbmNlIiwidmFsdWUiOjI1NDc1fSx7ImxhYmVsIjoiRnV0dXJlIFN0dWRlbnRzIiwidmFsdWUiOjMxNDA2fSx7ImxhYmVsIjoiR292ZXJuYW5jZSBcdTAwMjYgRW5nYWdlbWVudCAiLCJ2YWx1ZSI6MzUxNTR9LHsibGFiZWwiOiJHb3Zlcm5hbmNlIExlZ2FsIFx1MDAyNiBDb21wbGlhbmNlIiwidmFsdWUiOjI1NDc2fSx7ImxhYmVsIjoiSFIiLCJ2YWx1ZSI6MTkwODd9LHsibGFiZWwiOiJJVCBTZXJ2aWNlcyIsInZhbHVlIjoyNTQ3N30seyJsYWJlbCI6IkxlYXJuaW5nIElubm92YXRpb24gXHUwMDI2IFNraWxscyBVbml0IC8gIFNjaG9vbHMgVGVjaG5pY2FsIFNlcnZpY2VzIiwidmFsdWUiOjM0MjE2fSx7ImxhYmVsIjoiTGVhcm5pbmcsIElubm92YXRpb24gYW5kIFNraWxscyIsInZhbHVlIjozNjEyNH0seyJsYWJlbCI6IkxlYXJuaW5nLCBJbm5vdmF0aW9uIGFuZCBTa2lsbHM6IEFjYWRlbWljIFNraWxscyIsInZhbHVlIjoyODMwN30seyJsYWJlbCI6IkxpYnJhcnkgYW5kIExlYXJuaW5nIFNlcnZpY2VzIiwidmFsdWUiOjI4MzI2fSx7ImxhYmVsIjoiTWFya2V0aW5nIGFuZCBBcHBsaWNhbnQgQ29tbXMsIEZ1dHVyZSBTdHVkZW50cyAiLCJ2YWx1ZSI6Mjk4MTV9LHsibGFiZWwiOiJQb3J0Zm9saW8gYW5kIFBsYW5uaW5nIiwidmFsdWUiOjMwNDA5fSx7ImxhYmVsIjoiUmVzZWFyY2ggXHUwMDI2IEVudGVycHJpc2UiLCJ2YWx1ZSI6MjU0Nzh9LHsibGFiZWwiOiJSZXNlYXJjaCBcdTAwMjYgR3JhZHVhdGUgQWZmYWlycyIsInZhbHVlIjozMzIyMH0seyJsYWJlbCI6IlNjaG9vbCBPZiBTY2llbmNlIiwidmFsdWUiOjI5NjQ1fSx7ImxhYmVsIjoiU2Nob29sIG9mIEFydCwgRmlsbSBcdTAwMjYgTWVkaWEiLCJ2YWx1ZSI6MzYyNzJ9LHsibGFiZWwiOiJTY2hvb2wgb2YgRGVzaWduIiwidmFsdWUiOjE5MDg4fSx7ImxhYmVsIjoiU2Nob29sIG9mIEVkdWNhdGlvbiIsInZhbHVlIjoyNTQ3OX0seyJsYWJlbCI6IlNjaG9vbCBvZiBGaWxtIFx1MDAyNiBBcnRzIiwidmFsdWUiOjE5MDg0fSx7ImxhYmVsIjoiU2Nob29sIG9mIE11c2ljIFx1MDAyNiBQZXJmb3JtaW5nIEFydHMiLCJ2YWx1ZSI6MTkwODN9LHsibGFiZWwiOiJTY2hvb2wgb2YgU2NpZW5jZSIsInZhbHVlIjoyOTY0Nn0seyJsYWJlbCI6IlNjaG9vbCBvZiBTY2llbmNlcyIsInZhbHVlIjoyNTQ4MH0seyJsYWJlbCI6IlNjaG9vbCBvZiBXcml0aW5nIFB1Ymxpc2hpbmcgXHUwMDI2IEh1bWFuaXRpZXMiLCJ2YWx1ZSI6MjU0ODF9LHsibGFiZWwiOiJTY2hvb2wgb2YgV3JpdGluZywgUHVibGlzaGluZyBhbmQgdGhlIEh1bWFuaXRpZXMiLCJ2YWx1ZSI6MjkyNDZ9LHsibGFiZWwiOiJTdHJhdGVnaWMgUHJvamVjdHMgXHUwMDI2IERlbGl2ZXJ5IFVuaXQiLCJ2YWx1ZSI6MjU0ODJ9LHsibGFiZWwiOiJTdHJhdGVnaWMgUHJvamVjdHMgYW5kIENoYW5nZSBVbml0IiwidmFsdWUiOjM2MDM3fSx7ImxhYmVsIjoiU3R1ZGVudCBBY2NvbW1vZGF0aW9uICIsInZhbHVlIjozNTAzNX0seyJsYWJlbCI6IlN0dWRlbnQgRXhwZXJpZW5jZSIsInZhbHVlIjoyNTQ4M30seyJsYWJlbCI6IlN0dWRlbnQgSG91c2luZyAiLCJ2YWx1ZSI6MzM0MTF9LHsibGFiZWwiOiJTdHVkZW50IFdlbGxiZWluZyBTRXJ2aWNlcyIsInZhbHVlIjozMTkyOX0seyJsYWJlbCI6IlN0dWRlbnQgV2VsbGJlaW5nIFNlcnZpY2VzICIsInZhbHVlIjoyODI3OX0seyJsYWJlbCI6IlN0dWRlbnQgYW5kIFJlZ2lzdHJ5IFNlcnZpY2VzIiwidmFsdWUiOjI5MjYyfSx7ImxhYmVsIjoiU3R1ZGVudCB3ZWxsYmVpbmcgU2VydmljZXMiLCJ2YWx1ZSI6MzE5MzB9LHsibGFiZWwiOiJUZWNobmljYWwgU2VydmljZXMiLCJ2YWx1ZSI6MzA3NDZ9LHsibGFiZWwiOiJXZWxsYmVpbmcgXHUwMDI2IERpc2FiaWxpdHkiLCJ2YWx1ZSI6MzAxNDd9LHsibGFiZWwiOiJXcml0aW5nLCBQdWJsaXNoaW5nIFx1MDAyNiBIdW1hbml0aWVzICIsInZhbHVlIjoyOTc4MX1dLCJ0cmFuc2xhdGlvbnMiOnsic2luZ2xlSXRlbSI6IkRlcGFydG1lbnQiLCJwbHVyYWxJdGVtcyI6IkRlcGFydG1lbnRzIiwiYWxsSXRlbXMiOiJBbGwgRGVwYXJ0bWVudHMifX1dLCJpc1VybEZpbHRlcmFibGUiOnRydWUsInRhcmdldCI6ImV4dGVybmFsOmpvYnM6aW5kZXg6NTQ5NCIsIndpbGxVcGRhdGVVcmwiOnRydWUsInZpc2libGVfY29sdW1ucyI6eyJlbXBsb3ltZW50X3R5cGVfY29sdW1uX3Zpc2libGUiOnRydWUsImxvY2F0aW9uc19jb2x1bW5fdmlzaWJsZSI6dHJ1ZSwiZGVwYXJ0bWVudHNfY29sdW1uX3Zpc2libGUiOnRydWUsImRpdmlzaW9uc19jb2x1bW5fdmlzaWJsZSI6dHJ1ZSwicmVxdWlzaXRpb25faWRfY29sdW1uX3Zpc2libGUiOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lc19jb2x1bW5fdmlzaWJsZSI6dHJ1ZSwid29ya3BsYWNlX3R5cGVfY29sdW1uX3Zpc2libGUiOm51bGx9LCJmZWF0dXJlRmxhZ3MiOnsiam9iX3RlbXBsYXRlcyI6ImVuYWJsZWQifSwiY29tcGFueVNldHRpbmdzIjp7ImVkaXRfb2ZmZXJfYmVmb3JlX3NlbmQiOnRydWUsImFkdmFuY2VkX3NlYXJjaCI6dHJ1ZSwiZmFjZWJvb2tfYWR2ZXJ0IjpmYWxzZSwiYnVsa19kb3dubG9hZCI6ZmFsc2UsIm1vdmVfdG9faGlyZWRfb25fb2ZmZXJfYWNjZXB0YW5jZSI6dHJ1ZSwiYnVsa19lbWFpbF9qb2Jfc2Vla2VycyI6ZmFsc2UsIndvcmtmbG93X2F1dG9tYXRpb24iOnRydWUsImNyb25vZnlfZW50ZXJwcmlzZV9jb25uZWN0Ijp0cnVlLCJqb2JfcmVxdWlzaXRpb25fbWFuYWdlbWVudCI6dHJ1ZSwiZXNzZW50aWFsX2Nvb2tpZXNfb25seSI6ZmFsc2UsInVzZV9jb21wYW55X2Zyb21fYWRkcmVzcyI6dHJ1ZSwic2VtaV9wcml2YXRlX2NvbW1lbnRzIjpmYWxzZSwiYWRkaXRpb25hbF9zdGF0dXNlcyI6dHJ1ZSwibXVsdGlwbGVfY29tcGFueV90aGVtZXMiOmZhbHNlLCJzdHJpY3Rfb2ZjY3BfY29tcGxpYW5jZSI6ZmFsc2UsImdyb3VwZWRfam9icyI6ZmFsc2UsIm1vdmVfdG9fYW55X2pvYiI6dHJ1ZSwicmVtb3ZlX2xvZ29fZnJvbV9lbWFpbF90ZW1wbGF0ZSI6ZmFsc2UsImNhbmRpZGF0ZV9qb2JfcHJlZmVyZW5jZXMiOmZhbHNlLCJhdXRvbWF0aWNhbGx5X3JlamVjdF9yZWZlcnJhbHMiOmZhbHNlLCJpbmRlZWRfZmVlZF9zdGFnZXMiOmZhbHNlLCJ2YXJpYWJsZV9zaWduX29mZl9zaWduYXRvcmllcyI6dHJ1ZSwicmVhY3Rfc2VsZWN0X29uX2V4dGVybmFsX2pvYnMiOmZhbHNlLCJtb25pdG9yX3dpdGhfcnVtIjpmYWxzZSwicmVzdHJpY3RlZF9jcm9ub2Z5X29hdXRoX3Njb3BlIjpmYWxzZSwiYXBwbGljYXRpb25fbmF0aW9uYWxfaWRlbnRpZmllcnMiOmZhbHNlLCJhbGxvd19pbmFjdGl2ZV9zdHJ1Y3R1cmVzIjpmYWxzZSwidmlzaWJsZV9vdGhlcl9hcHBsaWNhdGlvbnMiOmZhbHNlLCJhbGxvd19lZGl0aW5nX2pvYl9yZXF1aXNpdGlvbl9maWVsZHMiOnRydWUsInR3b19jb2x1bW5fc2lkZWJhciI6ZmFsc2UsIm11bHRpcGxlX2pvYl9wb3N0aW5ncyI6ZmFsc2UsIm1heF9hcHBsaWNhdGlvbnMiOmZhbHNlLCJncm91cF9pbnRlcnZpZXdzIjpmYWxzZSwiY3JlYXRlX3JlcXVpc2l0aW9uc19mb3JfZXhpc3Rpbmdfam9icyI6dHJ1ZSwidGVhbV9yZWplY3Rpb25fbm90aWZpY2F0aW9uIjpmYWxzZSwic2VuZF9wZGZfY29weV9vZl9hcHBsaWNhdGlvbiI6ZmFsc2UsImRpc2FibGVfaW5kZWVkX2ZlZWQiOmZhbHNlLCJ2b25xX3YyIjp0cnVlLCJyZWRpcmVjdF90b19jdXN0b21fc3ViZG9tYWluIjp0cnVlLCJhZGRfY2NfYW5kX2JjY190b19lbWFpbCI6dHJ1ZSwiYWxsb3dfY3JlYXRpbmdfY29tcGFueV90ZWFtcyI6ZmFsc2UsIm1hbnVhbGx5X3NlbmRfb2ZmZXJzIjpmYWxzZSwicHJpdmF0ZV9jYWxlbmRhcl9ldmVudHMiOnRydWUsImNhbmRpZGF0ZV9kZXRhaWxzX2luX29mZmVyX2hlYWRlciI6ZmFsc2UsInNob3dfZGF0ZV9pbl9vZmZlcl9oZWFkZXIiOnRydWUsInNob3dfam9iX3NlZWtlcnNfaW5fYWxsX2NhbmRpZGF0ZXMiOmZhbHNlLCJ0YWxlbnRfcGlwZWxpbmUiOnRydWUsImFub255bW91c19zY3JlZW5pbmciOnRydWUsImNhbmRpZGF0ZV9zdXJ2ZXlzIjp0cnVlLCJ0YXNrX21hbmFnZW1lbnQiOnRydWUsIm9mZmVyX21hbmFnZW1lbnQiOnRydWUsInJlZmVycmFsX21hbmFnZW1lbnQiOnRydWUsImFkdmFuY2VkX3JlcG9ydGluZyI6dHJ1ZSwiYWxsb3dfY292ZXJfbGV0dGVycyI6dHJ1ZSwibG9jYXRpb25fY2l0eV9zdGF0ZSI6ZmFsc2UsImRlaV9yZXBvcnRzIjp0cnVlLCJhY2Nlc3NpYmxlX2RhdGVfYW5kX3Bob25lIjpmYWxzZSwiZW5hYmxlX3JlZGFjdGlvbiI6dHJ1ZSwiaW50ZXJuc2hpcF9wcm9ncmFtbWUiOmZhbHNlLCJkb2N1bWVudF90ZW1wbGF0ZXNfb25fc3RhZ2UiOnRydWUsInN0YWdlX3Zpc2liaWxpdGllcyI6dHJ1ZSwib25ib2FyZGluZ192MiI6ZmFsc2UsImxpbWl0X29uYm9hcmRpbmdfdG9faGlyZWRfY2FuZGlkYXRlcyI6ZmFsc2UsInBlcnNvbmFsX2RldGFpbHNfYXV0b191cGRhdGUiOnRydWUsImdyb3VwX2Fzc2Vzc21lbnRzIjp0cnVlLCJlbmZvcmNlX2FsbF9vZmZlcl9maWVsZHNfcmVxdWlyZWQiOmZhbHNlLCJyZXN1bWVfcGFyc2luZyI6dHJ1ZSwiY3VzdG9tX2pvYl9wb3N0aW5nX2xvY2F0aW9ucyI6ZmFsc2UsIm9mZmVyX3NwbGl0dGluZyI6ZmFsc2UsImluZGVlZF9sb2NhbGVfdXJsIjpmYWxzZSwiZG93bmxvYWRfcGRmX2FwcGxpY2F0aW9uIjp0cnVlLCJ3b3JrZmxvd19hdXRvbWF0aW9uX3YyIjpmYWxzZSwiZGlzYWJsZV9jb29raWVfZGlhbG9nIjpmYWxzZSwibGlua2VkaW5fam9iX3Bvc3RpbmdzIjpmYWxzZSwidGFsZW50X3BpcGVsaW5lX3YyIjp0cnVlLCJyZXF1aXJlX2hlYWRjb3VudCI6ZmFsc2UsIm9uYm9hcmRpbmdfdjEiOnRydWUsInNraWxscyI6dHJ1ZSwiY2FyZWVyc19zaXRlX2J1aWxkZXJfdjIiOmZhbHNlLCJleHRyYV9tb25pdG9yaW5nX2Zvcl9hdXRvbWF0aW9ucyI6ZmFsc2UsInF1ZXN0aW9ubmFpcmVzIjpmYWxzZSwiY2FuZGlkYXRlX3BvbGljeV9wbHVja2luZyI6ZmFsc2UsInN0YWdlX2dyb3VwcyI6ZmFsc2UsImRvY3VzaWduX2xvZ2dpbmciOmZhbHNlLCJlbmFibGVfY3Jvbm9meV9ldmVudF9kZWxldGlvbl90cmFja2luZyI6ZmFsc2V9LCJlbmFibGVkTG9jYWxlS2V5cyI6WyJlbiJdLCJ1c2VyUm9sZXMiOm51bGwsIm9uYm9hcmRpbmdTZXR0aW5ncyI6eyJpc09uYm9hcmRpbmdFbmFibGVkIjp0cnVlfX08L3NjcmlwdD4KICAgICAgCgoKICAgICAgICAgICAgPC9kaXY+CgoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgoKICA8L2Rpdj4KCgogIDxkaXYgaWQ9IkV4dGVybmFsOjpKb2JzLXJlYWN0LWNvbXBvbmVudC1jZjkzODY2OC0wMjlmLTQ0ZWItYWZhYS02ZGY4YWY3YzZkNmYiPjwvZGl2PgogICAgICA8c2NyaXB0IHR5cGU9ImFwcGxpY2F0aW9uL2pzb24iIGNsYXNzPSJqcy1yZWFjdC1vbi1yYWlscy1jb21wb25lbnQiIGRhdGEtY29tcG9uZW50LW5hbWU9IkV4dGVybmFsOjpKb2JzIiBkYXRhLWRvbS1pZD0iRXh0ZXJuYWw6OkpvYnMtcmVhY3QtY29tcG9uZW50LWNmOTM4NjY4LTAyOWYtNDRlYi1hZmFhLTZkZjhhZjdjNmQ2ZiI+eyJhZGRpdGlvbmFsQ29sdW1ucyI6W10sInVybCI6Ii9wb3N0aW5ncy5qc29uIiwidGFyZ2V0IjoiZXh0ZXJuYWw6am9iczppbmRleDo1NDk0IiwidHJhbnNsYXRpb25zIjp7ImpvYl90aXRsZSI6IkpvYiBUaXRsZSIsImRlcGFydG1lbnQiOiJEZXBhcnRtZW50IiwiZGl2aXNpb24iOiJEaXZpc2lvbiIsInJlcXVpc2l0aW9uX2lkIjoiUmVxdWlzaXRpb24gSUQiLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6IkN1c3RvbSIsImxvY2F0aW9uIjoiTG9jYXRpb24iLCJlbXBsb3ltZW50X3R5cGUiOiJFbXBsb3ltZW50IFR5cGUiLCJub19wb3NpdGlvbnMiOiJUaGVyZSBhcmUgY3VycmVudGx5IG5vIHBvc2l0aW9ucyBhZHZlcnRpc2VkLiIsIm5vX29wcG9ydHVuaXRpZXMiOiJUaGVyZSBhcmUgY3VycmVudGx5IG5vIG9wcG9ydHVuaXRpZXMgYmFzZWQgb24geW91ciBmaWx0ZXJzLiBQbGVhc2UgdHJ5IGFnYWluLCBvciByZWdpc3RlciB5b3VyIGludGVyZXN0LiIsIndvcmtwbGFjZV90eXBlIjoiV29ya3BsYWNlIHR5cGUifSwic3RydWN0dXJlcyI6W3sia2V5IjoibG9jYXRpb24iLCJrZXlQbHVyYWwiOiJsb2NhdGlvbnMiLCJuYW1lIjoiTG9jYXRpb24iLCJuYW1lUGx1cmFsIjoiTG9jYXRpb25zIiwibmFtZUFjY2Vzc29yIjoibG9jYXRpb25OYW1lIiwiY29sdW1uVmlzaWJpbGl0eUFjY2Vzc29yIjoibG9jYXRpb25zQ29sdW1uVmlzaWJsZSJ9LHsia2V5IjoiZGVwYXJ0bWVudCIsImtleVBsdXJhbCI6ImRlcGFydG1lbnRzIiwibmFtZSI6IkRlcGFydG1lbnQiLCJuYW1lUGx1cmFsIjoiRGVwYXJ0bWVudHMiLCJuYW1lQWNjZXNzb3IiOiJkZXBhcnRtZW50TmFtZSIsImNvbHVtblZpc2liaWxpdHlBY2Nlc3NvciI6ImRlcGFydG1lbnRzQ29sdW1uVmlzaWJsZSJ9XSwidmlzaWJsZV9jb2x1bW5zIjp7ImVtcGxveW1lbnRfdHlwZV9jb2x1bW5fdmlzaWJsZSI6dHJ1ZSwibG9jYXRpb25zX2NvbHVtbl92aXNpYmxlIjp0cnVlLCJkZXBhcnRtZW50c19jb2x1bW5fdmlzaWJsZSI6dHJ1ZSwiZGl2aXNpb25zX2NvbHVtbl92aXNpYmxlIjp0cnVlLCJyZXF1aXNpdGlvbl9pZF9jb2x1bW5fdmlzaWJsZSI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmVzX2NvbHVtbl92aXNpYmxlIjp0cnVlLCJ3b3JrcGxhY2VfdHlwZV9jb2x1bW5fdmlzaWJsZSI6bnVsbH0sInNob3dQYWdpbmF0aW9uIjpmYWxzZSwicGFnZVNpemUiOm51bGwsImZlYXR1cmVGbGFncyI6eyJqb2JfdGVtcGxhdGVzIjoiZW5hYmxlZCJ9LCJjb21wYW55U2V0dGluZ3MiOnsiZWRpdF9vZmZlcl9iZWZvcmVfc2VuZCI6dHJ1ZSwiYWR2YW5jZWRfc2VhcmNoIjp0cnVlLCJmYWNlYm9va19hZHZlcnQiOmZhbHNlLCJidWxrX2Rvd25sb2FkIjpmYWxzZSwibW92ZV90b19oaXJlZF9vbl9vZmZlcl9hY2NlcHRhbmNlIjp0cnVlLCJidWxrX2VtYWlsX2pvYl9zZWVrZXJzIjpmYWxzZSwid29ya2Zsb3dfYXV0b21hdGlvbiI6dHJ1ZSwiY3Jvbm9meV9lbnRlcnByaXNlX2Nvbm5lY3QiOnRydWUsImpvYl9yZXF1aXNpdGlvbl9tYW5hZ2VtZW50Ijp0cnVlLCJlc3NlbnRpYWxfY29va2llc19vbmx5IjpmYWxzZSwidXNlX2NvbXBhbnlfZnJvbV9hZGRyZXNzIjp0cnVlLCJzZW1pX3ByaXZhdGVfY29tbWVudHMiOmZhbHNlLCJhZGRpdGlvbmFsX3N0YXR1c2VzIjp0cnVlLCJtdWx0aXBsZV9jb21wYW55X3RoZW1lcyI6ZmFsc2UsInN0cmljdF9vZmNjcF9jb21wbGlhbmNlIjpmYWxzZSwiZ3JvdXBlZF9qb2JzIjpmYWxzZSwibW92ZV90b19hbnlfam9iIjp0cnVlLCJyZW1vdmVfbG9nb19mcm9tX2VtYWlsX3RlbXBsYXRlIjpmYWxzZSwiY2FuZGlkYXRlX2pvYl9wcmVmZXJlbmNlcyI6ZmFsc2UsImF1dG9tYXRpY2FsbHlfcmVqZWN0X3JlZmVycmFscyI6ZmFsc2UsImluZGVlZF9mZWVkX3N0YWdlcyI6ZmFsc2UsInZhcmlhYmxlX3NpZ25fb2ZmX3NpZ25hdG9yaWVzIjp0cnVlLCJyZWFjdF9zZWxlY3Rfb25fZXh0ZXJuYWxfam9icyI6ZmFsc2UsIm1vbml0b3Jfd2l0aF9ydW0iOmZhbHNlLCJyZXN0cmljdGVkX2Nyb25vZnlfb2F1dGhfc2NvcGUiOmZhbHNlLCJhcHBsaWNhdGlvbl9uYXRpb25hbF9pZGVudGlmaWVycyI6ZmFsc2UsImFsbG93X2luYWN0aXZlX3N0cnVjdHVyZXMiOmZhbHNlLCJ2aXNpYmxlX290aGVyX2FwcGxpY2F0aW9ucyI6ZmFsc2UsImFsbG93X2VkaXRpbmdfam9iX3JlcXVpc2l0aW9uX2ZpZWxkcyI6dHJ1ZSwidHdvX2NvbHVtbl9zaWRlYmFyIjpmYWxzZSwibXVsdGlwbGVfam9iX3Bvc3RpbmdzIjpmYWxzZSwibWF4X2FwcGxpY2F0aW9ucyI6ZmFsc2UsImdyb3VwX2ludGVydmlld3MiOmZhbHNlLCJjcmVhdGVfcmVxdWlzaXRpb25zX2Zvcl9leGlzdGluZ19qb2JzIjp0cnVlLCJ0ZWFtX3JlamVjdGlvbl9ub3RpZmljYXRpb24iOmZhbHNlLCJzZW5kX3BkZl9jb3B5X29mX2FwcGxpY2F0aW9uIjpmYWxzZSwiZGlzYWJsZV9pbmRlZWRfZmVlZCI6ZmFsc2UsInZvbnFfdjIiOnRydWUsInJlZGlyZWN0X3RvX2N1c3RvbV9zdWJkb21haW4iOnRydWUsImFkZF9jY19hbmRfYmNjX3RvX2VtYWlsIjp0cnVlLCJhbGxvd19jcmVhdGluZ19jb21wYW55X3RlYW1zIjpmYWxzZSwibWFudWFsbHlfc2VuZF9vZmZlcnMiOmZhbHNlLCJwcml2YXRlX2NhbGVuZGFyX2V2ZW50cyI6dHJ1ZSwiY2FuZGlkYXRlX2RldGFpbHNfaW5fb2ZmZXJfaGVhZGVyIjpmYWxzZSwic2hvd19kYXRlX2luX29mZmVyX2hlYWRlciI6dHJ1ZSwic2hvd19qb2Jfc2Vla2Vyc19pbl9hbGxfY2FuZGlkYXRlcyI6ZmFsc2UsInRhbGVudF9waXBlbGluZSI6dHJ1ZSwiYW5vbnltb3VzX3NjcmVlbmluZyI6dHJ1ZSwiY2FuZGlkYXRlX3N1cnZleXMiOnRydWUsInRhc2tfbWFuYWdlbWVudCI6dHJ1ZSwib2ZmZXJfbWFuYWdlbWVudCI6dHJ1ZSwicmVmZXJyYWxfbWFuYWdlbWVudCI6dHJ1ZSwiYWR2YW5jZWRfcmVwb3J0aW5nIjp0cnVlLCJhbGxvd19jb3Zlcl9sZXR0ZXJzIjp0cnVlLCJsb2NhdGlvbl9jaXR5X3N0YXRlIjpmYWxzZSwiZGVpX3JlcG9ydHMiOnRydWUsImFjY2Vzc2libGVfZGF0ZV9hbmRfcGhvbmUiOmZhbHNlLCJlbmFibGVfcmVkYWN0aW9uIjp0cnVlLCJpbnRlcm5zaGlwX3Byb2dyYW1tZSI6ZmFsc2UsImRvY3VtZW50X3RlbXBsYXRlc19vbl9zdGFnZSI6dHJ1ZSwic3RhZ2VfdmlzaWJpbGl0aWVzIjp0cnVlLCJvbmJvYXJkaW5nX3YyIjpmYWxzZSwibGltaXRfb25ib2FyZGluZ190b19oaXJlZF9jYW5kaWRhdGVzIjpmYWxzZSwicGVyc29uYWxfZGV0YWlsc19hdXRvX3VwZGF0ZSI6dHJ1ZSwiZ3JvdXBfYXNzZXNzbWVudHMiOnRydWUsImVuZm9yY2VfYWxsX29mZmVyX2ZpZWxkc19yZXF1aXJlZCI6ZmFsc2UsInJlc3VtZV9wYXJzaW5nIjp0cnVlLCJjdXN0b21fam9iX3Bvc3RpbmdfbG9jYXRpb25zIjpmYWxzZSwib2ZmZXJfc3BsaXR0aW5nIjpmYWxzZSwiaW5kZWVkX2xvY2FsZV91cmwiOmZhbHNlLCJkb3dubG9hZF9wZGZfYXBwbGljYXRpb24iOnRydWUsIndvcmtmbG93X2F1dG9tYXRpb25fdjIiOmZhbHNlLCJkaXNhYmxlX2Nvb2tpZV9kaWFsb2ciOmZhbHNlLCJsaW5rZWRpbl9qb2JfcG9zdGluZ3MiOmZhbHNlLCJ0YWxlbnRfcGlwZWxpbmVfdjIiOnRydWUsInJlcXVpcmVfaGVhZGNvdW50IjpmYWxzZSwib25ib2FyZGluZ192MSI6dHJ1ZSwic2tpbGxzIjp0cnVlLCJjYXJlZXJzX3NpdGVfYnVpbGRlcl92MiI6ZmFsc2UsImV4dHJhX21vbml0b3JpbmdfZm9yX2F1dG9tYXRpb25zIjpmYWxzZSwicXVlc3Rpb25uYWlyZXMiOmZhbHNlLCJjYW5kaWRhdGVfcG9saWN5X3BsdWNraW5nIjpmYWxzZSwic3RhZ2VfZ3JvdXBzIjpmYWxzZSwiZG9jdXNpZ25fbG9nZ2luZyI6ZmFsc2UsImVuYWJsZV9jcm9ub2Z5X2V2ZW50X2RlbGV0aW9uX3RyYWNraW5nIjpmYWxzZX0sImVuYWJsZWRMb2NhbGVLZXlzIjpbImVuIl0sInVzZXJSb2xlcyI6bnVsbCwib25ib2FyZGluZ1NldHRpbmdzIjp7ImlzT25ib2FyZGluZ0VuYWJsZWQiOnRydWV9fTwvc2NyaXB0PgogICAgICAKCgoKPC9zZWN0aW9uPgoKCgo8L21haW4+CgoKICA8L2Rpdj4KCiAgICA8Zm9vdGVyIGNsYXNzPSJleHRlcm5hbC1mb290ZXIgdGhlbWUtc2Vjb25kYXJ5LWJhY2tncm91bmQtY29sb3ItaWUtb3ZlcnJpZGUiIGlkPSJleHRlcm5hbC1jb250ZW50LWZvb3RlciI+CgogIDxkaXYgY2xhc3M9ImV4dGVybmFsLWNvbnRlbnQtd3JhcCI+CgoKICAgIDxkaXYgY2xhc3M9ImV4dGVybmFsLWZvb3Rlcl9fY29udGVudCI+CgogICAgICA8ZGl2IGNsYXNzPSJmcm93IGZyb3ctLWp1c3RpZnktYmV0d2VlbiBmcm93LS1pdGVtcy1zbS1jZW50ZXIgZnJvdy0tZGlyZWN0aW9uLWNvbHVtbiBmcm93LS1yb3ctc20gZnJvdy0tZ3V0dGVycy0zeCI+CgogICAgICAgIDxkaXY+CgogICAgICAgICAgPGRpdiBjbGFzcz0iZnJvdyBmcm93LS1pdGVtcy1zbS1jZW50ZXIgZnJvdy0tZGlyZWN0aW9uLWNvbHVtbiBmcm93LS1yb3ctc20gZnJvdy0tZ3V0dGVycy0yeCI+CgoKICAgICAgICAgICAgICA8YSBjbGFzcz0iZXh0ZXJuYWwtZm9vdGVyX19saW5rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iaHR0cHM6Ly93d3cuYmF0aHNwYS5hYy51ay8iPgoKICAgICAgICAgICAgICAgIEJhdGggU3BhIFVuaXZlcnNpdHkgPGkgY2xhc3M9ImZhcyBmYS1leHRlcm5hbC1saW5rLWFsdCBtYXItbC0xIj48L2k+Cgo8L2E+CgogICAgICAgICAgICA8YSBjbGFzcz0iZXh0ZXJuYWwtZm9vdGVyX19saW5rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iL3RoZW1lcy8yMTk4L3ByaXZhY3lfcG9saWN5Ij4KICAgICAgICAgICAgICBQcml2YWN5IFBvbGljeQo8L2E+CiAgICAgICAgICAgICAgPGEgY2xhc3M9J2V4dGVybmFsLWZvb3Rlcl9fbGluaycgZGF0YS1jYz0iYy1zZXR0aW5ncyIgYXJpYS1sYWJlbD0iVmlldyBjb29raWUgc2V0dGluZ3MiIHRhYmluZGV4PSIwIiByb2xlPSJidXR0b24iPgogICAgICAgICAgICAgICAgQ29va2llcwogICAgICAgICAgICAgIDwvYT4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZyb3cgZnJvdy0tZ3V0dGVycyBmcm93LS1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICAgIDxhIGNsYXNzPSJleHRlcm5hbC1mb290ZXJfX2xpbmsiIGhyZWY9Imh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9iYXRoLnNwYS51bml2ZXJzaXR5IiB0YXJnZXQ9Il9ibGFuayIgdGl0bGU9IkJhdGggU3BhIFVuaXZlcnNpdHkmIzM5O3MgRmFjZWJvb2sgcGFnZS4iIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDVweDsiPjxpIGNsYXNzPSJmYWIgZmEtZmFjZWJvb2sgZmEtbGciIHN0eWxlPSJjb2xvcjogIzNCNTk5OCI+PC9pPjwvYT4KICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8YSBjbGFzcz0iZXh0ZXJuYWwtZm9vdGVyX19saW5rIiBocmVmPSJodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2JhdGhzcGF1bmkiIHRhcmdldD0iX2JsYW5rIiB0aXRsZT0iQmF0aCBTcGEgVW5pdmVyc2l0eSYjMzk7cyBJbnN0YWdyYW0gcGFnZS4iIHN0eWxlPSJtYXJnaW4tcmlnaHQ6IDVweDsiPjxpbWcgYWx0PSJCYXRoIFNwYSBVbml2ZXJzaXR5IGluc3RhZ3JhbSIgc3JjPSJodHRwczovL2QybjVpZWQ5NG1hem9wLmNsb3VkZnJvbnQubmV0L3BhY2tzL3N0YXRpYy9sb2dvcy9leHRlcm5hbC9pbnN0YWdyYW1fbG9nby01MTM5ZDU2ZmYwOTI3Y2RkZDExZi5zdmciIC8+PC9hPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgPC9kaXY+CgogICAgICAgIDxkaXY+CgogICAgICAgICAgPGEgY2xhc3M9ImV4dGVybmFsLWZvb3Rlcl9fbGluayIgdGFyZ2V0PSJfYmxhbmsiIGhyZWY9Imh0dHBzOi8vd3d3LnBpbnBvaW50aHEuY29tIj5Qb3dlcmVkIGJ5IFBpbnBvaW50PC9hPgoKICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgoKICAgIDwvZGl2PgoKICA8L2Rpdj4KCiAgPC9kaXY+Cgo8L2Zvb3Rlcj4KCgogIAoKCgoKCgoKICAgIDxzY3JpcHQgbm9uY2U9IjVmMjI2MTFmZTVmMWM5MDFjNDMzODkyY2U0NTA2MTY0Ij4KICAvLyBFbnN1cmVzIHRoYXQgdGhlIHN0dWZmIGluIHRoZSBpZnJhbWUgZG9lc24ndCB0YWtlIGZvY3VzCiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICB2YXIgZnJhbWVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoImlmcmFtZSIpOwogICAgZm9yIChpID0gMDsgaSA8IGZyYW1lcy5sZW5ndGg7ICsraSkgewogICAgICBmcmFtZXNbaV0uc2V0QXR0cmlidXRlKCJ0YWJpbmRleCIsICItMSIpOwogICAgfQogIH0sIDEwMDApCjwvc2NyaXB0PgoKCjwvYm9keT4K
  recorded_at: Thu, 08 Aug 2024 10:46:26 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 08 Aug 2024 10:46:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"888e09b1954d872f7c4cdc8ca1b63bda"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-cc90436019331d490477d41a38f2a83e'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB7; path=/
      - _pinpoint_session=TD0M2brsK3cfFAdq%2Fab5QuNOFURlJNRWn0z96E%2B42%2B1z%2BivdDU8arqD6zGdMCQjgl%2FKn2EueRLjLrjmnaHSVawcvhD9RoLvS4SFJD9ClybQjhTEW%2FYxWw61DoDFoUG0F0PRSczao1O5VSAc2ES7oV7l08y4usuBE5UjaxAEGrTPfw11Y9FVd0xOpP93jyiatylXru6PrujDas%2FV4dkMEcx319vG0x4nECZEV88rXHNzwoc3wPRLC7lHPpE%2FTb4oSNouBdxZYVmAx67YQjpxDreEyXGZydWVG5Ruk4o8Dt6ZKUTE%3D--XY0ago5dHMRO1LDG--skAkNRMKFuPVVkQE3AXFMQ%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 15 Aug 2024 10:46:27 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=5de8865b-8121-4238-91da-9dc80e850334; path=/; expires=Thu, 08 Aug
        2024 14:46:27 GMT; secure
      - ahoy_visitor=8a27a4b3-d3cb-4cdf-9f53-c52c8b29365f; path=/; expires=Sat, 08
        Aug 2026 10:46:27 GMT; secure
      X-Request-Id:
      - 733750ac-5b7a-434a-84cf-d659450ae3c0
      X-Runtime:
      - '0.200983'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:46:27 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.bathspa.ac.uk/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 08 Aug 2024 10:46:27 GMT
      Etag:
      - W/"1723113987932"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '16'
      Content-Length:
      - '615'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","properties":{"name":"Bath
        Spa University","identifier":{"permalink":"bath-spa-university-2","image_id":"v1488530438/cej4b9ng1amolmbwoqp0.png","uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","entity_def_id":"organization","value":"Bath
        Spa University"},"linkedin":{"value":"https://www.linkedin.com/company/bath-spa-university"},"short_description":"Bath
        Spa offers undergraduate and postgraduate study and research opportunities
        with a focus on creativity, culture and enterprise.","rank_org":487372,"website_url":"https://www.bathspa.ac.uk/"}}]}'
  recorded_at: Thu, 08 Aug 2024 10:46:27 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 08 Aug 2024 10:46:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"888e09b1954d872f7c4cdc8ca1b63bda"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-9d823476c19c1ee23f13bad4018564c6'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB3; path=/
      - _pinpoint_session=wKGNkhOh4ZAkSr7u5bRoA2CWD9fsUdAhZDbNr6g%2Fyj1dPY%2BPJSIF6TgbyUqDtn4YvlwlzT5ZBRnxZTjXt9WjScg7ThkY7%2F%2FLJWztLN1cGMtO2O%2FmBOnYbQbPh0pq6ecKdFUEiunPOZUaf65cA3zPjWi0E1VwPRiTaIc6et%2BvCXWyMsTM%2FEZgGN0X5T7kKmjWYXl9umnyNYUKxwwNWmsCqlillEwbrpp4cJfTXnkQfaRu9rhdlfjxoemtXqMwzDOr%2FeUP5bdGaqQPC3VAz%2BKHcdCQGZx%2Bn%2B0S%2Bq8sz2yiAGHgaeY%3D--X3CBIsdpzkyPUS4%2F--Mso7M9UiQbcEiAOHHJPpCw%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 15 Aug 2024 10:46:28 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=ed9626e1-433a-4c25-8aca-b5f78f477f2f; path=/; expires=Thu, 08 Aug
        2024 14:46:28 GMT; secure
      - ahoy_visitor=a6104087-61f6-4f1a-9b32-78d4ecea3589; path=/; expires=Sat, 08
        Aug 2026 10:46:28 GMT; secure
      X-Request-Id:
      - aa9686c4-0568-48d5-8216-403ca1a42df4
      X-Runtime:
      - '0.196391'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:46:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Bath%20%20%20Newton%20Park,?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:46:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1159'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 46f23df34f6cc4a628595245a7e0b256
      X-Msedge-Ref:
      - 'Ref A: D58FDF0BF73E44C683F18AB31A432001 Ref B: LON212050706051 Ref C: 2024-08-08T10:46:28Z|Ref
        SnR: 66b4a204d57b4df9821f528287a62197'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-j6n4c, mapsplatform-forwardgeocoder-service-69b95d964b-qz2dd
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '151'
      X-Azure-Ref:
      - 20240808T104628Z-17bfb58ffc6n5lv8ebsqpe2gzn00000002tg00000000kzta
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjM3MTY5NDIyODIzMDEwNSwtMi40NDY1ODM0MzExODQ1Mzk2LDUxLjM3OTQxOTY2MzM3MTQ2LC0yLjQzMDA4MzExNDY4MzM4MDNdLCJuYW1lIjoiTmV3dG9uIFBhcmssIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS4zNzU1NTY5NSwtMi40MzgzMzMyN119LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJFbmdsYW5kIiwiYWRtaW5EaXN0cmljdDIiOiJCYXRoIGFuZCBOb3J0aCBFYXN0IFNvbWVyc2V0IiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6Ik5ld3RvbiBQYXJrLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkxhbmRtYXJrQnVpbGRpbmciLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjM3NTU1Njk1LC0yLjQzODMzMzI3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiNDZmMjNkZjM0ZjZjYzRhNjI4NTk1MjQ1YTdlMGIyNTYifQ==
  recorded_at: Thu, 08 Aug 2024 10:46:28 GMT
recorded_with: VCR 6.2.0
