---
http_interactions:
- request:
    method: get
    uri: https://manual.recruitee.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - manual.recruitee.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Thu, 08 Aug 2024 10:47:30 GMT
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - F-m7GZjodFI833EDNNbD
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:47:31 GMT
- request:
    method: get
    uri: https://manual.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Thu, 08 Aug 2024 10:47:31 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F-m7GaQ-EYMc5RcG3-2h
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:47:31 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.manual.co/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 08 Aug 2024 10:47:32 GMT
      Etag:
      - W/"1723114052487"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '15'
      Content-Length:
      - '507'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"2484a563-d7fa-414f-b03b-a4f74d5cb7ab","properties":{"name":"Manual","identifier":{"permalink":"manual-b7ab","image_id":"mo8gygiupnhsrpeuqspp","uuid":"2484a563-d7fa-414f-b03b-a4f74d5cb7ab","entity_def_id":"organization","value":"Manual"},"linkedin":{"value":"https://www.linkedin.com/company/manualco"},"short_description":"Manual
        provides diagnostic tools and testing to help patients make health-related
        decisions.","rank_org":10481,"website_url":"https://www.manual.co"}}]}'
  recorded_at: Thu, 08 Aug 2024 10:47:32 GMT
- request:
    method: get
    uri: https://manual.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Thu, 08 Aug 2024 10:47:33 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F-m7Gfd-XfPZ5tEEVITD
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 08 Aug 2024 10:47:33 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:34 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 0bfed18cb9dff8d956fb0454d44ffa7f
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a246993f45cf91a389e88f2168c6|Ref A: 19543B7359734F819C7FD311809F183B
        Ref B: LON212050705023 Ref C: 2024-08-08T10:47:34Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-52qv7, mapsplatform-forwardgeocoder-service-69b95d964b-dxjkk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '76'
      X-Azure-Ref:
      - 20240808T104733Z-17cc7bff758ndnt8ydwv3sg9rg0000000mg0000000005q1x
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIwYmZlZDE4Y2I5ZGZmOGQ5NTZmYjA0NTRkNDRmZmE3ZiJ9
  recorded_at: Thu, 08 Aug 2024 10:47:34 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:34 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - bda672193e0f7bfacc6a640530037b30
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2466504477db3591aa901827fbd|Ref A: 8A6F33D20DBF4A02981645D00E6BA6BA
        Ref B: LON212050705007 Ref C: 2024-08-08T10:47:34Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-898gc, mapsplatform-forwardgeocoder-service-69b95d964b-qz2dd
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '199'
      X-Azure-Ref:
      - 20240808T104734Z-154b59dbc6d4q49gw51h741rn000000000b000000000k8nu
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJiZGE2NzIxOTNlMGY3YmZhY2M2YTY0MDUzMDAzN2IzMCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:34 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:34 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - e764557302ffd48ced80ef6a5262ace6
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a246d3274358a0b0d368115d6ba6|Ref A: 32E223EDCD5B4D56883698625D909C7E
        Ref B: DB3EDGE2709 Ref C: 2024-08-08T10:47:34Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-r9bjs, mapsplatform-forwardgeocoder-service-69b95d964b-vkrf2
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '54'
      X-Azure-Ref:
      - 20240808T104734Z-154b59dbc6d6486ws86rke3qbw000000018g00000001z3r9
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJlNzY0NTU3MzAyZmZkNDhjZWQ4MGVmNmE1MjYyYWNlNiJ9
  recorded_at: Thu, 08 Aug 2024 10:47:34 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:34 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 22ca1ac1d640f9bf62e5fe2767cd4816
      X-Msedge-Ref:
      - 'Ref A: FEB9A6A0B79D4AD685F070185E0355BA Ref B: DB3EDGE1711 Ref C: 2024-08-08T10:47:34Z|Ref
        SnR: 66b4a246f45440899ff7bfaf3ef72e2e'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-7f9fp, mapsplatform-forwardgeocoder-service-69b95d964b-dps2q
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '68'
      X-Azure-Ref:
      - 20240808T104734Z-17cc7bff758xz98rzgr6nedeqn0000000pgg00000000cfww
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiMjJjYTFhYzFkNjQwZjliZjYyZTVmZTI3NjdjZDQ4MTYifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:34 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:34 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 5e3d3d8e9cc3bea9be1862f68094a83e
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2463adf4ba5befa5e8a7743225d|Ref A: 16BB3D07E5F44F0B8219FE12BBCA9753
        Ref B: LON212050703003 Ref C: 2024-08-08T10:47:34Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-thw82, mapsplatform-forwardgeocoder-service-69b95d964b-4d2kx
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '66'
      X-Azure-Ref:
      - 20240808T104734Z-154b59dbc6dsrvwcv9k581s48w0000000bug00000001597b
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1ZTNkM2Q4ZTljYzNiZWE5YmUxODYyZjY4MDk0YTgzZSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:34 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 9ed5b506467d2f0bed3e7c320196483a
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2475bdb4818aacdf14f3f58552c|Ref A: 645358F7982F49D1BE623264E43207DE
        Ref B: DB3EDGE2115 Ref C: 2024-08-08T10:47:35Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-898gc, mapsplatform-forwardgeocoder-service-69b95d964b-8njvk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '39'
      X-Azure-Ref:
      - 20240808T104734Z-154b59dbc6d4q49gw51h741rn000000000b000000000k8rc
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI5ZWQ1YjUwNjQ2N2QyZjBiZWQzZTdjMzIwMTk2NDgzYSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 4a7cff19973b220f51c33da1bcafdecd
      X-Msedge-Ref:
      - 'Ref A: DD8EFF7608BE41A39190EF79C804EAC5 Ref B: DB3EDGE2006 Ref C: 2024-08-08T10:47:35Z|Ref
        SnR: 66b4a2478c9d4b88875e00a55b7540b7'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-7f9fp, mapsplatform-forwardgeocoder-service-69b95d964b-nxwhw
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '41'
      X-Azure-Ref:
      - 20240808T104735Z-154b59dbc6dtrx6z6hyzfwtyaw00000000gg00000000r3z2
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI0YTdjZmYxOTk3M2IyMjBmNTFjMzNkYTFiY2FmZGVjZCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - f5d035405e82cb91f030f2185b017632
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2476777409cbdda09afa8dbb3aa|Ref A: ECC986ADCDAD497C97191DDA0D37AD56
        Ref B: DB3EDGE3111 Ref C: 2024-08-08T10:47:35Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-m25wn, mapsplatform-forwardgeocoder-service-69b95d964b-7hbws
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '34'
      X-Azure-Ref:
      - 20240808T104735Z-17cc7bff7584sl6j3ghucq1kzw0000000pag000000002y2h
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiZjVkMDM1NDA1ZTgyY2I5MWYwMzBmMjE4NWIwMTc2MzIifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - c4812af10b7af16b884b83b7b77ac501
      X-Msedge-Ref:
      - 'Ref A: 63589E5482D94F3C8CF2EBC26A4E46CE Ref B: DB3EDGE3017 Ref C: 2024-08-08T10:47:35Z|Ref
        SnR: 66b4a247dd4d4f2c9e8c6ec3e9d4fa54'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-j6n4c, mapsplatform-forwardgeocoder-service-69b95d964b-hcff6
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '37'
      X-Azure-Ref:
      - 20240808T104735Z-154b59dbc6dlgzszr95apsfqkw0000000bz000000001dm4m
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJjNDgxMmFmMTBiN2FmMTZiODg0YjgzYjdiNzdhYzUwMSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 6a257e6792ae6870693d8b73a9eca782
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2470fb04d3d9a6f0b0d6762b98d|Ref A: B64A612A0D3D4206B35EEAC5335965F6
        Ref B: DB3EDGE2007 Ref C: 2024-08-08T10:47:35Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-rqvqk, mapsplatform-forwardgeocoder-service-69b95d964b-xqmb8
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '38'
      X-Azure-Ref:
      - 20240808T104735Z-154b59dbc6dwlvkrn6be436zes0000000bu0000000015y8d
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI2YTI1N2U2NzkyYWU2ODcwNjkzZDhiNzNhOWVjYTc4MiJ9
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:35 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - a301b9516bf741cfd19844a72b165ce8
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a247a1b943779820a6ef43da2282|Ref A: 6D3EE27EB0C746A9937BB69B34546E8B
        Ref B: DB3EDGE2120 Ref C: 2024-08-08T10:47:35Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-jtpwf, mapsplatform-forwardgeocoder-service-69b95d964b-dps2q
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '43'
      X-Azure-Ref:
      - 20240808T104735Z-154b59dbc6d9w795z6ern45hp8000000009000000000ptfz
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJhMzAxYjk1MTZiZjc0MWNmZDE5ODQ0YTcyYjE2NWNlOCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:35 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 8739ff29144f219baee85dcadc94ce40
      X-Msedge-Ref:
      - 'Ref A: 8C3ED190DB6041B9864099048C9D430F Ref B: DB3EDGE2518 Ref C: 2024-08-08T10:47:37Z|Ref
        SnR: 66b4a249925942fea0ab6f93c8543927'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-md82h, mapsplatform-forwardgeocoder-service-69b95d964b-dxjkk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '37'
      X-Azure-Ref:
      - 20240808T104737Z-17cc7bff7589c6s21vbfxz6zc000000000vg00000000bt7y
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiODczOWZmMjkxNDRmMjE5YmFlZTg1ZGNhZGM5NGNlNDAifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:37 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 608cef852543a510429eb2037010a6a0
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a2499b9d48f4bca50762c254c490|Ref A: 8DF00B72B0E440C3A80D3560D7855D82
        Ref B: DB3EDGE2513 Ref C: 2024-08-08T10:47:37Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-md82h, mapsplatform-forwardgeocoder-service-69b95d964b-dxjkk
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '41'
      X-Azure-Ref:
      - 20240808T104737Z-154b59dbc6d8p8s8yn4b9wysr00000000bvg00000000subt
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI2MDhjZWY4NTI1NDNhNTEwNDI5ZWIyMDM3MDEwYTZhMCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:37 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 5f552035a1d778b46a581cc22bfaee3c
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a249a3dc430d8188a63832f1cd96|Ref A: EBC458527368484491602051598E5DF4
        Ref B: DB3EDGE2722 Ref C: 2024-08-08T10:47:37Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-qrh4z, mapsplatform-forwardgeocoder-service-69b95d964b-9fd79
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '114'
      X-Azure-Ref:
      - 20240808T104737Z-154b59dbc6dzjs5cxeaq4qx2e80000000abg0000000104yh
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1ZjU1MjAzNWExZDc3OGI0NmE1ODFjYzIyYmZhZWUzYyJ9
  recorded_at: Thu, 08 Aug 2024 10:47:37 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 0ba7ff5d785e25196b742f4200057b6c
      X-Msedge-Ref:
      - 'Ref A: 15B23D5FA54E45E49CB8D09DF207F3B7 Ref B: DB3EDGE3116 Ref C: 2024-08-08T10:47:37Z|Ref
        SnR: 66b4a249b94c4c93a646b65089b35151'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-jtpwf, mapsplatform-forwardgeocoder-service-69b95d964b-8575g
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '46'
      X-Azure-Ref:
      - 20240808T104737Z-17cc7bff758xz98rzgr6nedeqn0000000pm0000000005fnn
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIwYmE3ZmY1ZDc4NWUyNTE5NmI3NDJmNDIwMDA1N2I2YyJ9
  recorded_at: Thu, 08 Aug 2024 10:47:37 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:37 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 46e0163409cf8bcc4322c3c31c62bffb
      X-Msedge-Ref:
      - 'Ref A: DB9250C7ABE14318BA1E5F80384F3CD9 Ref B: LON212050719045 Ref C: 2024-08-08T10:47:37Z|Ref
        SnR: 66b4a24950d54d33bfd5eed56955aa43'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-zzdsc, mapsplatform-forwardgeocoder-service-69b95d964b-8575g
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '55'
      X-Azure-Ref:
      - 20240808T104737Z-17cc7bff758ggccducvhsb6rbn00000007wg000000002vmb
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiNDZlMDE2MzQwOWNmOGJjYzQzMjJjM2MzMWM2MmJmZmIifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:37 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:38 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - ef38ea99dee805b9302fbf2bb6fa62d0
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24a714941d7a296b6c6634e16e2|Ref A: CA2966D5C7C24DF386C641251B399C63
        Ref B: DB3EDGE2213 Ref C: 2024-08-08T10:47:38Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-hthld, mapsplatform-forwardgeocoder-service-69b95d964b-fns9n
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '45'
      X-Azure-Ref:
      - 20240808T104738Z-154b59dbc6db9q2z88dg8r4ens00000000dg00000000aw03
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJlZjM4ZWE5OWRlZTgwNWI5MzAyZmJmMmJiNmZhNjJkMCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:38 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:38 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 7aa9841b45b7fd5eefdaf9bfe676e7d9
      X-Msedge-Ref:
      - 'Ref A: 4D56A6B5D6D84231A2BEFB6410543C57 Ref B: LON212050702031 Ref C: 2024-08-08T10:47:38Z|Ref
        SnR: 66b4a24aad2b425ca8468fab2b421515'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-96fdk, mapsplatform-forwardgeocoder-service-69b95d964b-hcff6
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '231'
      X-Azure-Ref:
      - 20240808T104738Z-154b59dbc6d67pxs3tnd4b6hen0000000c10000000008fba
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI3YWE5ODQxYjQ1YjdmZDVlZWZkYWY5YmZlNjc2ZTdkOSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:38 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:38 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - ed30ab9f1c8a1cbddf5cd772982dba6b
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24ad23743019fed27f669a6f217|Ref A: 6DC28AD2088A45769257447367C27A0D
        Ref B: DB3EDGE2617 Ref C: 2024-08-08T10:47:38Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-9txr5, mapsplatform-forwardgeocoder-service-69b95d964b-cxqmh
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '106'
      X-Azure-Ref:
      - 20240808T104738Z-154b59dbc6d5bjzwe4nfratdm800000004f00000000164bn
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJlZDMwYWI5ZjFjOGExY2JkZGY1Y2Q3NzI5ODJkYmE2YiJ9
  recorded_at: Thu, 08 Aug 2024 10:47:38 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - f6ad2ca616c93a3a5d9dc5edf033f5da
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24b7e4a4e75a4577ffb7895600d|Ref A: 1758A6A1592947C6B0DB7BBADDBF3F78
        Ref B: DB3EDGE2909 Ref C: 2024-08-08T10:47:39Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-zl2zf, mapsplatform-forwardgeocoder-service-69b95d964b-c4c7t
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '257'
      X-Azure-Ref:
      - 20240808T104738Z-17cc7bff75875qkfy0rtbptufw0000000rwg00000000dfm3
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiZjZhZDJjYTYxNmM5M2EzYTVkOWRjNWVkZjAzM2Y1ZGEifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - d791fca8a7b1d7a4425a1d5c6d294309
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24b05b0404c806f4e30b66e370b|Ref A: F06A0BA02F524EE5B82CCCC6E585FA22
        Ref B: DB3EDGE2721 Ref C: 2024-08-08T10:47:39Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-zl2zf, mapsplatform-forwardgeocoder-service-69b95d964b-c4c7t
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '38'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6d8p8s8yn4b9wysr00000000bt000000001q87s
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJkNzkxZmNhOGE3YjFkN2E0NDI1YTFkNWM2ZDI5NDMwOSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 58b4b435a05bc104d5a1136440197b33
      X-Msedge-Ref:
      - 'Ref A: 9BF498E5935D4F0BAD2FDA433737BA5F Ref B: LON212050706023 Ref C: 2024-08-08T10:47:39Z|Ref
        SnR: 66b4a24bf83d4d12845ec083aaf28e22'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-zm9fv, mapsplatform-forwardgeocoder-service-69b95d964b-9fd79
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '57'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6d6dc92w4xadqwbb40000000akg00000000y137
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1OGI0YjQzNWEwNWJjMTA0ZDVhMTEzNjQ0MDE5N2IzMyJ9
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 3d143cf1a5631abdbdd5365e47270fb0
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24b261a49eeb5f86f2c5d5d441a|Ref A: 3550B2699FD94C07B8FFDABA3BCB3530
        Ref B: DB3EDGE2614 Ref C: 2024-08-08T10:47:39Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-2mhxv, mapsplatform-forwardgeocoder-service-69b95d964b-7hbws
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '39'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6db9q2z88dg8r4ens000000009g00000000a04r
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIzZDE0M2NmMWE1NjMxYWJkYmRkNTM2NWU0NzI3MGZiMCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 5c7f27f2d216880c57618e2710ada551
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24b4af34681ad651e1a1b761d49|Ref A: EE1B4A3F84E54FC3B248948EC2AF9F40
        Ref B: LON212050706035 Ref C: 2024-08-08T10:47:39Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-rqvqk, mapsplatform-forwardgeocoder-service-69b95d964b-qz2dd
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '56'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6dftqbp13vr66ab0g00000004dg00000001hbr7
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiNWM3ZjI3ZjJkMjE2ODgwYzU3NjE4ZTI3MTBhZGE1NTEifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 84f5b7fd091ce161b4babb6bd0d6f978
      X-Msedge-Ref:
      - 'Ref A: 78B6F2E650614B2EBB2C3224F47D321F Ref B: LON212050705023 Ref C: 2024-08-08T10:47:39Z|Ref
        SnR: 66b4a24bc91e462a8c9960d3e1d5e9f0'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-rqvqk, mapsplatform-forwardgeocoder-service-69b95d964b-m7hqd
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240808T104739Z-17cc7bff7587r57qzqk162qpd400000007rg000000001z7p
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI4NGY1YjdmZDA5MWNlMTYxYjRiYWJiNmJkMGQ2Zjk3OCJ9
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:39 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - cad7a339d8325cbf1b36c64ec546a971
      X-Msedge-Ref:
      - 'Ref SnR: 66b4a24bd8d34d90b11ca84ff1244fac|Ref A: F684D51FAFBB481483EB8284211987F8
        Ref B: DB3EDGE2805 Ref C: 2024-08-08T10:47:39Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-thw82, mapsplatform-forwardgeocoder-service-69b95d964b-dps2q
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '36'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6d5skwk00mxtqn3pn000000049g000000016z3f
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBhbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJjYWQ3YTMzOWQ4MzI1Y2JmMWIzNmM2NGVjNTQ2YTk3MSJ9
  recorded_at: Thu, 08 Aug 2024 10:47:39 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:40 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 53d7109d7f1c4b1aec923b5fcaf2e7f3
      X-Msedge-Ref:
      - 'Ref A: 0A7E1C3E429449CA8EEC9A1BB88005D2 Ref B: DB3EDGE3113 Ref C: 2024-08-08T10:47:40Z|Ref
        SnR: 66b4a24c25f84b7f8982da614823de20'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-8fcdk, mapsplatform-forwardgeocoder-service-69b95d964b-vkrf2
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '40'
      X-Azure-Ref:
      - 20240808T104739Z-154b59dbc6d6486ws86rke3qbw00000001a0000000013sfd
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNzM4MSwtMC4xMjYzNjkzXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1M2Q3MTA5ZDdmMWM0YjFhZWM5MjNiNWZjYWYyZTdmMyJ9
  recorded_at: Thu, 08 Aug 2024 10:47:40 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 08 Aug 2024 10:47:40 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Alt-Svc:
      - h3=":443"; ma=86400
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 85f850a6b9f8b201e0834fa35e6dcb83
      X-Msedge-Ref:
      - 'Ref A: 7BDDB18C85F345CD868445423302C264 Ref B: LON212050701045 Ref C: 2024-08-08T10:47:40Z|Ref
        SnR: 66b4a24cfa4d4d30b6ff89585f88800d'
      X-Bm-Srv:
      - mapsplatform-frontend-5756bf4655-jjkpl, mapsplatform-forwardgeocoder-service-69b95d964b-xqmb8
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '58'
      X-Azure-Ref:
      - 20240808T104740Z-17cc7bff7587r57qzqk162qpd400000007n0000000005twn
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiODVmODUwYTZiOWY4YjIwMWUwODM0ZmEzNWU2ZGNiODMifQ==
  recorded_at: Thu, 08 Aug 2024 10:47:40 GMT
recorded_with: VCR 6.2.0
