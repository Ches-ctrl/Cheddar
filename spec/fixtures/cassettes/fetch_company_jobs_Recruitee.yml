---
http_interactions:
- request:
    method: get
    uri: https://manual.recruitee.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - manual.recruitee.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - text/html; charset=utf-8
      Date:
      - Mon, 05 Aug 2024 15:59:22 GMT
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - F-jgYI7Dda5VDVwG8g_C
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 05 Aug 2024 15:59:22 GMT
- request:
    method: get
    uri: https://manual.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 05 Aug 2024 15:59:22 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F-jgYJrnaGnHKXIGsTkC
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 05 Aug 2024 15:59:23 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.manual.co/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Mon, 05 Aug 2024 15:59:24 GMT
      Etag:
      - W/"1722873564590"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '13'
      Content-Length:
      - '506'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"2484a563-d7fa-414f-b03b-a4f74d5cb7ab","properties":{"name":"Manual","identifier":{"permalink":"manual-b7ab","image_id":"mo8gygiupnhsrpeuqspp","uuid":"2484a563-d7fa-414f-b03b-a4f74d5cb7ab","entity_def_id":"organization","value":"Manual"},"linkedin":{"value":"https://www.linkedin.com/company/manualco"},"short_description":"Manual
        provides diagnostic tools and testing to help patients make health-related
        decisions.","rank_org":9564,"website_url":"https://www.manual.co"}}]}'
  recorded_at: Mon, 05 Aug 2024 15:59:24 GMT
- request:
    method: get
    uri: https://manual.recruitee.com/api/offers/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Type:
      - application/json; charset=utf-8
      Date:
      - Mon, 05 Aug 2024 15:59:24 GMT
      Server:
      - Cowboy
      Strict-Transport-Security:
      - max-age=31536000
      Vary:
      - accept-encoding
      X-Request-Id:
      - F-jgYQUeKCn1RDUBYXjE
      Via:
      - 1.1 google
      Alt-Svc:
      - h3=":443"; ma=2592000,h3-29=":443"; ma=2592000
      Transfer-Encoding:
      - chunked
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 05 Aug 2024 15:59:25 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:25 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - fcb0cc261d19a93bdd9f29153162a4dd
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6dd13254b2d8d53b7a15ebede4e|Ref A: F0A18A82ED2B4427877F9C7E93932E9B
        Ref B: DB3EDGE2716 Ref C: 2024-08-05T15:59:25Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-xmsbp, mapsplatform-forwardgeocoder-service-5c6dd87786-xbvzf
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '72'
      X-Azure-Ref:
      - 20240805T155925Z-17cc7bff758v52th1wqut5uz4000000003t0000000004mep
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJmY2IwY2MyNjFkMTlhOTNiZGQ5ZjI5MTUzMTYyYTRkZCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:25 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:25 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - a81a19724102e14825c8fef7ad695c38
      X-Msedge-Ref:
      - 'Ref A: 9C6D8CBD4EF040B9BC1536B680CEBFA9 Ref B: DB3EDGE3112 Ref C: 2024-08-05T15:59:25Z|Ref
        SnR: 66b0f6dd2082423bb058f562a44e1ea9'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-mqt5d, mapsplatform-forwardgeocoder-service-5c6dd87786-xvn96
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '72'
      X-Azure-Ref:
      - 20240805T155925Z-17cc7bff758ggccducvhsb6rbn00000003n0000000008865
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJhODFhMTk3MjQxMDJlMTQ4MjVjOGZlZjdhZDY5NWMzOCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:25 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:25 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - d021e9be98b2725450ec698a6c05cfe5
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6dd35854fb6b3328ebc39c7cce4|Ref A: 7F3846F93C754DED9D80F94595FAACA9
        Ref B: DB3EDGE2720 Ref C: 2024-08-05T15:59:25Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-9b7rv, mapsplatform-forwardgeocoder-service-5c6dd87786-xvn96
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '59'
      X-Azure-Ref:
      - 20240805T155925Z-17cc7bff758xpnqt14r1qfxr5n0000000heg0000000084rw
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiJkMDIxZTliZTk4YjI3MjU0NTBlYzY5OGE2YzA1Y2ZlNSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:25 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 0bae68f0b5379c1842b4fc14bc492cb1
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6dd34df4c03bfbc40586ae572e7|Ref A: E4D11C84373047D0B1BB367388EB6582
        Ref B: DB3EDGE1815 Ref C: 2024-08-05T15:59:25Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-zw9j5, mapsplatform-forwardgeocoder-service-5c6dd87786-n6d87
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '185'
      X-Azure-Ref:
      - 20240805T155925Z-17cc7bff758xx2snssy33kwq4g00000003sg00000000bchb
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiMGJhZTY4ZjBiNTM3OWMxODQyYjRmYzE0YmM0OTJjYjEifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 20adf3dab2882533ec06595c55812f6f
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6deca6a449c969bf92e74fc1b0d|Ref A: FE6213B6F8754D2CB0E9B805EE2BC2AE
        Ref B: DB3EDGE3208 Ref C: 2024-08-05T15:59:26Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-v8sq7, mapsplatform-forwardgeocoder-service-5c6dd87786-86h4n
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '69'
      X-Azure-Ref:
      - 20240805T155926Z-154b59dbc6d4lbkr1guc1w7bzw00000004ag00000001dsaz
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIyMGFkZjNkYWIyODgyNTMzZWMwNjU5NWM1NTgxMmY2ZiJ9
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 7be2d05c8996bec29223e3b9c53c9ce6
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6dee9ca482ca6c87dbfbb91a155|Ref A: A5153841FF034EE58E84BBDA2A370D91
        Ref B: DB3EDGE1716 Ref C: 2024-08-05T15:59:26Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-8h5nb, mapsplatform-forwardgeocoder-service-5c6dd87786-qbqtt
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '68'
      X-Azure-Ref:
      - 20240805T155926Z-154b59dbc6dtrx6zse0hkfpan800000001wg00000001hx97
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI3YmUyZDA1Yzg5OTZiZWMyOTIyM2UzYjljNTNjOWNlNiJ9
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 47b2fd38a27666ec87e54256df2c2f45
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6de1ed34a2a9a1861ac857dcd1b|Ref A: FE30687471DA4573B1038DA28CA7FC86
        Ref B: DB3EDGE1819 Ref C: 2024-08-05T15:59:26Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-2qfpr, mapsplatform-forwardgeocoder-service-5c6dd87786-n6d87
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '95'
      X-Azure-Ref:
      - 20240805T155926Z-154b59dbc6dhhzb9s34n8c04z400000009mg00000001100m
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI0N2IyZmQzOGEyNzY2NmVjODdlNTQyNTZkZjJjMmY0NSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:26 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 03fdad6a8763c72ff35343f720bf1717
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6de7c8d4bf69913268f2d242cf9|Ref A: 1990417DD76D4C7181B1696A47F29958
        Ref B: DB3EDGE2620 Ref C: 2024-08-05T15:59:26Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-v8sq7, mapsplatform-forwardgeocoder-service-5c6dd87786-qbqtt
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '68'
      X-Azure-Ref:
      - 20240805T155926Z-17cc7bff758z4smxw0rt8x0ubw0000000510000000006van
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiMDNmZGFkNmE4NzYzYzcyZmYzNTM0M2Y3MjBiZjE3MTcifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 51fb3a1ab78c6a783c4d512e62ddc21c
      X-Msedge-Ref:
      - 'Ref A: E7ABA423C6684CAE82FAFB0AF0947C82 Ref B: DB3EDGE3011 Ref C: 2024-08-05T15:59:26Z|Ref
        SnR: 66b0f6deed1d4cc686f206e0cc46d77b'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-vdpbh, mapsplatform-forwardgeocoder-service-5c6dd87786-xbvzf
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '164'
      X-Azure-Ref:
      - 20240805T155926Z-154b59dbc6d6dc92w4xadqwbb400000006ag00000001qc69
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1MWZiM2ExYWI3OGM2YTc4M2M0ZDUxMmU2MmRkYzIxYyJ9
  recorded_at: Mon, 05 Aug 2024 15:59:26 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 164da3f955c263c79afdd9e1b4241f2f
      X-Msedge-Ref:
      - 'Ref A: 995AF83A3E5D479EB08365067DEFFE23 Ref B: DB3EDGE3209 Ref C: 2024-08-05T15:59:27Z|Ref
        SnR: 66b0f6dfed69467faa745108c0b757f9'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-mqt5d, mapsplatform-forwardgeocoder-service-5c6dd87786-xvn96
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6dftqbp13vr66ab0g00000000fg00000000wnqn
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIxNjRkYTNmOTU1YzI2M2M3OWFmZGQ5ZTFiNDI0MWYyZiJ9
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 2f109470f032b8941ee49125475c82a5
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6dfb08a4e639c891df8ea1381da|Ref A: FC2FBB4C54214745A87986913A80ED26
        Ref B: DB3EDGE2821 Ref C: 2024-08-05T15:59:27Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-vschf, mapsplatform-forwardgeocoder-service-5c6dd87786-bk4cg
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '63'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6dsvkxvrm4qx06vtn00000000gg00000000nz7a
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIyZjEwOTQ3MGYwMzJiODk0MWVlNDkxMjU0NzVjODJhNSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - c720eb63afa68ade0c1e0e878be6478e
      X-Msedge-Ref:
      - 'Ref A: 28C2B776DD62419993108D0754918989 Ref B: DB3EDGE2821 Ref C: 2024-08-05T15:59:27Z|Ref
        SnR: 66b0f6dff2424eea814ec66933f4a442'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-lxrh6, mapsplatform-forwardgeocoder-service-5c6dd87786-bk4cg
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '61'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6d6486ww0evwm2rm000000007ng00000001v6mm
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiYzcyMGViNjNhZmE2OGFkZTBjMWUwZTg3OGJlNjQ3OGUifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 7bb60592199503b540540fbf48400331
      X-Msedge-Ref:
      - 'Ref A: 6D48C9CE0FDC44C2BECC3A6DCEC7DC51 Ref B: DB3EDGE1911 Ref C: 2024-08-05T15:59:27Z|Ref
        SnR: 66b0f6df0a104a789cc8548209ebb4d5'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-flwzb, mapsplatform-forwardgeocoder-service-5c6dd87786-c2qmm
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '127'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6d4lbkr1guc1w7bzw00000004fg00000000mcgg
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI3YmI2MDU5MjE5OTUwM2I1NDA1NDBmYmY0ODQwMDMzMSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 5f52186dad5ca5e0f8997e06ec4c97b8
      X-Msedge-Ref:
      - 'Ref A: 20A0DDE5F0264C4CB0736431205343D0 Ref B: DB3EDGE2019 Ref C: 2024-08-05T15:59:27Z|Ref
        SnR: 66b0f6df70754481a6478ccbfad4aef8'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-m46mf, mapsplatform-forwardgeocoder-service-5c6dd87786-86h4n
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '71'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6dwlvkrn6be436zes00000007s000000000z8bt
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI1ZjUyMTg2ZGFkNWNhNWUwZjg5OTdlMDZlYzRjOTdiOCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:27 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 1d3c74d16fccb1c6a90ba17973172dba
      X-Msedge-Ref:
      - 'Ref A: D406E1428AD643E4859188C3DB57906A Ref B: DB3EDGE3209 Ref C: 2024-08-05T15:59:27Z|Ref
        SnR: 66b0f6df580a48c49aea1c105be6fa00'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-hv6rf, mapsplatform-forwardgeocoder-service-5c6dd87786-xvn96
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '63'
      X-Azure-Ref:
      - 20240805T155927Z-154b59dbc6dbfz5wnyvgxvrk1g00000007sg00000000757w
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIxZDNjNzRkMTZmY2NiMWM2YTkwYmExNzk3MzE3MmRiYSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:27 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - cae774cf3134a2646003daf51de8a205
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6df1db84478bfa33c22e3a543d7|Ref A: DDE690C76CDC4E3DAE50E363EFDC4693
        Ref B: DB3EDGE1815 Ref C: 2024-08-05T15:59:27Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-4f5vm, mapsplatform-forwardgeocoder-service-5c6dd87786-n6d87
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '68'
      X-Azure-Ref:
      - 20240805T155927Z-17cc7bff75852896vw13x1p8f400000000bg000000001gkx
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiY2FlNzc0Y2YzMTM0YTI2NDYwMDNkYWY1MWRlOGEyMDUifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 7696e277858a96e8f3397cd1c4f42995
      X-Msedge-Ref:
      - 'Ref A: A02CA06854B64D95A0FE7BEC2CF42DCC Ref B: DB3EDGE2909 Ref C: 2024-08-05T15:59:28Z|Ref
        SnR: 66b0f6e0365a463da9541119324eb2ae'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-bln62, mapsplatform-forwardgeocoder-service-5c6dd87786-b2g58
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '70'
      X-Azure-Ref:
      - 20240805T155928Z-17cc7bff758z2n46b5dea0e0k000000005100000000015fm
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI3Njk2ZTI3Nzg1OGE5NmU4ZjMzOTdjZDFjNGY0Mjk5NSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 135b414f5a8a424555a2138d547a2186
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e06a034c5fa4027f87f22abb73|Ref A: 24FA83A4FEEB46B98F31291A9BD3035F
        Ref B: DB3EDGE1718 Ref C: 2024-08-05T15:59:28Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-m9rrs, mapsplatform-forwardgeocoder-service-5c6dd87786-kgttl
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '66'
      X-Azure-Ref:
      - 20240805T155928Z-154b59dbc6d5bjzwe4nfratdm800000000e000000000rc26
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIxMzViNDE0ZjVhOGE0MjQ1NTVhMjEzOGQ1NDdhMjE4NiJ9
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 65440ed76d44aa8a809629e0cb9cc7a0
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e0b5e841929ed5ad52ebb57a11|Ref A: 9DFABD34FC334642874C4DC4B8AAB767
        Ref B: DB3EDGE2509 Ref C: 2024-08-05T15:59:28Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-xmsbp, mapsplatform-forwardgeocoder-service-5c6dd87786-6j8x7
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155928Z-154b59dbc6dwlvkrn6be436zes00000007p000000001g43b
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI2NTQ0MGVkNzZkNDRhYThhODA5NjI5ZTBjYjljYzdhMCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 3668804ec2cb8256e08ab06465c9c7fa
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e0cec94765929ae64ba10836e8|Ref A: FE1B0E04FE6A4B4EBAF84681B19AB86A
        Ref B: DB3EDGE2714 Ref C: 2024-08-05T15:59:28Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-hv6rf, mapsplatform-forwardgeocoder-service-5c6dd87786-9dxd5
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155928Z-154b59dbc6d6dc92w4xadqwbb400000006bg00000001ke6k
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiMzY2ODgwNGVjMmNiODI1NmUwOGFiMDY0NjVjOWM3ZmEifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 893e1c83f22e716c2da550e454c643d3
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e0e03745ba862fbb984208cadd|Ref A: 94E2C8544700414BB7956A75378E923A
        Ref B: DB3EDGE1718 Ref C: 2024-08-05T15:59:28Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-8h5nb, mapsplatform-forwardgeocoder-service-5c6dd87786-kgttl
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155928Z-154b59dbc6d6486ww0evwm2rm000000007rg000000017bkc
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI4OTNlMWM4M2YyMmU3MTZjMmRhNTUwZTQ1NGM2NDNkMyJ9
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:28 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 073f637e7127365a033885f579791faf
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e0d4df4260ba4272e04318b3cb|Ref A: D9F499E6DCBE42288C2032E4F44B6410
        Ref B: DB3EDGE2020 Ref C: 2024-08-05T15:59:28Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-m46mf, mapsplatform-forwardgeocoder-service-5c6dd87786-2ll8v
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155928Z-154b59dbc6dp6phcqrwhfx6qkc000000038g0000000023bz
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIwNzNmNjM3ZTcxMjczNjVhMDMzODg1ZjU3OTc5MWZhZiJ9
  recorded_at: Mon, 05 Aug 2024 15:59:28 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 658eae23cc6919e169c561b2d48b7a5d
      X-Msedge-Ref:
      - 'Ref A: 28438EA84B644FB3975D7FCF0E9507A2 Ref B: DB3EDGE1811 Ref C: 2024-08-05T15:59:28Z|Ref
        SnR: 66b0f6e1126047bbac05e67c94d2f646'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-bln62, mapsplatform-forwardgeocoder-service-5c6dd87786-6j8x7
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '67'
      X-Azure-Ref:
      - 20240805T155928Z-17cc7bff75852896vw13x1p8f400000000fg0000000012at
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI2NThlYWUyM2NjNjkxOWUxNjljNTYxYjJkNDhiN2E1ZCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - cc9e7c4ffbda51a478f37745c380f60f
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e13ec44504b6f455794fc57c97|Ref A: C9F85345FC714672B822BD74961A3B3A
        Ref B: DB3EDGE2115 Ref C: 2024-08-05T15:59:29Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-jtxg5, mapsplatform-forwardgeocoder-service-5c6dd87786-pkrgc
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '87'
      X-Azure-Ref:
      - 20240805T155929Z-154b59dbc6dlngw9ymadtqsxec00000007k0000000018ynk
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiY2M5ZTdjNGZmYmRhNTFhNDc4ZjM3NzQ1YzM4MGY2MGYifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London,%20Greater%20United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3552'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - '08b8630e43de46c91acedfb2427a6bba'
      X-Msedge-Ref:
      - 'Ref A: 1D678B098E2743E6895C562F97BE2DCA Ref B: DB3EDGE2512 Ref C: 2024-08-05T15:59:29Z|Ref
        SnR: 66b0f6e102964b3d891c90167e9dfae1'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-vd92d, mapsplatform-forwardgeocoder-service-5c6dd87786-bk4cg
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '66'
      X-Azure-Ref:
      - 20240805T155929Z-17cc7bff7588xs2bfew4mmt7dw0000000mk0000000009v6e
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6Ik1lZGl1bSIsImVudGl0eVR5cGUiOiJDb3VudHJ5UmVnaW9uIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1My45NDM4MzI0LC0yLjU1MDU2NDA1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiIwOGI4NjMwZTQzZGU0NmM5MWFjZWRmYjI0MjdhNmJiYSJ9
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '3612'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 48726c4567026a9ff1c00d4d925ef3a8
      X-Msedge-Ref:
      - 'Ref A: 773C3EC46E0B4B258BE8F1F5186FEBC9 Ref B: DB3EDGE1912 Ref C: 2024-08-05T15:59:29Z|Ref
        SnR: 66b0f6e17bd14f66b16c824a691470fb'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-m9rrs, mapsplatform-forwardgeocoder-service-5c6dd87786-kgttl
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '67'
      X-Azure-Ref:
      - 20240805T155929Z-17cc7bff758xz98rzgr6nedeqn0000000ha000000000cs61
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6NSwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiUG9wdWxhdGVkUGxhY2UiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS40NjI5MzI1ODY2Njk5MiwtMC42NTM3MTg5NDgzNjQyNTc4LDUxLjQ2NTE5ODUxNjg0NTcsLTAuNjUwMDk0MTUxNDk2ODg3Ml0sIm5hbWUiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS40NjQwNzMxOCwtMC42NTE4ODddfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiV2luZHNvciBBbmQgTWFpZGVuaGVhZCIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJXaW5kc29yIn0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiVG91cmlzdFN0cnVjdHVyZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNDY0MDczMTgsLTAuNjUxODg3XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1NC4wNzcxNjM2OTYyODkwNiwtMS44NTM2MjExMjUyMjEyNTI0LDU0LjA3OTg2MDY4NzI1NTg2LC0xLjg0OTc3MzA0OTM1NDU1MzJdLCJuYW1lIjoiTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiRW5nbGFuZCIsImFkbWluRGlzdHJpY3QyIjoiTm9ydGggWW9ya3NoaXJlIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJsb2NhbGl0eSI6IkJld2VybGV5In0sImNvbmZpZGVuY2UiOiJMb3ciLCJlbnRpdHlUeXBlIjoiV2V0bGFuZCIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTQuMDc4NTc1MTMsLTEuODUxNDE3NTRdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQyLjgyNDUxMjQ4MTY4OTQ1LC04MS4zOTA2NzA3NzYzNjcxOSw0My4wNzMwNjY3MTE0MjU3OCwtODEuMTA3MDcwOTIyODUxNTZdLCJuYW1lIjoiTG9uZG9uLCBPTiIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNDIuOTg0MjY4MTksLTgxLjI0NzUzNTcxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6Ik9OIiwiYWRtaW5EaXN0cmljdDIiOiJNaWRkbGVzZXgiLCJjb3VudHJ5UmVnaW9uIjoiQ2FuYWRhIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgT04iLCJsb2NhbGl0eSI6IkxvbmRvbiJ9LCJjb25maWRlbmNlIjoiTG93IiwiZW50aXR5VHlwZSI6IlBvcHVsYXRlZFBsYWNlIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls0Mi45ODQyNjgxOSwtODEuMjQ3NTM1NzFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzM3LjA3OTU4OTg0Mzc1LC04NC4xMjYyODkzNjc2NzU3OCwzNy4xNTQ1MjU3NTY4MzU5NCwtODQuMDM2MTI1MTgzMTA1NDddLCJuYW1lIjoiTG9uZG9uLCBLWSIsInBvaW50Ijp7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdfSwiYWRkcmVzcyI6eyJhZG1pbkRpc3RyaWN0IjoiS1kiLCJhZG1pbkRpc3RyaWN0MiI6IkxhdXJlbCBDb3VudHkiLCJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIFN0YXRlcyIsImZvcm1hdHRlZEFkZHJlc3MiOiJMb25kb24sIEtZIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbMzcuMTI4ODQ5MDMsLTg0LjA4MzY3OTJdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI0ODcyNmM0NTY3MDI2YTlmZjFjMDBkNGQ5MjVlZjNhOCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/Greater%20London?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '2361'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - 4f72fd9cbc35aa19a892f884ffa9def8
      X-Msedge-Ref:
      - 'Ref A: 387AFC63278B475180139CF4B9AE1ED0 Ref B: DB3EDGE2918 Ref C: 2024-08-05T15:59:29Z|Ref
        SnR: 66b0f6e1501c486f98990cc16c4e8a3d'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-vd92d, mapsplatform-forwardgeocoder-service-5c6dd87786-bk4cg
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '64'
      X-Azure-Ref:
      - 20240805T155929Z-17cc7bff758jrxlceneqh96fgg00000005dg000000003dgm
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MywicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwicG9pbnQiOnsidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkdyZWF0ZXIgTG9uZG9uLCBVbml0ZWQgS2luZ2RvbSJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24yIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDczNjIzNywtMC4xMjY0MDM1XSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19LHsiX190eXBlIjoiTG9jYXRpb246aHR0cDovL3NjaGVtYXMubWljcm9zb2Z0LmNvbS9zZWFyY2gvbG9jYWwvd3MvcmVzdC92MSIsImJib3giOls1MS4yODY3NTA3OTM0NTcwMywtMC41MTAzODUwOTYwNzMxNTA2LDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiR3JlYXRlciBMb25kb24iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwMDQ5NTkxLC0wLjEwOTQxNV19LCJhZGRyZXNzIjp7ImFkbWluRGlzdHJpY3QiOiJHcmVhdGVyIExvbmRvbiIsImNvdW50cnlSZWdpb24iOiJVbml0ZWQgS2luZ2RvbSIsImZvcm1hdHRlZEFkZHJlc3MiOiJHcmVhdGVyIExvbmRvbiJ9LCJjb25maWRlbmNlIjoiTWVkaXVtIiwiZW50aXR5VHlwZSI6IkFkbWluRGl2aXNpb24xIiwiZ2VvY29kZVBvaW50cyI6W3sidHlwZSI6IlBvaW50IiwiY29vcmRpbmF0ZXMiOls1MS41MDA0OTU5MSwtMC4xMDk0MTVdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX0seyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzUxLjI4Njc4MTMxMTAzNTE1NiwtMC41MTAzMzYxMDEwNTUxNDUzLDUxLjY5MTg4MzA4NzE1ODIsMC4zMzQwMjU1MDIyMDQ4OTVdLCJuYW1lIjoiTG9uZG9uLCBHcmVhdGVyIExvbmRvbiwgVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUxLjUwNzQwODE0LC0wLjEyNzcyNDAxXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkVuZ2xhbmQiLCJhZG1pbkRpc3RyaWN0MiI6IkdyZWF0ZXIgTG9uZG9uIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBLaW5nZG9tIiwiZm9ybWF0dGVkQWRkcmVzcyI6IkxvbmRvbiwgR3JlYXRlciBMb25kb24sIFVuaXRlZCBLaW5nZG9tIiwibG9jYWxpdHkiOiJMb25kb24ifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJQb3B1bGF0ZWRQbGFjZSIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTEuNTA3NDA4MTQsLTAuMTI3NzI0MDFdLCJjYWxjdWxhdGlvbk1ldGhvZCI6IlJvb2Z0b3AiLCJ1c2FnZVR5cGVzIjpbIkRpc3BsYXkiXX1dLCJtYXRjaENvZGVzIjpbIkdvb2QiXX1dfV0sInN0YXR1c0NvZGUiOjIwMCwic3RhdHVzRGVzY3JpcHRpb24iOiJPSyIsInRyYWNlSWQiOiI0ZjcyZmQ5Y2JjMzVhYTE5YTg5MmY4ODRmZmE5ZGVmOCJ9
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
- request:
    method: get
    uri: http://dev.virtualearth.net/REST/v1/Locations/United%20Kingdom?key=As9GK0TwxULCFyDaoq4D-Y69ba9KgY2PSUp3XopYkZuhJWWm_gYcGosV7sjd7b8l
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 05 Aug 2024 15:59:29 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '1660'
      Connection:
      - keep-alive
      Access-Control-Allow-Headers:
      - Content-Type,X-FD-Features,X-FD-FLIGHT,PreferAnonymous
      Access-Control-Allow-Methods:
      - POST, GET, OPTIONS
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache
      X-Bm-Traceid:
      - d953f2a8a080f0e93c2c528a950185cf
      X-Msedge-Ref:
      - 'Ref SnR: 66b0f6e13a9641958c166ca0641c11b4|Ref A: AD06BA65A4324128B486A1CE1ED4EE89
        Ref B: DB3EDGE3112 Ref C: 2024-08-05T15:59:29Z'
      X-Bm-Srv:
      - mapsplatform-frontend-5787975794-mqt5d, mapsplatform-forwardgeocoder-service-5c6dd87786-xvn96
      X-Ms-Bm-Ws-Info:
      - '0'
      X-Bm-Fe-Elapsed:
      - '60'
      X-Azure-Ref:
      - 20240805T155929Z-154b59dbc6dbfz5wnyvgxvrk1g00000007k000000001b3zm
      X-Cache:
      - CONFIG_NOCACHE
      Accept-Ranges:
      - bytes
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJhdXRoZW50aWNhdGlvblJlc3VsdENvZGUiOiJWYWxpZENyZWRlbnRpYWxzIiwiYnJhbmRMb2dvVXJpIjoiaHR0cDovL2Rldi52aXJ0dWFsZWFydGgubmV0L0JyYW5kaW5nL2xvZ29fcG93ZXJlZF9ieS5wbmciLCJjb3B5cmlnaHQiOiJDb3B5cmlnaHQgwqkgMjAyNCBNaWNyb3NvZnQgYW5kIGl0cyBzdXBwbGllcnMuIEFsbCByaWdodHMgcmVzZXJ2ZWQuIFRoaXMgQVBJIGNhbm5vdCBiZSBhY2Nlc3NlZCBhbmQgdGhlIGNvbnRlbnQgYW5kIGFueSByZXN1bHRzIG1heSBub3QgYmUgdXNlZCwgcmVwcm9kdWNlZCBvciB0cmFuc21pdHRlZCBpbiBhbnkgbWFubmVyIHdpdGhvdXQgZXhwcmVzcyB3cml0dGVuIHBlcm1pc3Npb24gZnJvbSBNaWNyb3NvZnQgQ29ycG9yYXRpb24uIiwicmVzb3VyY2VTZXRzIjpbeyJlc3RpbWF0ZWRUb3RhbCI6MiwicmVzb3VyY2VzIjpbeyJfX3R5cGUiOiJMb2NhdGlvbjpodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3NlYXJjaC9sb2NhbC93cy9yZXN0L3YxIiwiYmJveCI6WzQ5LjY3Mzk4ODM0MjI4NTE1NiwtMTQuMDE1NTI2NzcxNTQ1NDEsNjEuMDYxMDA4NDUzMzY5MTQsMi4wOTE5MjE4MDYzMzU0NDldLCJuYW1lIjoiVW5pdGVkIEtpbmdkb20iLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzUzLjk0MzgzMjQsLTIuNTUwNTY0MDVdfSwiYWRkcmVzcyI6eyJjb3VudHJ5UmVnaW9uIjoiVW5pdGVkIEtpbmdkb20iLCJmb3JtYXR0ZWRBZGRyZXNzIjoiVW5pdGVkIEtpbmdkb20ifSwiY29uZmlkZW5jZSI6IkhpZ2giLCJlbnRpdHlUeXBlIjoiQ291bnRyeVJlZ2lvbiIsImdlb2NvZGVQb2ludHMiOlt7InR5cGUiOiJQb2ludCIsImNvb3JkaW5hdGVzIjpbNTMuOTQzODMyNCwtMi41NTA1NjQwNV0sImNhbGN1bGF0aW9uTWV0aG9kIjoiUm9vZnRvcCIsInVzYWdlVHlwZXMiOlsiRGlzcGxheSJdfV0sIm1hdGNoQ29kZXMiOlsiR29vZCJdfSx7Il9fdHlwZSI6IkxvY2F0aW9uOmh0dHA6Ly9zY2hlbWFzLm1pY3Jvc29mdC5jb20vc2VhcmNoL2xvY2FsL3dzL3Jlc3QvdjEiLCJiYm94IjpbMjUuMjIyMTQzMTczMjE3NzczLDU1LjE1NzkzOTkxMDg4ODY3LDI1LjIyNDQwOTEwMzM5MzU1NSw1NS4xNjA4ODEwNDI0ODA0N10sIm5hbWUiOiJVbml0ZWQgS2luZ2RvbSwgVW5pdGVkIEFyYWIgRW1pcmF0ZXMiLCJwb2ludCI6eyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXX0sImFkZHJlc3MiOnsiYWRtaW5EaXN0cmljdCI6IkRVIiwiY291bnRyeVJlZ2lvbiI6IlVuaXRlZCBBcmFiIEVtaXJhdGVzIiwiZm9ybWF0dGVkQWRkcmVzcyI6IlVuaXRlZCBLaW5nZG9tLCBVbml0ZWQgQXJhYiBFbWlyYXRlcyIsImxvY2FsaXR5IjoiRHViYWkifSwiY29uZmlkZW5jZSI6IkxvdyIsImVudGl0eVR5cGUiOiJJc2xhbmQiLCJnZW9jb2RlUG9pbnRzIjpbeyJ0eXBlIjoiUG9pbnQiLCJjb29yZGluYXRlcyI6WzI1LjIyMzQwNzc1LDU1LjE1OTQ0NjcyXSwiY2FsY3VsYXRpb25NZXRob2QiOiJSb29mdG9wIiwidXNhZ2VUeXBlcyI6WyJEaXNwbGF5Il19XSwibWF0Y2hDb2RlcyI6WyJHb29kIl19XX1dLCJzdGF0dXNDb2RlIjoyMDAsInN0YXR1c0Rlc2NyaXB0aW9uIjoiT0siLCJ0cmFjZUlkIjoiZDk1M2YyYThhMDgwZjBlOTNjMmM1MjhhOTUwMTg1Y2YifQ==
  recorded_at: Mon, 05 Aug 2024 15:59:29 GMT
recorded_with: VCR 6.2.0
