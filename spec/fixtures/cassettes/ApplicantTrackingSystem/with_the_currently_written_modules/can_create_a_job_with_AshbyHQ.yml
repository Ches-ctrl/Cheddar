---
http_interactions:
- request:
    method: get
    uri: https://api.ashbyhq.com/posting-api/job-board/lightdash?includeCompensation=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - api.ashbyhq.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 May 2024 14:15:01 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01HWT84EHR2411ETTMT7DP38YM
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 87d061963f507783-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 01 May 2024 14:15:01 GMT
- request:
    method: post
    uri: https://jobs.ashbyhq.com/api/non-user-graphql?op=ApiOrganizationFromHostedJobsPageName
    body:
      encoding: UTF-8
      string: '{"query":"query ApiOrganizationFromHostedJobsPageName($organizationHostedJobsPageName:
        String!) {  organization: organizationFromHostedJobsPageName(    organizationHostedJobsPageName:
        $organizationHostedJobsPageName  ) {    ...OrganizationParts    __typename  }}fragment
        OrganizationParts on Organization {  name  publicWebsite  customJobsPageUrl  hostedJobsPageSlug  allowJobPostIndexing  theme
        {    colors    showJobFilters    showTeams    showAutofillApplicationsBox    logoWordmarkImageUrl    logoSquareImageUrl    applicationSubmittedSuccessMessage    jobBoardTopDescriptionHtml    jobBoardBottomDescriptionHtml    __typename  }  appConfirmationTrackingPixelHtml  recruitingPrivacyPolicyUrl  activeFeatureFlags  timezone  __typename
        }","variables":{"organizationHostedJobsPageName":"lightdash"}}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 May 2024 14:15:01 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01HWT84EVVZYZW3VSWRT93KGNF
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 87d061982c51642d-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"data":{"organization":{"name":"Lightdash","publicWebsite":"https://www.lightdash.com/","customJobsPageUrl":null,"hostedJobsPageSlug":"Lightdash","allowJobPostIndexing":true,"theme":{"colors":{"version":"1","colorPrimary600":"#7262FF","colorPrimary900":"#7262FF"},"showJobFilters":false,"showTeams":false,"showAutofillApplicationsBox":true,"logoWordmarkImageUrl":"https://app.ashbyhq.com/api/images/org-theme-wordmark/118a5d75-b907-4616-ade7-b67eaa6b5c16/314e7c4e-d0d9-494f-b7cd-7d008d80f41e.png","logoSquareImageUrl":"https://app.ashbyhq.com/api/images/org-theme-logo/118a5d75-b907-4616-ade7-b67eaa6b5c16/0e2997f7-6255-4c9e-9ea4-0199b51c80ef.png","applicationSubmittedSuccessMessage":null,"jobBoardTopDescriptionHtml":null,"jobBoardBottomDescriptionHtml":null,"__typename":"Theme"},"appConfirmationTrackingPixelHtml":null,"recruitingPrivacyPolicyUrl":null,"activeFeatureFlags":["AnonymousCandidateExperience","JobPostingApplicationDeadlines","SchedulingNewAvailabileTimesCalculation","ThirdPartyJobBoardListingControl","UnsubscribeLinks","VirusScanFiles","VirusScanShowResults"],"timezone":"Europe/London","__typename":"Organization"}}}

        '
  recorded_at: Wed, 01 May 2024 14:15:01 GMT
- request:
    method: get
    uri: https://api.crunchbase.com/api/v4/autocompletes?query=Lightdash&user_key=9eebe4bdec6f10ec631cbb8573cb8de2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - application/json
      User-Agent:
      - Ruby
      Host:
      - api.crunchbase.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Wed, 01 May 2024 14:15:01 GMT
      Etag:
      - W/"1714572901927"
      Server:
      - openresty
      X-Cb-Engine:
      - autocomplete:algolia
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Took:
      - '31'
      X-Cb-Request-Took:
      - '61'
      Content-Length:
      - '4038'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":70,"entities":[{"facet_ids":["contact","aberdeen","semrush","company","rank","builtwith"],"identifier":{"uuid":"301bce04-1610-4369-a9db-29de9623e65f","value":"Lightdash","image_id":"citkfzfr7esouu3essw6","permalink":"hubble-e65f","entity_def_id":"organization"},"short_description":"Lightdash
        turns a dbt project into a full-stack BI platform."},{"facet_ids":["company","rank"],"identifier":{"uuid":"f61375ff-0cfb-46ab-967f-40dcb6b759bc","value":"LightCash","permalink":"lightcash","entity_def_id":"organization"},"short_description":"LightCash
        is a global blockchain-integrated payment platform."},{"facet_ids":["contact","ipqwery","aberdeen","apptopia","semrush","company","rank","builtwith","bombora"],"identifier":{"uuid":"47e286e5-0c19-486c-ab4d-2a6cecbb9025","value":"Lightcast","image_id":"jyzipe3ttp6huxouovp3","permalink":"lightcast","entity_def_id":"organization"},"short_description":"Premium
        Media Delivery & Marketing Solutions"},{"facet_ids":["contact","siftery","ipqwery","aberdeen","semrush","company","rank","bombora","ai_insight"],"identifier":{"uuid":"fab97672-a33d-46aa-8c11-fc122c78ce92","value":"Lightcast","image_id":"xxggp83fb2vslwjob6pi","permalink":"light-cast","entity_def_id":"organization"},"short_description":"Lightcast
        is an IT company that offers software, APIs, and consulting services for communities,
        businesses, and educational institutions."},{"facet_ids":["contact","siftery","aberdeen","semrush","company","rank","builtwith","bombora","ai_insight"],"identifier":{"uuid":"be15c62b-1c05-aeab-4c08-b6980f9b43a8","value":"Lightpath","image_id":"p7yghld26upuyqggwexw","permalink":"cablevision-lightpath","entity_def_id":"organization"},"short_description":"Lightpath
        is revolutionizing how organizations connect to their digital destinations."},{"facet_ids":["contact","siftery","ipqwery","aberdeen","semrush","company","rank","builtwith","bombora","ai_insight"],"identifier":{"uuid":"19698cf2-59d1-6eaa-54a0-fc96de7089ac","value":"LightPath
        Technologies","image_id":"v1397195311/12cff6ec01fee3513aad8d25a04f9d5d.jpg","permalink":"lightpath-technologies","entity_def_id":"organization"},"short_description":"Committed
        to delivering the highest quality, most reliable optical components and assemblies
        to its customers."},{"facet_ids":["contact","aberdeen","apptopia","semrush","company","rank","job_posting","builtwith","bombora"],"identifier":{"uuid":"7d938fde-d39c-4f63-b792-0752e4aad138","value":"Lightship","image_id":"b2lztgqrjyfeh77sn3zy","permalink":"lightship","entity_def_id":"organization"},"short_description":"Lightship
        is making clinical trials more accessible for patients and providers to accelerate
        development of better therapies for all."},{"facet_ids":["contact","siftery","aberdeen","apptopia","semrush","company","rank","builtwith","ai_insight"],"identifier":{"uuid":"a26e072b-4cc3-b179-4c5d-25634d199c3a","value":"Lightship
        Works","image_id":"v1453913057/kil4ffhvwrpyexbdwn1f.png","permalink":"lightship-works","entity_def_id":"organization"},"short_description":"Lightship
        is an application that connects everything on your worksite: your employee
        mobile devices, sensors, and safety systems."},{"facet_ids":["contact","siftery","apptopia","semrush","company","rank","builtwith","bombora"],"identifier":{"uuid":"ddfd8f3d-9332-4423-a4f9-e9805488080b","value":"LightCastle
        Partners Ltd.","image_id":"rdcdbsztao43egqohofo","permalink":"lightcastle-partners-ltd","entity_def_id":"organization"},"short_description":"LightCastle
        Partners is a management consulting firm that envisions a knowledge-driven
        economy that inspires businesses and changes lives."},{"facet_ids":["contact","siftery","apptopia","semrush","company","rank","bombora"],"identifier":{"uuid":"df1edc03-4105-41d5-9f4e-ea3f68115d80","value":"Lightshade","image_id":"z5q8qmmyrx8th2i8cr5x","permalink":"lightshade-assets","entity_def_id":"organization"},"short_description":"Lightshade
        is an online store that sells cannabis, edibles, concentrates, tinctures,
        topicals, and other cannabis-related products."}]}'
  recorded_at: Wed, 01 May 2024 14:15:01 GMT
- request:
    method: get
    uri: https://api.ashbyhq.com/posting-api/job-board/lightdash?includeCompensation=true
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - api.ashbyhq.com
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 May 2024 14:15:02 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01HWT84FRJ146KXPT6W1JY9DV8
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 87d0619e28609485-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJqb2JzIjpbeyJpZCI6IjMwOTcwNmJjLTEwODEtNDhiNi04OWRjLWY3NjliYmUxN2U2ZCIsInRpdGxlIjoiQW5hbHl0aWNzIEVuZ2luZWVyaW5nIEFkdm9jYXRlIiwiZGVwYXJ0bWVudCI6IkxpZ2h0ZGFzaCIsInRlYW0iOiJMaWdodGRhc2giLCJlbXBsb3ltZW50VHlwZSI6IkZ1bGxUaW1lIiwibG9jYXRpb24iOiJSZW1vdGUiLCJzaG91bGREaXNwbGF5Q29tcGVuc2F0aW9uT25Kb2JQb3N0aW5ncyI6dHJ1ZSwic2Vjb25kYXJ5TG9jYXRpb25zIjpbXSwicHVibGlzaGVkQXQiOiIyMDI0LTAyLTI2VDExOjE3OjUzLjg2MiswMDowMCIsImlzTGlzdGVkIjp0cnVlLCJpc1JlbW90ZSI6dHJ1ZSwiYWRkcmVzcyI6eyJwb3N0YWxBZGRyZXNzIjp7ImFkZHJlc3NDb3VudHJ5IjoiVW5pdGVkIEtpbmdkb20ifX0sImpvYlVybCI6Imh0dHBzOi8vam9icy5hc2hieWhxLmNvbS9saWdodGRhc2gvMzA5NzA2YmMtMTA4MS00OGI2LTg5ZGMtZjc2OWJiZTE3ZTZkIiwiYXBwbHlVcmwiOiJodHRwczovL2pvYnMuYXNoYnlocS5jb20vbGlnaHRkYXNoLzMwOTcwNmJjLTEwODEtNDhiNi04OWRjLWY3NjliYmUxN2U2ZC9hcHBsaWNhdGlvbiIsImRlc2NyaXB0aW9uSHRtbCI6IjxoMj5BYm91dCBMaWdodGRhc2g8L2gyPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkxpZ2h0ZGFzaCBpcyBhbiBvcGVuIHNvdXJjZSBCSSB0b29sIHRoYXQgaW5zdGFudGx5IHR1cm5zIHlvdXIgZGJ0IHByb2plY3QgaW50byBhIGZ1bGwtc3RhY2sgQkkgcGxhdGZvcm0uPC9wPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPldl4oCZcmUgYnVpbGRpbmcgdGhlIGJlc3QgQkkgdG9vbCBmb3IgYW5hbHl0aWNzIGVuZ2luZWVycyBieSBsZXR0aW5nIHRoZW0gbWFuYWdlIGV2ZXJ5dGhpbmcgYXMgY29kZSwgZnJvbSB0aGUgY29tZm9ydCBvZiB0aGVpciB0ZXh0IGVkaXRvciBhbmQgY29tbWFuZCBsaW5lLiBPbmNlIHRoZSBkYXRhIHRlYW0gaGFzIHdyaXR0ZW4gdGhlIG1ldHJpY3MsIHRoZW4gTGlnaHRkYXNoIGVuYWJsZXMgc2VsZi1zZXJ2ZSBmb3IgdGhlIGVudGlyZSBidXNpbmVzcywgc28geW91ciBkYXRhIGlzIGFjY2Vzc2libGUgZm9yIHRoZSB3aG9sZSB0ZWFtLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5XZeKAmXJlIGhlbHBpbmcgZGF0YSB0ZWFtcyBidWlsZCBkYXRhLWRyaXZlbiBjb21wYW5pZXMgc28gdGhleSBjYW4gbWFrZSBiZXR0ZXIgZGVjaXNpb25zLCBmYXN0ZXIuPC9wPjxoMj5Ib3cgd2Ugd29yayBhdCBMaWdodGRhc2g8L2gyPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZSBidWlsZCBpbiBwdWJsaWMsIGJ5IGRlZmF1bHQuPC9zdHJvbmc+IFdl4oCZcmUgYW4gb3BlbiBzb3VyY2UgcHJvZHVjdCwgc28gaGF2aW5nIHNoYXJlZCBjb250ZXh0IGlzIGltcG9ydGFudCBzbyB0aGF0IHBlb3BsZSBjYW4gY29udHJpYnV0ZSB0byBMaWdodGRhc2guIEFzIGEgdGVhbSwgd2UgYWxzbyB0aGluayB0aGF0IHdlIG1ha2UgdGhlIDxlbT48c3Ryb25nPmJlc3Q8L3N0cm9uZz48L2VtPiBkZWNpc2lvbnMgd2hlbiBldmVyeW9uZSBoYXMgYSBsb3Qgb2YgdGhlIHNhbWUgaW5mb3JtYXRpb24uIFdlIGRvbid0IG92ZXJzZWxsIGFuZCB1bmRlci1kZWxpdmVyOiB3ZSB3YW50IHRoZSBleHBlcmllbmNlIG9mIHVzaW5nIExpZ2h0ZGFzaCB0byBiZSBhcyBhd2Vzb21lIGFzIHRoZSBleHBlcmllbmNlIHdlJ3JlIHNlbGxpbmcuPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+V2UgY2hhbGxlbmdlIHByb2JsZW1zLCBub3QgcGVvcGxlLjwvc3Ryb25nPiBXZSBhc2sgb3Vyc2VsdmVzIOKAnDxlbT48c3Ryb25nPndoeTwvc3Ryb25nPjwvZW0+IGlzIHRoaXMgYnJva2VuP+KAnSBub3Qg4oCcPGVtPjxzdHJvbmc+d2hvPC9zdHJvbmc+PC9lbT4gaXMgYnJlYWtpbmcgdGhpcz/igJ08L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZeKAmXJlIGhpZ2hseSBjb2xsYWJvcmF0aXZlLjwvc3Ryb25nPiBXZeKAmXJlIGEgZ3JvdXAgb2YgcGVvcGxlIHRoYXQgYXJlIGhhcHB5IHdvcmtpbmcgaW5kZXBlbmRlbnRseSwgYnV0IGxvdmUgYmVpbmcgcGFydCBvZiBhIHRlYW0uICoqKipXZSBub3Qgb25seSB3b3JrIG9uIHByb2JsZW1zIGFzIGEgdGVhbSwgYnV0IHdlIGFsc28gbGlzdGVuIHRvIHRoZSBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkgYW5kIG91ciB1c2Vycy4gV2UgaW52ZXN0IGluIHRvb2xzIGFuZCBwcm9jZXNzZXMgdGhhdCBhbGxvdyB1cyB0byBkbyB0aGlzLCBldmVuIHdoaWxlIGZ1bGx5IHJlbW90ZS48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZSBiaWFzIHRvd2FyZHMgaW1wYWN0Ljwvc3Ryb25nPiBXZeKAmWQgcmF0aGVyIGJ1aWxkIHNvbWV0aGluZyB0byA4MCUgYW5kIGdldCBpdCBpbiBmcm9udCBvZiB1c2VycyBzbyB3ZSBjYW4gaXRlcmF0ZSBvbiBmYXN0IGZlZWRiYWNrIHRoYW4gYnVpbGQgc29tZXRoaW5nIHRvIDEwMCUganVzdCB0byBmaW5kIG91dCBpdOKAmXMgbm90IHRoZSByaWdodCB0aGluZy4gV2Ugc3BlbmQgYSBsb3Qgb2YgdGltZSB0aGlua2luZyBhYm91dCBob3cgb3VyIHdvcmsgc29sdmVzIHJlYWwgdXNlciBwcm9ibGVtcy4gV2Ugd29yayBvbiB0aGUgaGlnaGVzdCBpbXBhY3QgcHJvYmxlbXMgZXZlbiBpZiB0aGV54oCZcmUgc29tZXRoaW5nIGEgYml0IOKAnG91dCBvZiB5b3VyIHJlbWl04oCdLjwvcD48L2xpPjwvdWw+PGgyPkFib3V0IHRoZSByb2xlPC9oMj48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5BdCBMaWdodGRhc2gsIHdl4oCZcmUgb2JzZXNzZWQgd2l0aCB0aGUgc3VjY2VzcyBvZiBvdXIgdXNlcnMuIE91ciBmYXN0IGFuZCB0ZWNobmljYWwgYW5hbHl0aWNzIHN1cHBvcnQgaXMgb25lIG9mIG91ciBzdXBlcnBvd2VycyB0b2RheS4gSXQgY292ZXJzIGV2ZXJ5dGhpbmcgZnJvbSBidWlsZGluZyBkYXNoYm9hcmRzIGFuZCB3cml0aW5nIFNRTCB0byBhbmFseXRpY3MgZW5naW5lZXJpbmcgYmVzdCBwcmFjdGljZS4gSWYgeW91IGhhdmUgYSBwYXNzaW9uIGZvciBoZWxwaW5nIHRlYW1zIHdpbiB3aXRoIGRhdGEsIHdl4oCZcmUgbG9va2luZyBmb3Igb3VyIGZpcnN0IEFuYWx5dGljcyBFbmdpbmVlcmluZyBBZHZvY2F0ZSB0byBqb2luIHRoZSBMaWdodGRhc2ggdGVhbS48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+T3VyIHVzZXJz4oCZIGV4cGVyaWVuY2Ugb2YgTGlnaHRkYXNoIGdvZXMgYmV5b25kIG91ciBwcm9kdWN0IGZlYXR1cmVzIGFuZCBpbmNsdWRlcyBldmVyeSB0b3VjaHBvaW50IGFuZCBpbnRlcmFjdGlvbiB0aGV5IGhhdmUgd2l0aCB0aGUgY29tbXVuaXR5IGFuZCB0ZWFtLiBJbiB0aGlzIHJvbGUsIHlvdeKAmWxsIGJlIHRoZSB2b2ljZSBmb3Igb3VyIGNvbW11bml0eSBhbmQgcmVzcG9uc2libGUgZm9yIG91ciB1c2Vyc+KAmSBxdWVzdGlvbnMgcmVsYXRlZCB0byBMaWdodGRhc2gsIGJlc3QgcHJhY3RpY2UgaW4gQkkgYW5kIGFuYWx5dGljcyBlbmdpbmVlcmluZy48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PC9wPjxoMj48c3Ryb25nPkFyZWFzIG9mIFJlc3BvbnNpYmlsaXR5Ojwvc3Ryb25nPjwvaDI+PHVsIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPk9ic2VzcyBvdmVyIHRoZSBzdWNjZXNzIG9mIG91ciB1c2Vyczo8L3N0cm9uZz4gT3VyIHVzZXJz4oCZIHdpbnMgYXJlIG91ciB3aW5zLiBXZSB3YW50IHRvIGtlZXAgYnVpbGRpbmcgb24gb3VyIHRlY2huaWNhbCBzdXBwb3J0IHRoYXQgb3VyIGNvbW11bml0eSBhbmQgY3VzdG9tZXJzIGtub3cgYW5kIGxvdmUuIFlvdeKAmWxsIHByb3ZpZGUgaW4tZGVwdGgsIHBlcnNvbmFsaXNlZCBhbnN3ZXJzIGFuZCBwYWlyIHByb2dyYW0gd2l0aCB1c2VycyB0byBzb2x2ZSB0aGVpciBhbmFseXRpY3MgcHJvYmxlbXMgYW5kIHB1bGwgaW4gb3RoZXIgTGlnaHRkYXNoIHRlYW0gbWVtYmVycyB3aGVuIG5lZWRlZC48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5MaWdodGRhc2ggY2hhbXBpb246PC9zdHJvbmc+IFlvdeKAmWxsIGJlIHRoZSBnby10byBMaWdodGRhc2ggcHJvIGF0IExpZ2h0ZGFzaCBhbmQgaW4gdGhlIGNvbW11bml0eS4gWW914oCZbGwga2VlcCB1cCB3aXRoIG91ciBsYXRlc3QgZmVhdHVyZXMgYW5kIGtub3cgaG93IHRvIHVzZSB0aGVtICh5b3XigJlsbCBiZSB1c2luZyBMaWdodGRhc2ggPGVtPjxzdHJvbmc+YXQ8L3N0cm9uZz48L2VtPiBMaWdodGRhc2ggcmVndWxhcmx5ISkgYW5kIHlvdeKAmWxsIG1ha2Ugc3VyZSB0byBzaGFyZSB0aGlzIGtub3dsZWRnZSB3aXRoIHRoZSBjb21tdW5pdHkuIFlvdeKAmWxsIGFsc28gcmVwcmVzZW50IHRoZSBjb21wYW55IGF0IGNvbW11bml0eSBldmVudHMsIGNvbmZlcmVuY2VzLCBhbmQgbWVldCB1cHMuPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxzdHJvbmc+VGVhY2ggYW5kIHNoYXJlOjwvc3Ryb25nPiBDcmVhdGUgYW5kIGRlbGl2ZXIgd29ybGQgY2xhc3MgdHV0b3JpYWxzIGFuZCBkZW1vcyBmb3IgTGlnaHRkYXNoIGFzIHdlbGwgYXMgZXhhbXBsZXMgb2YgYmVzdC1wcmFjdGljZSBmb3IgZGF0YSBhbmFseXRpY3MuIFRoZXNlIGNvdWxkIGJlIGJsb2cgcG9zdHMsIHZpZGVvIHR1dG9yaWFscywgb3IgY29kZSBleGFtcGxlcy48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5Db21tdW5pdHkgc3RyYXRlZ3k6PC9zdHJvbmc+IEJ1aWxkaW5nIGFuZCBleGVjdXRpbmcgc3RyYXRlZ2llcyB0byBncm93IGFuZCBlbmdhZ2UgdGhlIGFuYWx5c3QgY29tbXVuaXR5IGFyb3VuZCBMaWdodGRhc2guPC9wPjwvbGk+PC91bD48aDI+PHN0cm9uZz5SZXF1aXJlbWVudHM6PC9zdHJvbmc+PC9oMj48dWwgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkV4cGVyaWVuY2Ugd2l0aCBidXNpbmVzcyBpbnRlbGxpZ2VuY2UgYW5kIGFuYWx5dGljcyBlbmdpbmVlcmluZzwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5TdHJvbmcgdmVyYmFsIGFuZCB3cml0dGVuIGNvbW11bmljYXRpb24gc2tpbGxzPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkNvbWZvcnRhYmxlIHdpdGggZGJ0LCBTUUwsIGdpdCwgZGF0YSB2aXN1YWxpemF0aW9uLCBhbmQgdGhlIGNvbW1hbmQgbGluZTwvcD48L2xpPjwvdWw+PGgyPjxzdHJvbmc+S1BJcyBvd25lZCBieSB0aGUgcm9sZSAoV0lQKTo8L3N0cm9uZz48L2gyPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+Q29tbXVuaXR5IHNpemUgYW5kIGVuZ2FnZW1lbnQ8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+Q3VzdG9tZXIgc3VwcG9ydCByZXNwb25zZSB0aW1lcyBhbmQgTlBTPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkNvbnRlbnQgcHVibGlzaGVkIGFuZCBoaXRzPC9wPjwvbGk+PC91bD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+8J+SnMKgV2UgYmVsaWV2ZSB0aGF0IHRvIGJ1aWxkIGEgcHJvZHVjdCB0aGF0IHdvcmtzIGZvciBhIGRpdmVyc2UgZ3JvdXAgb2YgcGVvcGxlLCB3ZSBuZWVkIGEgZGl2ZXJzZSB0ZWFtLiBTbywgd2Ugc3Ryb25nbHkgZW5jb3VyYWdlIGNhbmRpZGF0ZXMgb2YgYWxsIGRpZmZlcmVudCBwZXJzcGVjdGl2ZXMsIGV4cGVyaWVuY2VzLCBiYWNrZ3JvdW5kcyBhbmQgaWRlbnRpdGllcyB0byBhcHBseS4gV2XigJlyZSBjb21taXR0ZWQgdG8gaGlyaW5nIHBlb3BsZSByZWdhcmRsZXNzIG9mIHJhY2UsIHJlbGlnaW9uLCBjb2xvdXIsIG5hdGlvbmFsIG9yaWdpbiwgc2V4LCBzZXh1YWwgb3JpZW50YXRpb24sIGdlbmRlciBpZGVudGl0eSwgYWdlIG9yIGRpc2FiaWxpdHkuIEFuZCBvbmNlIHlvdSBqb2luIHVzLCB3ZeKAmXJlIGNvbW1pdHRlZCB0byBidWlsZGluZyBhbiBpbmNsdXNpdmUsIHN1cHBvcnRpdmUgcGxhY2UgZm9yIHlvdSB0byBkbyB0aGUgYmVzdCB3b3JrIG9mIHlvdXIgY2FyZWVyLjwvcD4iLCJkZXNjcmlwdGlvblBsYWluIjoiQUJPVVQgTElHSFREQVNIXG5cbkxpZ2h0ZGFzaCBpcyBhbiBvcGVuIHNvdXJjZSBCSSB0b29sIHRoYXQgaW5zdGFudGx5IHR1cm5zIHlvdXIgZGJ0IHByb2plY3QgaW50byBhIGZ1bGwtc3RhY2sgQkkgcGxhdGZvcm0uXG5cbldl4oCZcmUgYnVpbGRpbmcgdGhlIGJlc3QgQkkgdG9vbCBmb3IgYW5hbHl0aWNzIGVuZ2luZWVycyBieSBsZXR0aW5nIHRoZW0gbWFuYWdlIGV2ZXJ5dGhpbmcgYXMgY29kZSwgZnJvbSB0aGUgY29tZm9ydCBvZiB0aGVpciB0ZXh0IGVkaXRvciBhbmQgY29tbWFuZCBsaW5lLiBPbmNlIHRoZSBkYXRhIHRlYW0gaGFzIHdyaXR0ZW4gdGhlIG1ldHJpY3MsIHRoZW4gTGlnaHRkYXNoIGVuYWJsZXMgc2VsZi1zZXJ2ZSBmb3IgdGhlIGVudGlyZSBidXNpbmVzcywgc28geW91ciBkYXRhIGlzIGFjY2Vzc2libGUgZm9yIHRoZSB3aG9sZSB0ZWFtLlxuXG5XZeKAmXJlIGhlbHBpbmcgZGF0YSB0ZWFtcyBidWlsZCBkYXRhLWRyaXZlbiBjb21wYW5pZXMgc28gdGhleSBjYW4gbWFrZSBiZXR0ZXIgZGVjaXNpb25zLCBmYXN0ZXIuXG5cblxuSE9XIFdFIFdPUksgQVQgTElHSFREQVNIXG5cbiAtIFdlIGJ1aWxkIGluIHB1YmxpYywgYnkgZGVmYXVsdC4gV2XigJlyZSBhbiBvcGVuIHNvdXJjZSBwcm9kdWN0LCBzbyBoYXZpbmcgc2hhcmVkIGNvbnRleHQgaXMgaW1wb3J0YW50IHNvIHRoYXQgcGVvcGxlIGNhbiBjb250cmlidXRlIHRvIExpZ2h0ZGFzaC4gQXMgYSB0ZWFtLCB3ZSBhbHNvIHRoaW5rIHRoYXQgd2UgbWFrZSB0aGUgYmVzdCBkZWNpc2lvbnMgd2hlbiBldmVyeW9uZSBoYXMgYSBsb3Qgb2YgdGhlIHNhbWUgaW5mb3JtYXRpb24uIFdlIGRvbid0IG92ZXJzZWxsIGFuZCB1bmRlci1kZWxpdmVyOiB3ZSB3YW50IHRoZSBleHBlcmllbmNlIG9mIHVzaW5nIExpZ2h0ZGFzaCB0byBiZSBhcyBhd2Vzb21lIGFzIHRoZSBleHBlcmllbmNlIHdlJ3JlIHNlbGxpbmcuXG5cbiAtIFdlIGNoYWxsZW5nZSBwcm9ibGVtcywgbm90IHBlb3BsZS4gV2UgYXNrIG91cnNlbHZlcyDigJx3aHkgaXMgdGhpcyBicm9rZW4/4oCdIG5vdCDigJx3aG8gaXMgYnJlYWtpbmcgdGhpcz/igJ1cblxuIC0gV2XigJlyZSBoaWdobHkgY29sbGFib3JhdGl2ZS4gV2XigJlyZSBhIGdyb3VwIG9mIHBlb3BsZSB0aGF0IGFyZSBoYXBweSB3b3JraW5nIGluZGVwZW5kZW50bHksIGJ1dCBsb3ZlIGJlaW5nIHBhcnQgb2YgYSB0ZWFtLiAqKioqV2Ugbm90IG9ubHkgd29yayBvbiBwcm9ibGVtcyBhcyBhIHRlYW0sIGJ1dCB3ZSBhbHNvIGxpc3RlbiB0byB0aGUgZmVlZGJhY2sgZnJvbSBvdXIgY29tbXVuaXR5IGFuZCBvdXIgdXNlcnMuIFdlIGludmVzdCBpbiB0b29scyBhbmQgcHJvY2Vzc2VzIHRoYXQgYWxsb3cgdXMgdG8gZG8gdGhpcywgZXZlbiB3aGlsZSBmdWxseSByZW1vdGUuXG5cbiAtIFdlIGJpYXMgdG93YXJkcyBpbXBhY3QuIFdl4oCZZCByYXRoZXIgYnVpbGQgc29tZXRoaW5nIHRvIDgwJSBhbmQgZ2V0IGl0IGluIGZyb250IG9mIHVzZXJzIHNvIHdlIGNhbiBpdGVyYXRlIG9uIGZhc3QgZmVlZGJhY2sgdGhhbiBidWlsZCBzb21ldGhpbmcgdG8gMTAwJSBqdXN0IHRvIGZpbmQgb3V0IGl04oCZcyBub3QgdGhlIHJpZ2h0IHRoaW5nLiBXZSBzcGVuZCBhIGxvdCBvZiB0aW1lIHRoaW5raW5nIGFib3V0IGhvdyBvdXIgd29yayBzb2x2ZXMgcmVhbCB1c2VyIHByb2JsZW1zLiBXZSB3b3JrIG9uIHRoZSBoaWdoZXN0IGltcGFjdCBwcm9ibGVtcyBldmVuIGlmIHRoZXnigJlyZSBzb21ldGhpbmcgYSBiaXQg4oCcb3V0IG9mIHlvdXIgcmVtaXTigJ0uXG5cblxuQUJPVVQgVEhFIFJPTEVcblxuQXQgTGlnaHRkYXNoLCB3ZeKAmXJlIG9ic2Vzc2VkIHdpdGggdGhlIHN1Y2Nlc3Mgb2Ygb3VyIHVzZXJzLiBPdXIgZmFzdCBhbmQgdGVjaG5pY2FsIGFuYWx5dGljcyBzdXBwb3J0IGlzIG9uZSBvZiBvdXIgc3VwZXJwb3dlcnMgdG9kYXkuIEl0IGNvdmVycyBldmVyeXRoaW5nIGZyb20gYnVpbGRpbmcgZGFzaGJvYXJkcyBhbmQgd3JpdGluZyBTUUwgdG8gYW5hbHl0aWNzIGVuZ2luZWVyaW5nIGJlc3QgcHJhY3RpY2UuIElmIHlvdSBoYXZlIGEgcGFzc2lvbiBmb3IgaGVscGluZyB0ZWFtcyB3aW4gd2l0aCBkYXRhLCB3ZeKAmXJlIGxvb2tpbmcgZm9yIG91ciBmaXJzdCBBbmFseXRpY3MgRW5naW5lZXJpbmcgQWR2b2NhdGUgdG8gam9pbiB0aGUgTGlnaHRkYXNoIHRlYW0uXG5cbk91ciB1c2Vyc+KAmSBleHBlcmllbmNlIG9mIExpZ2h0ZGFzaCBnb2VzIGJleW9uZCBvdXIgcHJvZHVjdCBmZWF0dXJlcyBhbmQgaW5jbHVkZXMgZXZlcnkgdG91Y2hwb2ludCBhbmQgaW50ZXJhY3Rpb24gdGhleSBoYXZlIHdpdGggdGhlIGNvbW11bml0eSBhbmQgdGVhbS4gSW4gdGhpcyByb2xlLCB5b3XigJlsbCBiZSB0aGUgdm9pY2UgZm9yIG91ciBjb21tdW5pdHkgYW5kIHJlc3BvbnNpYmxlIGZvciBvdXIgdXNlcnPigJkgcXVlc3Rpb25zIHJlbGF0ZWQgdG8gTGlnaHRkYXNoLCBiZXN0IHByYWN0aWNlIGluIEJJIGFuZCBhbmFseXRpY3MgZW5naW5lZXJpbmcuXG5cblxuXG5cbkFSRUFTIE9GIFJFU1BPTlNJQklMSVRZOlxuXG4gLSBPYnNlc3Mgb3ZlciB0aGUgc3VjY2VzcyBvZiBvdXIgdXNlcnM6IE91ciB1c2Vyc+KAmSB3aW5zIGFyZSBvdXIgd2lucy4gV2Ugd2FudCB0byBrZWVwIGJ1aWxkaW5nIG9uIG91ciB0ZWNobmljYWwgc3VwcG9ydCB0aGF0IG91ciBjb21tdW5pdHkgYW5kIGN1c3RvbWVycyBrbm93IGFuZCBsb3ZlLiBZb3XigJlsbCBwcm92aWRlIGluLWRlcHRoLCBwZXJzb25hbGlzZWQgYW5zd2VycyBhbmQgcGFpciBwcm9ncmFtIHdpdGggdXNlcnMgdG8gc29sdmUgdGhlaXIgYW5hbHl0aWNzIHByb2JsZW1zIGFuZCBwdWxsIGluIG90aGVyIExpZ2h0ZGFzaCB0ZWFtIG1lbWJlcnMgd2hlbiBuZWVkZWQuXG5cbiAtIExpZ2h0ZGFzaCBjaGFtcGlvbjogWW914oCZbGwgYmUgdGhlIGdvLXRvIExpZ2h0ZGFzaCBwcm8gYXQgTGlnaHRkYXNoIGFuZCBpbiB0aGUgY29tbXVuaXR5LiBZb3XigJlsbCBrZWVwIHVwIHdpdGggb3VyIGxhdGVzdCBmZWF0dXJlcyBhbmQga25vdyBob3cgdG8gdXNlIHRoZW0gKHlvdeKAmWxsIGJlIHVzaW5nIExpZ2h0ZGFzaCBhdCBMaWdodGRhc2ggcmVndWxhcmx5ISkgYW5kIHlvdeKAmWxsIG1ha2Ugc3VyZSB0byBzaGFyZSB0aGlzIGtub3dsZWRnZSB3aXRoIHRoZSBjb21tdW5pdHkuIFlvdeKAmWxsIGFsc28gcmVwcmVzZW50IHRoZSBjb21wYW55IGF0IGNvbW11bml0eSBldmVudHMsIGNvbmZlcmVuY2VzLCBhbmQgbWVldCB1cHMuXG5cbiAtIFRlYWNoIGFuZCBzaGFyZTogQ3JlYXRlIGFuZCBkZWxpdmVyIHdvcmxkIGNsYXNzIHR1dG9yaWFscyBhbmQgZGVtb3MgZm9yIExpZ2h0ZGFzaCBhcyB3ZWxsIGFzIGV4YW1wbGVzIG9mIGJlc3QtcHJhY3RpY2UgZm9yIGRhdGEgYW5hbHl0aWNzLiBUaGVzZSBjb3VsZCBiZSBibG9nIHBvc3RzLCB2aWRlbyB0dXRvcmlhbHMsIG9yIGNvZGUgZXhhbXBsZXMuXG5cbiAtIENvbW11bml0eSBzdHJhdGVneTogQnVpbGRpbmcgYW5kIGV4ZWN1dGluZyBzdHJhdGVnaWVzIHRvIGdyb3cgYW5kIGVuZ2FnZSB0aGUgYW5hbHlzdCBjb21tdW5pdHkgYXJvdW5kIExpZ2h0ZGFzaC5cblxuXG5SRVFVSVJFTUVOVFM6XG5cbiAtIEV4cGVyaWVuY2Ugd2l0aCBidXNpbmVzcyBpbnRlbGxpZ2VuY2UgYW5kIGFuYWx5dGljcyBlbmdpbmVlcmluZ1xuXG4gLSBTdHJvbmcgdmVyYmFsIGFuZCB3cml0dGVuIGNvbW11bmljYXRpb24gc2tpbGxzXG5cbiAtIENvbWZvcnRhYmxlIHdpdGggZGJ0LCBTUUwsIGdpdCwgZGF0YSB2aXN1YWxpemF0aW9uLCBhbmQgdGhlIGNvbW1hbmQgbGluZVxuXG5cbktQSVMgT1dORUQgQlkgVEhFIFJPTEUgKFdJUCk6XG5cbiAtIENvbW11bml0eSBzaXplIGFuZCBlbmdhZ2VtZW50XG5cbiAtIEN1c3RvbWVyIHN1cHBvcnQgcmVzcG9uc2UgdGltZXMgYW5kIE5QU1xuXG4gLSBDb250ZW50IHB1Ymxpc2hlZCBhbmQgaGl0c1xuXG5cblxu8J+SnMKgV2UgYmVsaWV2ZSB0aGF0IHRvIGJ1aWxkIGEgcHJvZHVjdCB0aGF0IHdvcmtzIGZvciBhIGRpdmVyc2UgZ3JvdXAgb2YgcGVvcGxlLCB3ZSBuZWVkIGEgZGl2ZXJzZSB0ZWFtLiBTbywgd2Ugc3Ryb25nbHkgZW5jb3VyYWdlIGNhbmRpZGF0ZXMgb2YgYWxsIGRpZmZlcmVudCBwZXJzcGVjdGl2ZXMsIGV4cGVyaWVuY2VzLCBiYWNrZ3JvdW5kcyBhbmQgaWRlbnRpdGllcyB0byBhcHBseS4gV2XigJlyZSBjb21taXR0ZWQgdG8gaGlyaW5nIHBlb3BsZSByZWdhcmRsZXNzIG9mIHJhY2UsIHJlbGlnaW9uLCBjb2xvdXIsIG5hdGlvbmFsIG9yaWdpbiwgc2V4LCBzZXh1YWwgb3JpZW50YXRpb24sIGdlbmRlciBpZGVudGl0eSwgYWdlIG9yIGRpc2FiaWxpdHkuIEFuZCBvbmNlIHlvdSBqb2luIHVzLCB3ZeKAmXJlIGNvbW1pdHRlZCB0byBidWlsZGluZyBhbiBpbmNsdXNpdmUsIHN1cHBvcnRpdmUgcGxhY2UgZm9yIHlvdSB0byBkbyB0aGUgYmVzdCB3b3JrIG9mIHlvdXIgY2FyZWVyLiIsImNvbXBlbnNhdGlvbiI6eyJjb21wZW5zYXRpb25UaWVyU3VtbWFyeSI6IsKjNjBLIOKAkyDCozk1SyDigKIgMC4xJSDigJMgMC4zJSIsInNjcmFwZWFibGVDb21wZW5zYXRpb25TYWxhcnlTdW1tYXJ5IjoiwqM2MEsgLSDCozk1SyIsImNvbXBlbnNhdGlvblRpZXJzIjpbeyJpZCI6IjdjYzdiOWJiLTNmODctNGE5Yy04ZTQzLTYwNDU2NmRiYmI1NCIsInRpZXJTdW1tYXJ5IjoiwqM2MEsg4oCTIMKjOTVLIOKAoiAwLjElIOKAkyAwLjMlIiwidGl0bGUiOm51bGwsImFkZGl0aW9uYWxJbmZvcm1hdGlvbiI6bnVsbCwiY29tcG9uZW50cyI6W3siaWQiOiIxM2Q2MmJiYy0xYzE1LTRmZjktOTQ4MC1mZWVmNzJlOTg0N2EiLCJzdW1tYXJ5IjoiMC4xJSDigJMgMC4zJSIsImNvbXBlbnNhdGlvblR5cGUiOiJFcXVpdHlQZXJjZW50YWdlIiwiaW50ZXJ2YWwiOiJOT05FIiwiY3VycmVuY3lDb2RlIjpudWxsLCJtaW5WYWx1ZSI6MC4xLCJtYXhWYWx1ZSI6MC4zfSx7ImlkIjoiNWMyNmIyNzEtZGQ4Yi00NzQ5LWFjZDMtYmUxYTNiOTRlODcwIiwic3VtbWFyeSI6IsKjNjBLIOKAkyDCozk1SyIsImNvbXBlbnNhdGlvblR5cGUiOiJTYWxhcnkiLCJpbnRlcnZhbCI6IjEgWUVBUiIsImN1cnJlbmN5Q29kZSI6IkdCUCIsIm1pblZhbHVlIjo2MDAwMCwibWF4VmFsdWUiOjk1MDAwfV19XSwic3VtbWFyeUNvbXBvbmVudHMiOlt7ImNvbXBlbnNhdGlvblR5cGUiOiJFcXVpdHlQZXJjZW50YWdlIiwiaW50ZXJ2YWwiOiJOT05FIiwiY3VycmVuY3lDb2RlIjpudWxsLCJtaW5WYWx1ZSI6MC4xLCJtYXhWYWx1ZSI6MC4zfSx7ImNvbXBlbnNhdGlvblR5cGUiOiJTYWxhcnkiLCJpbnRlcnZhbCI6IjEgWUVBUiIsImN1cnJlbmN5Q29kZSI6IkdCUCIsIm1pblZhbHVlIjo2MDAwMCwibWF4VmFsdWUiOjk1MDAwfV19fSx7ImlkIjoiOWVmYTI5MmEtY2MzNC00Mzg4LTkwYTItMmJlZDUxMjZhY2U0IiwidGl0bGUiOiJGdWxsIFN0YWNrIEVuZ2luZWVyIiwiZGVwYXJ0bWVudCI6IkxpZ2h0ZGFzaCIsInRlYW0iOiJMaWdodGRhc2giLCJlbXBsb3ltZW50VHlwZSI6IkZ1bGxUaW1lIiwibG9jYXRpb24iOiJSZW1vdGUiLCJzaG91bGREaXNwbGF5Q29tcGVuc2F0aW9uT25Kb2JQb3N0aW5ncyI6dHJ1ZSwic2Vjb25kYXJ5TG9jYXRpb25zIjpbXSwicHVibGlzaGVkQXQiOiIyMDI0LTAyLTI4VDEyOjAyOjMwLjAzMSswMDowMCIsImlzTGlzdGVkIjp0cnVlLCJpc1JlbW90ZSI6dHJ1ZSwiYWRkcmVzcyI6eyJwb3N0YWxBZGRyZXNzIjp7ImFkZHJlc3NDb3VudHJ5IjoiVW5pdGVkIEtpbmdkb20ifX0sImpvYlVybCI6Imh0dHBzOi8vam9icy5hc2hieWhxLmNvbS9saWdodGRhc2gvOWVmYTI5MmEtY2MzNC00Mzg4LTkwYTItMmJlZDUxMjZhY2U0IiwiYXBwbHlVcmwiOiJodHRwczovL2pvYnMuYXNoYnlocS5jb20vbGlnaHRkYXNoLzllZmEyOTJhLWNjMzQtNDM4OC05MGEyLTJiZWQ1MTI2YWNlNC9hcHBsaWNhdGlvbiIsImRlc2NyaXB0aW9uSHRtbCI6IjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPldlJ3JlIGxvb2tpbmcgZm9yIGEgZnVsbC1zdGFjayBlbmdpbmVlciB0byBqb2luIG91ciBzbWFsbCBhbmQgZ3Jvd2luZyB0ZWFtLjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5XZSB2YWx1ZSBzbWFsbCBhbmQgaGlnaCBwZXJmb3JtaW5nIHRlYW1zIGFuZCBhcmUgbG9va2luZyBmb3IgYSBmdWxsLXRpbWUgc29mdHdhcmUgZW5naW5lZXIgdG8gam9pbiBhbG9uZ3NpZGUgdGhlIGN1cnJlbnQgY29yZSB0ZWFtLiBUaGUgcmVzcG9uc2liaWxpdGllcyB3aWxsIGdvIGJleW9uZCBqdXN0IHRoZSB0ZWNobmljYWwgc3RhY2ssIGFuZCB5b3UnbGwgYmUgZXhwZWN0ZWQgdG8gY29udHJpYnV0ZSB0byB0aGUgY29tcGFueSBzdHJhdGVneSBhbmQgd2lsbCBoYXZlIGEgbG90IG9mIGluZmx1ZW5jZSBvdmVyIHRoZSBwcm9kdWN0IGFuZCBjb21wYW55IGN1bHR1cmUgZ29pbmcgZm9yd2FyZC48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PC9wPjxoMT5Tb21lIHRoaW5ncyB3ZSdyZSBsb29raW5nIGZvcjo8L2gxPjx1bCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW91IGhhdmUgZXhwZXJpZW5jZSBvciBpbnRlcmVzdCBpbiBidWlsZGluZyBpbnRlcmFjdGl2ZSBwcm9kdWN0cyB0aGF0IHRlYW1zIGxvdmU6IHlvdSdyZSBleGNpdGVkIGFib3V0IGJ1aWxkaW5nIHRoZSBtb3N0IHVzZXItZnJpZW5kbHkgcHJvZHVjdHMgZm9yIHRlYW1zIHRvIHRha2UgdGhlaXIgcmF3IGRhdGEgYW5kIHR1cm4gaXQgaW50byBpbnNpZ2h0cy48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW91IGFwcHJlY2lhdGUgZ29vZCBkZXNpZ24gKFVJL1VYKSBhbmQgYXJlIHBhc3Npb25hdGUgYWJvdXQgYnVpbGRpbmcgcHJvZHVjdHMgdGhhdCBwZW9wbGUgbG92ZSB0byB1c2U8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW91J3JlIGEgZmFudGFzdGljIGNvbW11bmljYXRvciwgZXNwZWNpYWxseSBpbiBhIHJlbW90ZSB0ZWFtIGFuZCBhcmUgaGFwcHkgdG8gY29udGludW91c2x5IGNoYWxsZW5nZSBleGlzdGluZyBpZGVhczwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UgaGF2ZSBleHBlcmllbmNlIG9yIGFuIGludGVyZXN0IGluIG9wZW4gc291cmNlIHByb2plY3RzPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPllvdSdyZSB0aG91Z2h0ZnVsIGFib3V0IGNyZWF0aW5nIGFuZCBtYWludGFpbmluZyBhIHdvcmxkLWNsYXNzIGVuZ2luZWVyaW5nIGN1bHR1cmU8L3A+PC9saT48L3VsPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjwvcD48aDE+V2hhdCB0aGUgam9iIGludm9sdmVzOjwvaDE+PHVsIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5CdWlsZCBhbmQgb3duIGZlYXR1cmVzIGZyb20gc3RhcnQgdG8gZmluaXNoOiBwbGFuLCBidWlsZCwgdGVzdCwgZGVwbG95LCBpdGVyYXRlPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPldvcmsgaW4gYSBzbWFsbCBoaWdoIHBlcmZvcm1pbmcgdGVhbSB3aXRoIGEgbG90IG9mIGNvbGxhYm9yYXRpb24gYW5kIGdldHRpbmcgZmVlZGJhY2sgZGlyZWN0bHkgZnJvbSBvdXIgdXNlcnMhPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkZyb20gdGltZSB0byB0aW1lLCB3ZSdsbCBleHBlY3QgeW91IHRvIHByb2R1Y2UgY29udGVudCBvciBwcmVzZW50IHRvIG91ciBjb21tdW5pdHkuIFdlJ3JlIGJpZyBiZWxpZXZlcnMgaW4gZW5nYWdpbmcgd2l0aCBvdXIgY29tbXVuaXR5IGFzIG11Y2ggYXMgcG9zc2libGUuPC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPkludGVyYWN0aW5nIHdpdGggb3VyIHVzZXJzIGluIHRoZSBjb21tdW5pdHkgKHRocm91Z2ggU2xhY2ssIFR3aXR0ZXIgb3IgR2l0aHViKSBhbmQgcmV2aWV3aW5nIHRoZWlyIGlzc3VlcyBhbmQgdXNpbmcgdGhlIGZlZWRiYWNrIHRvIHByaW9yaXRpc2Ugb3VyIHdvcms8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+SGF2aW5nIGFuIG93bmVyc2hpcCBtaW5kc2V0OiBiZWluZyBjb21mb3J0YWJsZSB3aXRoIGJvdGggcmVzcG9uc2liaWxpdHkgYW5kIGFjY291bnRhYmlsaXR5PC9wPjwvbGk+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPllvdeKAmXJlIGNvbWZvcnRhYmxlIHdvcmtpbmcgaW4gYSBuZXcsIHNtYWxsIHRlYW0gdGhhdCBpcyByYXBpZGx5IGdyb3dpbmcg4oCTIHlvdeKAmWxsIG5lZWQgdG8gYmUgY29tZm9ydGFibGUgd2hlbiBmYWNlZCB3aXRoIGEgbG90IG9mIGFtYmlndWl0eSwgYm90aCB0ZWNobmljYWxseSBhbmQgb3JnYW5pemF0aW9uYWxseSE8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+WW91J3JlIGEgZmFudGFzdGljIGNvbW11bmljYXRvciwgZXNwZWNpYWxseSBpbiBhIHJlbW90ZSB0ZWFtIGFuZCBhcmUgaGFwcHkgdG8gY29udGludW91c2x5IGNoYWxsZW5nZSBleGlzdGluZyBpZGVhczwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj5Zb3UgZmVlbCBjb25maWRlbnQgbWFraW5nIHRyYWRlLW9mZiBkZWNpc2lvbnMgYmV0d2VlbiBtb3ZpbmcgcXVpY2tseSBhbmQgbGF1bmNoaW5nIGZlYXR1cmVzIHZlcnN1cyBvcHRpbWl6aW5nIGZvciBlbmdpbmVlcmluZyBleGNlbGxlbmNlLiBZb3XigJlyZSBoYXBweSBwdXR0aW5nIHNvbWV0aGluZyBvdXQgd2hlbiBpdOKAmXMg4oCcODAlIGRvbmUu4oCdPC9wPjwvbGk+PC91bD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48ZW0+UmVzZWFyY2ggaGFzIHNob3duIHRoYXQgd29tZW4gYXJlIGxlc3MgbGlrZWx5IHRoYW4gbWVuIHRvIGFwcGx5IGZvciBhIHJvbGUgaWYgdGhleSBkb27igJl0IGhhdmUgZXhwZXJpZW5jZSBpbiAxMDAlIG9mIHRoZSByZXF1aXJlbWVudHMgb3V0bGluZWQgaW4gYSBqb2IgZGVzY3JpcHRpb24uIFBsZWFzZSBrbm93IHRoYXQgZXZlbiBpZiB5b3UgZG9u4oCZdCBoYXZlIGV4cGVyaWVuY2UgaW4gYWxsIHRoZSBhcmVhcyBhYm92ZSwgYnV0IHRoaW5rIHlvdSBjb3VsZCBkbyBhIGdyZWF0IGpvYiBhbmQgYXJlIGV4Y2l0ZWQgYWJvdXQgc2hhcGluZyBjb21wYW55IGN1bHR1cmUsIGZpbmRpbmcgZ3JlYXQgcGVvcGxlIGFuZCBidWlsZGluZyBncmVhdCB0ZWFtcywgd2XigJlkIGxvdmUgdG8gaGVhciBmcm9tIHlvdSE8L2VtPjwvcD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PGgyPkhvdyB3ZSB3b3JrIGF0IExpZ2h0ZGFzaDwvaDI+PHVsIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPldlIGJ1aWxkIGluIHB1YmxpYywgYnkgZGVmYXVsdC48L3N0cm9uZz4gV2XigJlyZSBhbiBvcGVuIHNvdXJjZSBwcm9kdWN0LCBzbyBoYXZpbmcgc2hhcmVkIGNvbnRleHQgaXMgaW1wb3J0YW50IHNvIHRoYXQgcGVvcGxlIGNhbiBjb250cmlidXRlIGVmZmVjdGl2ZWx5IHRvIExpZ2h0ZGFzaC4gQXMgYSB0ZWFtLCB3ZSBhbHNvIHRoaW5rIHRoYXQgd2UgbWFrZSB0aGUgPGVtPjxzdHJvbmc+YmVzdDwvc3Ryb25nPjwvZW0+IGRlY2lzaW9ucyB3aGVuIGV2ZXJ5b25lIGhhcyBhIGxvdCBvZiB0aGUgc2FtZSBpbmZvcm1hdGlvbi4gV2UgZG9uJ3Qgb3ZlcnNlbGwgYW5kIHVuZGVyLWRlbGl2ZXI6IHdlIHdhbnQgdGhlIGV4cGVyaWVuY2Ugb2YgdXNpbmcgTGlnaHRkYXNoIHRvIGJlIGFzIGF3ZXNvbWUgYXMgdGhlIGV4cGVyaWVuY2Ugd2UncmUgc2VsbGluZy48L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PHN0cm9uZz5XZSBjaGFsbGVuZ2UgcHJvYmxlbXMsIG5vdCBwZW9wbGUuPC9zdHJvbmc+IFdlIGFzayBvdXJzZWx2ZXMg4oCcPGVtPjxzdHJvbmc+d2h5PC9zdHJvbmc+PC9lbT4gaXMgdGhpcyBicm9rZW4/4oCdIG5vdCDigJw8ZW0+PHN0cm9uZz53aG88L3N0cm9uZz48L2VtPiBpcyBicmVha2luZyB0aGlzP+KAnTwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPldl4oCZcmUgaGlnaGx5IGNvbGxhYm9yYXRpdmUuPC9zdHJvbmc+IFdl4oCZcmUgYSBncm91cCBvZiBwZW9wbGUgdGhhdCBhcmUgaGFwcHkgd29ya2luZyBpbmRlcGVuZGVudGx5LCBidXQgbG92ZSBiZWluZyBwYXJ0IG9mIGEgdGVhbS4gKioqKldlIG5vdCBvbmx5IHdvcmsgb24gcHJvYmxlbXMgYXMgYSB0ZWFtLCBidXQgd2UgYWxzbyBsaXN0ZW4gdG8gdGhlIGZlZWRiYWNrIGZyb20gb3VyIGNvbW11bml0eSBhbmQgb3VyIHVzZXJzLiBXZSBpbnZlc3QgaW4gdG9vbHMgYW5kIHByb2Nlc3NlcyB0aGF0IGFsbG93IHVzIHRvIGRvIHRoaXMsIGV2ZW4gd2hpbGUgZnVsbHkgcmVtb3RlLjwvcD48L2xpPjxsaT48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48c3Ryb25nPldlIGJpYXMgdG93YXJkcyBpbXBhY3QuPC9zdHJvbmc+IFdl4oCZZCByYXRoZXIgYnVpbGQgc29tZXRoaW5nIHRvIDgwJSBhbmQgZ2V0IGl0IGluIGZyb250IG9mIHVzZXJzIHNvIHdlIGNhbiBpdGVyYXRlIG9uIGZhc3QgZmVlZGJhY2sgdGhhbiBidWlsZCBzb21ldGhpbmcgdG8gMTAwJSBqdXN0IHRvIGZpbmQgb3V0IGl04oCZcyBub3QgdGhlIHJpZ2h0IHRoaW5nLiBXZSBzcGVuZCBhIGxvdCBvZiB0aW1lIHRoaW5raW5nIGFib3V0IGhvdyBvdXIgd29yayBzb2x2ZXMgcmVhbCB1c2VyIHByb2JsZW1zLiBXZSB3b3JrIG9uIHRoZSBoaWdoZXN0IGltcGFjdCBwcm9ibGVtcyBldmVuIGlmIHRoZXnigJlyZSBzb21ldGhpbmcgYSBiaXQg4oCcb3V0IG9mIHlvdXIgcmVtaXTigJ0uPC9wPjwvbGk+PC91bD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PGgxPk91ciB0ZWNoIHN0YWNrOjwvaDE+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+V2hpbGUgd2UgZG9uJ3QgZXhwZWN0IHlvdSB0byBoYXZlIHVzZWQgYWxsIHRoZSBjb21wb25lbnRzIG9mIG91ciBzdGFjaywgaXQnZCBiZSBncmVhdCB0byBrbm93IHdoaWNoIHBhcnRzIG9mIGl0IHlvdSdyZSBmYW1pbGlhciB3aXRoOjwvcD48dWwgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PGxpPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPlByaW1hcnkgc3RhY2s6IFR5cGVzY3JpcHQsIFJlYWN0LCBOb2RlLCBTUUw8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+RnJhbWV3b3JrczogZXhwcmVzcywgcmVhY3QtaG9va3M8L3A+PC9saT48bGk+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+SW5mcmFzdHJ1Y3R1cmU6IERvY2tlciwgR0NQPC9wPjwvbGk+PC91bD48cCBzdHlsZT1cIm1pbi1oZWlnaHQ6MS41ZW1cIj48L3A+PHAgc3R5bGU9XCJtaW4taGVpZ2h0OjEuNWVtXCI+PC9wPjxwIHN0eWxlPVwibWluLWhlaWdodDoxLjVlbVwiPvCfkpzCoFdlIGJlbGlldmUgdGhhdCB0byBidWlsZCBhIHByb2R1Y3QgdGhhdCB3b3JrcyBmb3IgYSBkaXZlcnNlIGdyb3VwIG9mIHBlb3BsZSwgd2UgbmVlZCBhIGRpdmVyc2UgdGVhbS4gU28sIHdlIHN0cm9uZ2x5IGVuY291cmFnZSBjYW5kaWRhdGVzIG9mIGFsbCBkaWZmZXJlbnQgcGVyc3BlY3RpdmVzLCBleHBlcmllbmNlcywgYmFja2dyb3VuZHMgYW5kIGlkZW50aXRpZXMgdG8gYXBwbHkuIFdl4oCZcmUgY29tbWl0dGVkIHRvIGhpcmluZyBwZW9wbGUgcmVnYXJkbGVzcyBvZiByYWNlLCByZWxpZ2lvbiwgY29sb3VyLCBuYXRpb25hbCBvcmlnaW4sIHNleCwgc2V4dWFsIG9yaWVudGF0aW9uLCBnZW5kZXIgaWRlbnRpdHksIGFnZSBvciBkaXNhYmlsaXR5LiBBbmQgb25jZSB5b3Ugam9pbiB1cywgd2XigJlyZSBjb21taXR0ZWQgdG8gYnVpbGRpbmcgYW4gaW5jbHVzaXZlLCBzdXBwb3J0aXZlIHBsYWNlIGZvciB5b3UgdG8gZG8gdGhlIGJlc3Qgd29yayBvZiB5b3VyIGNhcmVlci48L3A+IiwiZGVzY3JpcHRpb25QbGFpbiI6IldlJ3JlIGxvb2tpbmcgZm9yIGEgZnVsbC1zdGFjayBlbmdpbmVlciB0byBqb2luIG91ciBzbWFsbCBhbmQgZ3Jvd2luZyB0ZWFtLlxuXG5XZSB2YWx1ZSBzbWFsbCBhbmQgaGlnaCBwZXJmb3JtaW5nIHRlYW1zIGFuZCBhcmUgbG9va2luZyBmb3IgYSBmdWxsLXRpbWUgc29mdHdhcmUgZW5naW5lZXIgdG8gam9pbiBhbG9uZ3NpZGUgdGhlIGN1cnJlbnQgY29yZSB0ZWFtLiBUaGUgcmVzcG9uc2liaWxpdGllcyB3aWxsIGdvIGJleW9uZCBqdXN0IHRoZSB0ZWNobmljYWwgc3RhY2ssIGFuZCB5b3UnbGwgYmUgZXhwZWN0ZWQgdG8gY29udHJpYnV0ZSB0byB0aGUgY29tcGFueSBzdHJhdGVneSBhbmQgd2lsbCBoYXZlIGEgbG90IG9mIGluZmx1ZW5jZSBvdmVyIHRoZSBwcm9kdWN0IGFuZCBjb21wYW55IGN1bHR1cmUgZ29pbmcgZm9yd2FyZC5cblxuXG5cblxuU09NRSBUSElOR1MgV0UnUkUgTE9PS0lORyBGT1I6XG5cbiAtIFlvdSBoYXZlIGV4cGVyaWVuY2Ugb3IgaW50ZXJlc3QgaW4gYnVpbGRpbmcgaW50ZXJhY3RpdmUgcHJvZHVjdHMgdGhhdCB0ZWFtcyBsb3ZlOiB5b3UncmUgZXhjaXRlZCBhYm91dCBidWlsZGluZyB0aGUgbW9zdCB1c2VyLWZyaWVuZGx5IHByb2R1Y3RzIGZvciB0ZWFtcyB0byB0YWtlIHRoZWlyIHJhdyBkYXRhIGFuZCB0dXJuIGl0IGludG8gaW5zaWdodHMuXG5cbiAtIFlvdSBhcHByZWNpYXRlIGdvb2QgZGVzaWduIChVSS9VWCkgYW5kIGFyZSBwYXNzaW9uYXRlIGFib3V0IGJ1aWxkaW5nIHByb2R1Y3RzIHRoYXQgcGVvcGxlIGxvdmUgdG8gdXNlXG5cbiAtIFlvdSdyZSBhIGZhbnRhc3RpYyBjb21tdW5pY2F0b3IsIGVzcGVjaWFsbHkgaW4gYSByZW1vdGUgdGVhbSBhbmQgYXJlIGhhcHB5IHRvIGNvbnRpbnVvdXNseSBjaGFsbGVuZ2UgZXhpc3RpbmcgaWRlYXNcblxuIC0gWW91IGhhdmUgZXhwZXJpZW5jZSBvciBhbiBpbnRlcmVzdCBpbiBvcGVuIHNvdXJjZSBwcm9qZWN0c1xuXG4gLSBZb3UncmUgdGhvdWdodGZ1bCBhYm91dCBjcmVhdGluZyBhbmQgbWFpbnRhaW5pbmcgYSB3b3JsZC1jbGFzcyBlbmdpbmVlcmluZyBjdWx0dXJlXG5cblxuXG5cbldIQVQgVEhFIEpPQiBJTlZPTFZFUzpcblxuIC0gQnVpbGQgYW5kIG93biBmZWF0dXJlcyBmcm9tIHN0YXJ0IHRvIGZpbmlzaDogcGxhbiwgYnVpbGQsIHRlc3QsIGRlcGxveSwgaXRlcmF0ZVxuXG4gLSBXb3JrIGluIGEgc21hbGwgaGlnaCBwZXJmb3JtaW5nIHRlYW0gd2l0aCBhIGxvdCBvZiBjb2xsYWJvcmF0aW9uIGFuZCBnZXR0aW5nIGZlZWRiYWNrIGRpcmVjdGx5IGZyb20gb3VyIHVzZXJzIVxuXG4gLSBGcm9tIHRpbWUgdG8gdGltZSwgd2UnbGwgZXhwZWN0IHlvdSB0byBwcm9kdWNlIGNvbnRlbnQgb3IgcHJlc2VudCB0byBvdXIgY29tbXVuaXR5LiBXZSdyZSBiaWcgYmVsaWV2ZXJzIGluIGVuZ2FnaW5nIHdpdGggb3VyIGNvbW11bml0eSBhcyBtdWNoIGFzIHBvc3NpYmxlLlxuXG4gLSBJbnRlcmFjdGluZyB3aXRoIG91ciB1c2VycyBpbiB0aGUgY29tbXVuaXR5ICh0aHJvdWdoIFNsYWNrLCBUd2l0dGVyIG9yIEdpdGh1YikgYW5kIHJldmlld2luZyB0aGVpciBpc3N1ZXMgYW5kIHVzaW5nIHRoZSBmZWVkYmFjayB0byBwcmlvcml0aXNlIG91ciB3b3JrXG5cbiAtIEhhdmluZyBhbiBvd25lcnNoaXAgbWluZHNldDogYmVpbmcgY29tZm9ydGFibGUgd2l0aCBib3RoIHJlc3BvbnNpYmlsaXR5IGFuZCBhY2NvdW50YWJpbGl0eVxuXG4gLSBZb3XigJlyZSBjb21mb3J0YWJsZSB3b3JraW5nIGluIGEgbmV3LCBzbWFsbCB0ZWFtIHRoYXQgaXMgcmFwaWRseSBncm93aW5nIOKAkyB5b3XigJlsbCBuZWVkIHRvIGJlIGNvbWZvcnRhYmxlIHdoZW4gZmFjZWQgd2l0aCBhIGxvdCBvZiBhbWJpZ3VpdHksIGJvdGggdGVjaG5pY2FsbHkgYW5kIG9yZ2FuaXphdGlvbmFsbHkhXG5cbiAtIFlvdSdyZSBhIGZhbnRhc3RpYyBjb21tdW5pY2F0b3IsIGVzcGVjaWFsbHkgaW4gYSByZW1vdGUgdGVhbSBhbmQgYXJlIGhhcHB5IHRvIGNvbnRpbnVvdXNseSBjaGFsbGVuZ2UgZXhpc3RpbmcgaWRlYXNcblxuIC0gWW91IGZlZWwgY29uZmlkZW50IG1ha2luZyB0cmFkZS1vZmYgZGVjaXNpb25zIGJldHdlZW4gbW92aW5nIHF1aWNrbHkgYW5kIGxhdW5jaGluZyBmZWF0dXJlcyB2ZXJzdXMgb3B0aW1pemluZyBmb3IgZW5naW5lZXJpbmcgZXhjZWxsZW5jZS4gWW914oCZcmUgaGFwcHkgcHV0dGluZyBzb21ldGhpbmcgb3V0IHdoZW4gaXTigJlzIOKAnDgwJSBkb25lLuKAnVxuXG5SZXNlYXJjaCBoYXMgc2hvd24gdGhhdCB3b21lbiBhcmUgbGVzcyBsaWtlbHkgdGhhbiBtZW4gdG8gYXBwbHkgZm9yIGEgcm9sZSBpZiB0aGV5IGRvbuKAmXQgaGF2ZSBleHBlcmllbmNlIGluIDEwMCUgb2YgdGhlIHJlcXVpcmVtZW50cyBvdXRsaW5lZCBpbiBhIGpvYiBkZXNjcmlwdGlvbi4gUGxlYXNlIGtub3cgdGhhdCBldmVuIGlmIHlvdSBkb27igJl0IGhhdmUgZXhwZXJpZW5jZSBpbiBhbGwgdGhlIGFyZWFzIGFib3ZlLCBidXQgdGhpbmsgeW91IGNvdWxkIGRvIGEgZ3JlYXQgam9iIGFuZCBhcmUgZXhjaXRlZCBhYm91dCBzaGFwaW5nIGNvbXBhbnkgY3VsdHVyZSwgZmluZGluZyBncmVhdCBwZW9wbGUgYW5kIGJ1aWxkaW5nIGdyZWF0IHRlYW1zLCB3ZeKAmWQgbG92ZSB0byBoZWFyIGZyb20geW91IVxuXG5cblxuXG5IT1cgV0UgV09SSyBBVCBMSUdIVERBU0hcblxuIC0gV2UgYnVpbGQgaW4gcHVibGljLCBieSBkZWZhdWx0LiBXZeKAmXJlIGFuIG9wZW4gc291cmNlIHByb2R1Y3QsIHNvIGhhdmluZyBzaGFyZWQgY29udGV4dCBpcyBpbXBvcnRhbnQgc28gdGhhdCBwZW9wbGUgY2FuIGNvbnRyaWJ1dGUgZWZmZWN0aXZlbHkgdG8gTGlnaHRkYXNoLiBBcyBhIHRlYW0sIHdlIGFsc28gdGhpbmsgdGhhdCB3ZSBtYWtlIHRoZSBiZXN0IGRlY2lzaW9ucyB3aGVuIGV2ZXJ5b25lIGhhcyBhIGxvdCBvZiB0aGUgc2FtZSBpbmZvcm1hdGlvbi4gV2UgZG9uJ3Qgb3ZlcnNlbGwgYW5kIHVuZGVyLWRlbGl2ZXI6IHdlIHdhbnQgdGhlIGV4cGVyaWVuY2Ugb2YgdXNpbmcgTGlnaHRkYXNoIHRvIGJlIGFzIGF3ZXNvbWUgYXMgdGhlIGV4cGVyaWVuY2Ugd2UncmUgc2VsbGluZy5cblxuIC0gV2UgY2hhbGxlbmdlIHByb2JsZW1zLCBub3QgcGVvcGxlLiBXZSBhc2sgb3Vyc2VsdmVzIOKAnHdoeSBpcyB0aGlzIGJyb2tlbj/igJ0gbm90IOKAnHdobyBpcyBicmVha2luZyB0aGlzP+KAnVxuXG4gLSBXZeKAmXJlIGhpZ2hseSBjb2xsYWJvcmF0aXZlLiBXZeKAmXJlIGEgZ3JvdXAgb2YgcGVvcGxlIHRoYXQgYXJlIGhhcHB5IHdvcmtpbmcgaW5kZXBlbmRlbnRseSwgYnV0IGxvdmUgYmVpbmcgcGFydCBvZiBhIHRlYW0uICoqKipXZSBub3Qgb25seSB3b3JrIG9uIHByb2JsZW1zIGFzIGEgdGVhbSwgYnV0IHdlIGFsc28gbGlzdGVuIHRvIHRoZSBmZWVkYmFjayBmcm9tIG91ciBjb21tdW5pdHkgYW5kIG91ciB1c2Vycy4gV2UgaW52ZXN0IGluIHRvb2xzIGFuZCBwcm9jZXNzZXMgdGhhdCBhbGxvdyB1cyB0byBkbyB0aGlzLCBldmVuIHdoaWxlIGZ1bGx5IHJlbW90ZS5cblxuIC0gV2UgYmlhcyB0b3dhcmRzIGltcGFjdC4gV2XigJlkIHJhdGhlciBidWlsZCBzb21ldGhpbmcgdG8gODAlIGFuZCBnZXQgaXQgaW4gZnJvbnQgb2YgdXNlcnMgc28gd2UgY2FuIGl0ZXJhdGUgb24gZmFzdCBmZWVkYmFjayB0aGFuIGJ1aWxkIHNvbWV0aGluZyB0byAxMDAlIGp1c3QgdG8gZmluZCBvdXQgaXTigJlzIG5vdCB0aGUgcmlnaHQgdGhpbmcuIFdlIHNwZW5kIGEgbG90IG9mIHRpbWUgdGhpbmtpbmcgYWJvdXQgaG93IG91ciB3b3JrIHNvbHZlcyByZWFsIHVzZXIgcHJvYmxlbXMuIFdlIHdvcmsgb24gdGhlIGhpZ2hlc3QgaW1wYWN0IHByb2JsZW1zIGV2ZW4gaWYgdGhleeKAmXJlIHNvbWV0aGluZyBhIGJpdCDigJxvdXQgb2YgeW91ciByZW1pdOKAnS5cblxuXG5cblxuT1VSIFRFQ0ggU1RBQ0s6XG5cbldoaWxlIHdlIGRvbid0IGV4cGVjdCB5b3UgdG8gaGF2ZSB1c2VkIGFsbCB0aGUgY29tcG9uZW50cyBvZiBvdXIgc3RhY2ssIGl0J2QgYmUgZ3JlYXQgdG8ga25vdyB3aGljaCBwYXJ0cyBvZiBpdCB5b3UncmUgZmFtaWxpYXIgd2l0aDpcblxuIC0gUHJpbWFyeSBzdGFjazogVHlwZXNjcmlwdCwgUmVhY3QsIE5vZGUsIFNRTFxuXG4gLSBGcmFtZXdvcmtzOiBleHByZXNzLCByZWFjdC1ob29rc1xuXG4gLSBJbmZyYXN0cnVjdHVyZTogRG9ja2VyLCBHQ1BcblxuXG5cblxuXG7wn5KcwqBXZSBiZWxpZXZlIHRoYXQgdG8gYnVpbGQgYSBwcm9kdWN0IHRoYXQgd29ya3MgZm9yIGEgZGl2ZXJzZSBncm91cCBvZiBwZW9wbGUsIHdlIG5lZWQgYSBkaXZlcnNlIHRlYW0uIFNvLCB3ZSBzdHJvbmdseSBlbmNvdXJhZ2UgY2FuZGlkYXRlcyBvZiBhbGwgZGlmZmVyZW50IHBlcnNwZWN0aXZlcywgZXhwZXJpZW5jZXMsIGJhY2tncm91bmRzIGFuZCBpZGVudGl0aWVzIHRvIGFwcGx5LiBXZeKAmXJlIGNvbW1pdHRlZCB0byBoaXJpbmcgcGVvcGxlIHJlZ2FyZGxlc3Mgb2YgcmFjZSwgcmVsaWdpb24sIGNvbG91ciwgbmF0aW9uYWwgb3JpZ2luLCBzZXgsIHNleHVhbCBvcmllbnRhdGlvbiwgZ2VuZGVyIGlkZW50aXR5LCBhZ2Ugb3IgZGlzYWJpbGl0eS4gQW5kIG9uY2UgeW91IGpvaW4gdXMsIHdl4oCZcmUgY29tbWl0dGVkIHRvIGJ1aWxkaW5nIGFuIGluY2x1c2l2ZSwgc3VwcG9ydGl2ZSBwbGFjZSBmb3IgeW91IHRvIGRvIHRoZSBiZXN0IHdvcmsgb2YgeW91ciBjYXJlZXIuIiwiY29tcGVuc2F0aW9uIjp7ImNvbXBlbnNhdGlvblRpZXJTdW1tYXJ5IjoiwqM2MEsg4oCTIMKjMTEwSyDigKIgMC4xJSDigJMgMC4zJSIsInNjcmFwZWFibGVDb21wZW5zYXRpb25TYWxhcnlTdW1tYXJ5IjoiwqM2MEsgLSDCozExMEsiLCJjb21wZW5zYXRpb25UaWVycyI6W3siaWQiOiIxNTY1MTc1MS1mYTUzLTQwMjktYThiOS0yNzczMzJkOGEyMjQiLCJ0aWVyU3VtbWFyeSI6IsKjNjBLIOKAkyDCozExMEsg4oCiIDAuMSUg4oCTIDAuMyUiLCJ0aXRsZSI6bnVsbCwiYWRkaXRpb25hbEluZm9ybWF0aW9uIjpudWxsLCJjb21wb25lbnRzIjpbeyJpZCI6IjZkNGNkOTlhLTczOGYtNGMzYy1iYTcxLTE1ZjExY2Y5MWQyNCIsInN1bW1hcnkiOiLCozYwSyDigJMgwqMxMTBLIiwiY29tcGVuc2F0aW9uVHlwZSI6IlNhbGFyeSIsImludGVydmFsIjoiMSBZRUFSIiwiY3VycmVuY3lDb2RlIjoiR0JQIiwibWluVmFsdWUiOjYwMDAwLCJtYXhWYWx1ZSI6MTEwMDAwfSx7ImlkIjoiMDhmYTBkZmQtOTQwYi00OGUzLTkxNDktYWZlMzJmYTQyMmIxIiwic3VtbWFyeSI6IjAuMSUg4oCTIDAuMyUiLCJjb21wZW5zYXRpb25UeXBlIjoiRXF1aXR5UGVyY2VudGFnZSIsImludGVydmFsIjoiTk9ORSIsImN1cnJlbmN5Q29kZSI6bnVsbCwibWluVmFsdWUiOjAuMSwibWF4VmFsdWUiOjAuM31dfV0sInN1bW1hcnlDb21wb25lbnRzIjpbeyJjb21wZW5zYXRpb25UeXBlIjoiU2FsYXJ5IiwiaW50ZXJ2YWwiOiIxIFlFQVIiLCJjdXJyZW5jeUNvZGUiOiJHQlAiLCJtaW5WYWx1ZSI6NjAwMDAsIm1heFZhbHVlIjoxMTAwMDB9LHsiY29tcGVuc2F0aW9uVHlwZSI6IkVxdWl0eVBlcmNlbnRhZ2UiLCJpbnRlcnZhbCI6Ik5PTkUiLCJjdXJyZW5jeUNvZGUiOm51bGwsIm1pblZhbHVlIjowLjEsIm1heFZhbHVlIjowLjN9XX19XSwiYXBpVmVyc2lvbiI6IjEifQ==
  recorded_at: Wed, 01 May 2024 14:15:02 GMT
- request:
    method: post
    uri: https://jobs.ashbyhq.com/api/non-user-graphql?op=ApiJobPosting
    body:
      encoding: UTF-8
      string: '{"query":"query ApiJobPosting($organizationHostedJobsPageName: String!,
        $jobPostingId: String!) {  jobPosting(    organizationHostedJobsPageName:
        $organizationHostedJobsPageName    jobPostingId: $jobPostingId  ) {    applicationForm
        {      ...FormRenderParts      __typename    }    surveyForms {      ...FormRenderParts      __typename    }    applicationDeadline    __typename  }}fragment
        JSONBoxParts on JSONBox {  value  __typename}fragment FileParts on File {  id  filename  __typename}fragment
        FormFieldEntryParts on FormFieldEntry {  id  field  fieldValue {    ... on
        JSONBox {      ...JSONBoxParts      __typename    }    ... on File {      ...FileParts      __typename    }    ...
        on FileList {      files {        ...FileParts        __typename      }      __typename    }    __typename  }  isRequired  descriptionHtml  isHidden  __typename}fragment
        FormRenderParts on FormRender {  id  formControls {    identifier    title    __typename  }  errorMessages  sections
        {    fieldEntries {      ...FormFieldEntryParts      __typename    }    isHidden    __typename  }  sourceFormDefinitionId  __typename}","variables":{"jobPostingId":"309706bc-1081-48b6-89dc-f769bbe17e6d","organizationHostedJobsPageName":"lightdash"}}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 01 May 2024 14:15:02 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      X-Ashby-Request-Id:
      - 01HWT84FZ8RNKD7EM362VNYG96
      X-Content-Type-Options:
      - nosniff
      X-Frame-Options:
      - DENY
      Referrer-Policy:
      - same-origin
      Cache-Control:
      - no-store
      Access-Control-Allow-Origin:
      - "*"
      Cf-Cache-Status:
      - DYNAMIC
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains; preload
      Server:
      - cloudflare
      Cf-Ray:
      - 87d0619f7f4d9577-LHR
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjp7ImpvYlBvc3RpbmciOnsiYXBwbGljYXRpb25Gb3JtIjp7ImlkIjoiNDcyODgyYzYtNGI1Zi00YjgwLWJkZWMtZDAxNzZkMmU2YTI5IiwiZm9ybUNvbnRyb2xzIjpbeyJpZGVudGlmaWVyIjoiNTk0ZmM1MzYtMzg2Yy00YzM4LWIwOGItMzg1YmQ4MzgxNDZjIiwidGl0bGUiOiJTdWJtaXQiLCJfX3R5cGVuYW1lIjoiRm9ybUNvbnRyb2wifV0sImVycm9yTWVzc2FnZXMiOltdLCJzZWN0aW9ucyI6W3siZmllbGRFbnRyaWVzIjpbeyJpZCI6IjQ3Mjg4MmM2LTRiNWYtNGI4MC1iZGVjLWQwMTc2ZDJlNmEyOV9fc3lzdGVtZmllbGRfbmFtZSIsImZpZWxkIjp7ImlkIjoiZjAwMTM5NDctOTlhYS00ZTY2LTg4YWEtMGE1N2YyZDNmZGFkIiwidHlwZSI6IlN0cmluZyIsInBhdGgiOiJfc3lzdGVtZmllbGRfbmFtZSIsImh1bWFuUmVhZGFibGVQYXRoIjoiTmFtZSIsInRpdGxlIjoiTmFtZSIsImlzTnVsbGFibGUiOmZhbHNlLCJpc1ByaXZhdGUiOmZhbHNlLCJpc0RlYWN0aXZhdGVkIjpmYWxzZSwiaXNNYW55IjpmYWxzZSwibWV0YWRhdGEiOnt9LCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJTdHJpbmdGaWVsZCJ9LCJmaWVsZFZhbHVlIjpudWxsLCJpc1JlcXVpcmVkIjp0cnVlLCJkZXNjcmlwdGlvbkh0bWwiOiI8cD5GaXJzdCBhbmQgbGFzdCBuYW1lIHBsZWFzZSE8L3A+IiwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9LHsiaWQiOiI0NzI4ODJjNi00YjVmLTRiODAtYmRlYy1kMDE3NmQyZTZhMjlfX3N5c3RlbWZpZWxkX2VtYWlsIiwiZmllbGQiOnsiaWQiOiIyMzE5MDUyZC04NDczLTRhMDMtYTBhYi03ZjRhMjc5NTI4NjMiLCJ0eXBlIjoiRW1haWwiLCJwYXRoIjoiX3N5c3RlbWZpZWxkX2VtYWlsIiwiaHVtYW5SZWFkYWJsZVBhdGgiOiJFbWFpbCIsInRpdGxlIjoiRW1haWwiLCJpc051bGxhYmxlIjpmYWxzZSwiaXNQcml2YXRlIjpmYWxzZSwiaXNEZWFjdGl2YXRlZCI6ZmFsc2UsImlzTWFueSI6ZmFsc2UsIm1ldGFkYXRhIjp7fSwiX19hdXRvU2VyaWFsaXphdGlvbklEIjoiRW1haWxGaWVsZCJ9LCJmaWVsZFZhbHVlIjpudWxsLCJpc1JlcXVpcmVkIjp0cnVlLCJkZXNjcmlwdGlvbkh0bWwiOm51bGwsImlzSGlkZGVuIjpudWxsLCJfX3R5cGVuYW1lIjoiRm9ybUZpZWxkRW50cnkifSx7ImlkIjoiNDcyODgyYzYtNGI1Zi00YjgwLWJkZWMtZDAxNzZkMmU2YTI5XzAwNDE1NzE0LTc1ZjMtNDliOS1iODU2LWFjNjc0ZmQ1Y2U4YiIsImZpZWxkIjp7ImlkIjoiNTI4ZjAwZGItYTI1Ni00ZDY2LWJjZjYtZDE2YTA0NzkzN2IxIiwidHlwZSI6IkxvY2F0aW9uIiwicGF0aCI6IjAwNDE1NzE0LTc1ZjMtNDliOS1iODU2LWFjNjc0ZmQ1Y2U4YiIsImh1bWFuUmVhZGFibGVQYXRoIjoiIiwidGl0bGUiOiJXaGVyZSBhcmUgeW91IGJhc2VkIG9yIHdoZXJlIHdvdWxkIHlvdSBiZSBwbGFubmluZyBvbiB3b3JraW5nIGZyb20/IiwiaXNOdWxsYWJsZSI6ZmFsc2UsImlzUHJpdmF0ZSI6ZmFsc2UsImlzRGVhY3RpdmF0ZWQiOmZhbHNlLCJpc01hbnkiOmZhbHNlLCJtZXRhZGF0YSI6e30sImxvY2F0aW9uVHlwZXMiOlsiQ2l0eSJdLCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJMb2NhdGlvbkZpZWxkIn0sImZpZWxkVmFsdWUiOm51bGwsImlzUmVxdWlyZWQiOnRydWUsImRlc2NyaXB0aW9uSHRtbCI6bnVsbCwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9LHsiaWQiOiI0NzI4ODJjNi00YjVmLTRiODAtYmRlYy1kMDE3NmQyZTZhMjlfMzY5MTNiMWYtYzM0Zi00NjkzLTkxOWMtNDAwMzA0YTJhMTFkIiwiZmllbGQiOnsiaWQiOiI2MjQ4ZjRlOC1jY2I1LTQ1YWEtOWVmNy1iMzhkZThkYTE2ZWIiLCJ0eXBlIjoiU3RyaW5nIiwicGF0aCI6IjM2OTEzYjFmLWMzNGYtNDY5My05MTljLTQwMDMwNGEyYTExZCIsImh1bWFuUmVhZGFibGVQYXRoIjoiIiwidGl0bGUiOiJDYW4gd2UgZ2V0IGEgbGluayB0byB5b3VyIExpbmtlZGluIHByb2ZpbGU/wqAiLCJpc051bGxhYmxlIjpmYWxzZSwiaXNQcml2YXRlIjpmYWxzZSwiaXNEZWFjdGl2YXRlZCI6ZmFsc2UsImlzTWFueSI6ZmFsc2UsIm1ldGFkYXRhIjp7fSwiX19hdXRvU2VyaWFsaXphdGlvbklEIjoiU3RyaW5nRmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6dHJ1ZSwiZGVzY3JpcHRpb25IdG1sIjpudWxsLCJpc0hpZGRlbiI6bnVsbCwiX190eXBlbmFtZSI6IkZvcm1GaWVsZEVudHJ5In0seyJpZCI6IjQ3Mjg4MmM2LTRiNWYtNGI4MC1iZGVjLWQwMTc2ZDJlNmEyOV9mOTNiZmY4Yy0yNDQyLTQyYjctYjA0MC0zODc2ZmExNjBhYmEiLCJmaWVsZCI6eyJpZCI6ImE3NjJkYjZmLWNiYTktNGFmMS1iOWVjLWQ5ZDUwYzFiNmQ3YiIsInR5cGUiOiJMb25nVGV4dCIsInBhdGgiOiJmOTNiZmY4Yy0yNDQyLTQyYjctYjA0MC0zODc2ZmExNjBhYmEiLCJodW1hblJlYWRhYmxlUGF0aCI6IiIsInRpdGxlIjoiQ2FuIHlvdSB0ZWxsIHVzIHdoYXQgYXR0cmFjdGVkIHlvdSB0byBhcHBseSB0byBMaWdodGRhc2g/IiwiaXNOdWxsYWJsZSI6ZmFsc2UsImlzUHJpdmF0ZSI6ZmFsc2UsImlzRGVhY3RpdmF0ZWQiOmZhbHNlLCJpc01hbnkiOmZhbHNlLCJtZXRhZGF0YSI6e30sIl9fYXV0b1NlcmlhbGl6YXRpb25JRCI6IkxvbmdUZXh0RmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6dHJ1ZSwiZGVzY3JpcHRpb25IdG1sIjoiPHA+V2UgZG9uJ3QgbmVlZCBhIHdob2xlIGNvdmVyIGxldHRlciwgYSBjb3VwbGUgb2Ygc2VudGVuY2VzIHdpbGwgZG8hPC9wPiIsImlzSGlkZGVuIjpudWxsLCJfX3R5cGVuYW1lIjoiRm9ybUZpZWxkRW50cnkifSx7ImlkIjoiNDcyODgyYzYtNGI1Zi00YjgwLWJkZWMtZDAxNzZkMmU2YTI5X19zeXN0ZW1maWVsZF9yZXN1bWUiLCJmaWVsZCI6eyJpZCI6Ijg2MDFkZDllLWNjNTUtNGRhNS1hNThmLTg2Mzc4MzEwZjllMiIsInR5cGUiOiJGaWxlIiwicGF0aCI6Il9zeXN0ZW1maWVsZF9yZXN1bWUiLCJodW1hblJlYWRhYmxlUGF0aCI6IlJlc3VtZSIsInRpdGxlIjoiRG8geW91IGhhdmUgYSByZXN1bWUgb3IgQ1YgeW91IGNhbiBzaGFyZT/CoCIsImlzTnVsbGFibGUiOmZhbHNlLCJpc1ByaXZhdGUiOmZhbHNlLCJpc0RlYWN0aXZhdGVkIjpmYWxzZSwiaXNNYW55IjpmYWxzZSwibWV0YWRhdGEiOnt9LCJfX2F1dG9TZXJpYWxpemF0aW9uSUQiOiJGaWxlRmllbGQifSwiZmllbGRWYWx1ZSI6bnVsbCwiaXNSZXF1aXJlZCI6ZmFsc2UsImRlc2NyaXB0aW9uSHRtbCI6bnVsbCwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtRmllbGRFbnRyeSJ9XSwiaXNIaWRkZW4iOm51bGwsIl9fdHlwZW5hbWUiOiJGb3JtU2VjdGlvblJlbmRlciJ9XSwic291cmNlRm9ybURlZmluaXRpb25JZCI6IjRlOTdjMTdiLTNhMWEtNDM4NS1iNGYzLWQ1MjFlNzA3YTdhNCIsIl9fdHlwZW5hbWUiOiJGb3JtUmVuZGVyIn0sInN1cnZleUZvcm1zIjpbXSwiYXBwbGljYXRpb25EZWFkbGluZSI6bnVsbCwiX190eXBlbmFtZSI6IkpvYlBvc3RpbmdEZXRhaWxzIn19fQo=
  recorded_at: Wed, 01 May 2024 14:15:02 GMT
recorded_with: VCR 6.2.0
