---
http_interactions:
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 01 Aug 2024 20:03:30 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"193d717b07c189309e8aef166209db6b"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-b8d048d7ad02d1a1f47e96691cc57e2e'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB3; path=/
      - _pinpoint_session=pOb5CVq1S3G577v25gEbVSTGcLAM37fsCzz%2FVUqaiRl86kIniWPJuZ7sjLOpf32ewx86%2B1H66a%2Fedorda%2FRkvbR8Tt1iMZN3CbNQKgHsyCN%2FiRZb9uDInZaX8lIFeUqWJz5a6FXnRTH%2FgoC6ZdY3sZAsWYAP7lmt2mzF6Th1L2uzBaTjmQqYuGizog1oes6zuwWsu19FIUw7fUmLgrBkgPKCJy8hvSdc1AFJDWCfPytYiZu2aI1hj18cO8o%2FWfUT4qDDGSDxmUuipowNesTYk4f160v0qbrXlKYi%2Bsny1OEB9iNFkiic1ce967hLHHpd2J0neLQCw31crkfDKHyAjWi4KisGXodG94Q56ebrpzJEemULkzsA6uYG5fKwXKbwmZg90wxMNfW5OAfeudT%2BN51rnA%3D%3D--DoIyoMQ%2FLVXYT6Ow--LcU7dVqiOnu07P5PocWbjA%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 08 Aug 2024 20:03:30 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=72504853-7f1a-4ed2-8655-6ec7ef7b90f2; path=/; expires=Fri, 02 Aug
        2024 00:03:29 GMT; secure
      - ahoy_visitor=e3ffc95b-4d84-4ac1-96f1-6579120dc7d3; path=/; expires=Sat, 01
        Aug 2026 20:03:29 GMT; secure
      X-Request-Id:
      - 6fb9bbfe-df56-4723-a837-69b650f145c6
      X-Runtime:
      - '0.276344'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 01 Aug 2024 20:03:30 GMT
- request:
    method: get
    uri: https://bathspa.pinpointhq.com/postings.json
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Thu, 01 Aug 2024 20:03:31 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      X-Frame-Options:
      - SAMEORIGIN
      X-Xss-Protection:
      - 1; mode=block
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Permitted-Cross-Domain-Policies:
      - none
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Etag:
      - W/"bf34f85fa8da757e864e5f194cd842ca"
      Cache-Control:
      - max-age=0, private, must-revalidate
      Content-Security-Policy-Report-Only:
      - 'default-src ''self'' https:; font-src ''self'' https: data:; img-src ''self''
        https: data:; object-src ''none''; media-src ''self'' https: blob:; script-src
        ''self'' https: ''strict-dynamic'' ''nonce-f1ee188a1e5c7e639f8135e45b5a5bbd'';
        style-src ''self'' https: ''unsafe-inline''; connect-src ''self'' https: wss:;
        base-uri ''none''; report-uri /csp_violation_reports'
      Set-Cookie:
      - LSW_WEB=LSW_WEB5; path=/
      - _pinpoint_session=MQ8%2BfIvTWas%2FIgz7B6VeVFtfLqbd2QY4Vp0eJub2dYLd96dF7l5lvOaJIKq67MBhoJ4LSelEOvCkDi9lOIjwMRlDl7yZiuI8Q9LVikqpm2HtDLyjsazywP1S%2FSXT%2BxbC5CFi85neHtDySJ0c6%2BZzft%2B9yCz%2B28vzSPcitDI179CSEps4gFQjLJ2UGixl1EnTjPGQ7gr9tVWtQpfOf0m%2FPv0YCiTUZWx9gK1CrD2SwOPS60El9IeXAGaf8m6Mb71dqTJea9jUlXuK7H2bkcUeX929RlZBAYtOLpWeYZCdV6bMjpo%3D--yylR%2Fk3J4LowbnZ0--ahiCgHxBMjez09M3SP%2FiDA%3D%3D;
        domain=.pinpointhq.com; path=/; expires=Thu, 08 Aug 2024 20:03:31 GMT; secure;
        HttpOnly; SameSite=None
      - ahoy_visit=b8fa06e4-91af-4fc8-8c12-3d5ecbc9d59d; path=/; expires=Fri, 02 Aug
        2024 00:03:30 GMT; secure
      - ahoy_visitor=428714c1-5656-48bf-8d1d-749d1a08e01e; path=/; expires=Sat, 01
        Aug 2026 20:03:30 GMT; secure
      X-Request-Id:
      - 98deedf1-32d4-41c6-bc80-b82a7556417b
      X-Runtime:
      - '1.098031'
      Strict-Transport-Security:
      - max-age=31536000; includeSubDomains
      Vary:
      - Origin
      X-Powered-By:
      - cloud66
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJkYXRhIjpbeyJpZCI6IjE5NDcyOSIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMzcsMDk5IC0gwqM0MSw3MzIgcGVyIGFubnVtXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlcyAtIE1vbmRheSAxNnRoIFx1MDAyNmFtcDsgVHVlc2RheSAxN3RoIFNlcHRlbWJlciAyMDI0IFx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VGb3IgYW4gaW5mb3JtYWwgZGlzY3Vzc2lvbiByZWdhcmRpbmcgdGhpcyBwb3N0LCBwbGVhc2UgY29udGFjdCBBbmRyZXcgQ2FyciwgU0NJVFQgUEdDRSBQcm9ncmFtbWUgRGlyZWN0b3IgKFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2NhIGhyZWY9XCJtYWlsdG86YS5jYXJyMkBiYXRoc3BhLmFjLnVrXCJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VhLmNhcnIyQGJhdGhzcGEuYWMudWtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2UpLCB3aG8gaXMgYXZhaWxhYmxlIGR1cmluZyAyNHRoLTMxc3QgSnVseSAyMDI0IGFuZCAxOXRoLTIzcmQgQXVndXN0IDIwMjQuXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMzNywwOTkgLSDCozQxLDczMiAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6MzcwOTkuMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjQxNzMyLjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0yNlQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBzZWVraW5nIGFuIGV4cGVyaWVuY2VkIEVhcmx5IFllYXJzLCBwcmltYXJ5IGFuZC9vciBzZWNvbmRhcnkgYWdlIHBoYXNlIHByYWN0aXRpb25lciB0byB0YWtlIG9uIHRoZSByb2xlIG9mIHRlYWNoZXIgYW5kIHR1dG9yIGZvciB0aGUgYWNhZGVtaWMgYXNzaWdubWVudHMgb2YgQlNV4oCZcyBoaWdobHkgcmVnYXJkZWQgU0NJVFQgUEdDRSBwcm9ncmFtbWUuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlVGVhY2hpbmcgdGFrZXMgcGxhY2UgYm90aCBpbi1wZXJzb24gYXQgb3VyIFNDSVRUcyBhY3Jvc3MgRW5nbGFuZCBhbmQgb25saW5lLCB3aXRoIG11Y2ggb2YgdGhlIGNvdXJzZSBkZWxpdmVyZWQgdmlydHVhbGx5Llx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUJhdGggU3BhIFVuaXZlcnNpdHnigJlzIFNjaG9vbCBvZiBFZHVjYXRpb24gcHJvdmlkZXMgdGhlIFNDSVRUIFBHQ0UgYXdhcmQgdG8gYSBncm93aW5nIG51bWJlciBvZiBTQ0lUVCBwcm92aWRlcnMsIHdvcmtpbmcgd2l0aCAxMyBwYXJ0bmVycyBmcm9tIFNlcHRlbWJlciAyMDI0Llx1MDAyNm5ic3A7IFdoaWxzdCB0aGUgU0NJVFQgcHJvdmlkZXMgdGhlIHRyYWluaW5nIHRoYXQgbGVhZHMgdG8gYSByZWNvbW1lbmRhdGlvbiBmb3IgUVRTLCB0aGlzIHJvbGUgcmVsYXRlcyB0byBCYXRoIFNwYSBVbml2ZXJzaXR54oCZcyBwcm92aXNpb24gb2YgdGhlIGFjYWRlbWljIGF3YXJkIG9mIFBHQ0UuIFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUluIG9yZGVyIHRvIHN1cHBvcnQgdHJhaW5lZXMgaW4gdW5kZXJzdGFuZGluZyB0aGUgdmFsdWUgb2YgY3JpdGljYWwgYXdhcmVuZXNzIG9mIHByb2Zlc3Npb25hbCBwcmFjdGljZSBhdCBNYXN0ZXJzIGxldmVsLCB0aHJvdWdoIHRoZSBjb21wbGV0aW9uIG9mIGFjYWRlbWljIGFzc2lnbm1lbnRzLCB0aGUgcG9zdCBob2xkZXIgd2lsbCBkZWxpdmVyOiBTQ0lUVCBhc3NpZ25tZW50IGxhdW5jaGVzLCBzZW1pbmFycyB0byBncm91cHMgb2YgdHJhaW5lZXMsIGluZGl2aWR1YWwgdHV0b3JpYWxzLCBvbmxpbmUgc3VwcG9ydCBhbmQgYXNzaWdubWVudCBhc3Nlc3NtZW50LiBcdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGUgd29yayBvZiB0aGUgU0NJVFQgUEdDRSBwcm9ncmFtbWUgaXMgZGVsaXZlcmVkIGF0IGEgcmFuZ2Ugb2Ygc2l0ZXMgYWNyb3NzIEVuZ2xhbmQuXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIFFUUywgYSBmaXJzdCBkZWdyZWUsIGEgaGlnaGVyIGRlZ3JlZSAob3Igd29ya2luZyB0b3dhcmRzIGEgaGlnaGVyIGRlZ3JlZSkgYW5kIHdpbGwgYmUgY29uZmlkZW50IGluIHRlYWNoaW5nIGF0IE1hc3RlcnMgbGV2ZWwgYW5kIHdvcmtpbmcgd2l0aCB0cmFpbmVlIHRlYWNoZXJzLlx1MDAyNm5ic3A7IEV4cGVyaWVuY2Ugb2Ygd29ya2luZyBpbiBhIHNjaG9vbCBvciBvdGhlciBlZHVjYXRpb25hbCBpbnN0aXR1dGlvbiBpcyBlc3NlbnRpYWwuXHUwMDI2bmJzcDsgRXhwZXJpZW5jZSBpbiB0aGUgRWFybHkgWWVhcnMsIHByaW1hcnkgYW5kL29yIHNlY29uZGFyeSBhZ2UgcGhhc2UgaXMgZXNzZW50aWFsLCBidXQgeW91IHdpbGwgYWxzbyBoYXZlIGtub3dsZWRnZSBhbmQgdW5kZXJzdGFuZGluZyBvZiBsZWFybmluZyBwZWRhZ29neSBhbmQgY3VycmVudCB0aGlua2luZyBpbiB3aWRlciBlZHVjYXRpb25hbCBpc3N1ZXMuIFx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaGF2ZSBleGNlbGxlbnQgY29tbXVuaWNhdGlvbiBza2lsbHMsIGEgY29sbGFib3JhdGl2ZSBhbmQgZW50aHVzaWFzdGljIGFwcHJvYWNoIHRvIHRlYWNoZXIgZWR1Y2F0aW9uIGFuZCBiZSBhIGNvbW1pdHRlZCB0ZWFtIHBsYXllci5cdTAwMjZuYnNwOyBZb3Ugd2lsbCBiZSBhIGNvbmZpZGVudCBjb21tdW5pY2F0b3IgYW5kIHVzZXIgb2YgSVQsIHBhcnRpY3VsYXJseSBvbmxpbmUgbGVhcm5pbmcgZW52aXJvbm1lbnRzLlx1MDAyNm5ic3A7IFlvdSBtdXN0IGJlIGEgZmxleGlibGUgdGhpbmtlciBhbmQgYmUgd2lsbGluZyB0byBlbmdhZ2UgaW4gdGhlIGRldmVsb3BtZW50IG9mIHRoaXMgYXJlYSBvZiB0ZWFjaGVyIGVkdWNhdGlvbi5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUZvciBhbiBpbmZvcm1hbCBkaXNjdXNzaW9uIHJlZ2FyZGluZyB0aGlzIHBvc3QsIHBsZWFzZSBjb250YWN0IEFuZHJldyBDYXJyLCBTQ0lUVCBQR0NFIFByb2dyYW1tZSBEaXJlY3RvciAoXHUwMDNjYSBocmVmPVwibWFpbHRvOmEuY2FycjJAYmF0aHNwYS5hYy51a1wiXHUwMDNlYS5jYXJyMkBiYXRoc3BhLmFjLnVrXHUwMDNjL2FcdTAwM2UpLCB3aG8gaXMgYXZhaWxhYmxlIGR1cmluZyAyNHRoLTMxc3QgSnVseSAyMDI0IGFuZCAxOXRoLTIzcmQgQXVndXN0IDIwMjQuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiVGVhY2hpbmcgRmVsbG93IGZvciBTY2hvb2wtQ2VudHJlZCBJbml0aWFsIFRlYWNoZXIgVHJhaW5pbmcgKFNDSVRUKSBQR0NFIFByb2dyYW1tZSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy82OGZkOWFmZC03ZjRjLTRkNmYtYjI4Ni01YjU3MGU4MzIxZjYiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzLzY4ZmQ5YWZkLTdmNGMtNGQ2Zi1iMjg2LTViNTcwZTgzMjFmNiIsIndvcmtwbGFjZV90eXBlIjoiaHlicmlkIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ikh5YnJpZCIsImpvYiI6eyJpZCI6IjIxMzAzMSIsInJlcXVpc2l0aW9uX2lkIjoiMjgyLzIzLzI0IiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI1NDc5IiwibmFtZSI6IlNjaG9vbCBvZiBFZHVjYXRpb24ifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5Njk3MSIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIDcgLSDCozM3LDA5OSAtIMKjNDEsNzMyIHBlciBhbm51bVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlSW50ZXJ2aWV3IERhdGUgLSBXL0MgMTJ0aCBBdWd1c3RcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMzcsMDk5IC0gwqM0MSw3MzIgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjM3MDk5LjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjo0MTczMi4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMDRUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGlzIGlzIGFuIGV4Y2l0aW5nIG9wcG9ydHVuaXR5IHRvIGpvaW4gdXMgYXMgU3RyYXRlZ2ljIFByb2plY3RzIFx1MDAyNmFtcDsgQ2hhbmdlIE1hbmFnZXIgYXQgQmF0aCBTcGEgVW5pdmVyc2l0eS4gWW91IHdpbGwgYmUgaW52b2x2ZWQgaW4gYSB3aWRlIHJhbmdlIG9mIHN0cmF0ZWdpYyBhY3Rpdml0aWVzIGFuZCB3aWxsIHBsYXkgYSBrZXkgcm9sZSBpbiBtYW5hZ2luZyBhbmQgZmFjaWxpdGF0aW5nIGNoYW5nZSBwcm9qZWN0cywgbmV3IHdheXMgb2Ygd29ya2luZywgYW5kIHByb2Nlc3MgaW1wcm92ZW1lbnRzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUFzIFN0cmF0ZWdpYyBQcm9qZWN0cyBcdTAwMjZhbXA7IENoYW5nZSBNYW5hZ2VyIHlvdSB3aWxsIG1hbmFnZSBwcm9qZWN0IGluaXRpYXRpb24gcGhhc2VzLCBvdmVyc2VlIGxhcmdlLXNjYWxlIHByb2dyYW1zLCBhbmQgZW5zdXJlIGVmZmVjdGl2ZSBlbmQtdG8tZW5kIHByb2plY3QgbWFuYWdlbWVudC4gXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIHdvcmsgY2xvc2VseSB3aXRoIHNlbmlvciBsZWFkZXJzaGlwLCBwcm9qZWN0IHNwb25zb3JzLCBhbmQgdGVhbXMgdG8gbWVldCBwcm9qZWN0IHJlcXVpcmVtZW50cywgdGltZWxpbmVzLCBhbmQgb3V0cHV0cywgd2hpbGUgbWFpbnRhaW5pbmcgcm9idXN0IGNvbW11bmljYXRpb24gY2hhbm5lbHMuIFx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VZb3VyIHJvbGUgd2lsbCBpbnZvbHZlIGNvb3JkaW5hdGluZyBwcm9qZWN0IGFjdGl2aXRpZXMsIHN1cHBvcnRpbmcgc2VuaW9yIG92ZXJzaWdodCBncm91cHMsIHRyYWNraW5nIHByb2plY3QgbWV0cmljcywgYW5kIGRldmVsb3BpbmcgYmVzdCBwcmFjdGljZSBwcm9qZWN0IG1hbmFnZW1lbnQgY29sbGF0ZXJhbC4gXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUFkZGl0aW9uYWxseSwgeW91IHdpbGwgZmFjaWxpdGF0ZSBmb3J1bXMgZm9yIGNyb3NzLXVuaXZlcnNpdHkgY29sbGFib3JhdGlvbiwgYnVpbGQgc3Ryb25nIG5ldHdvcmtzIGFjcm9zcyBhY2FkZW1pYyBhbmQgcHJvZmVzc2lvbmFsIHNlcnZpY2VzIHRlYW1zLCBhbmQgY29udHJpYnV0ZSB0byBzdGFmZiBkZXZlbG9wbWVudCBhbmQgeW91ciBvd24gcHJvZmVzc2lvbmFsIGdyb3d0aC5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGhhdmUgZXhjZWxsZW50IHN0YWtlaG9sZGVyIG1hbmFnZW1lbnQgc2tpbGxzIHdpdGggYSBkZW1vbnN0cmFibGUgYWJpbGl0eSB0byBjb21tdW5pY2F0ZSBlZmZlY3RpdmVseSB3aXRoIGEgZGl2ZXJzZSBhdWRpZW5jZSB3aWxsIGJlIGtleS4gXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIGhhdmUgYSBzdHJ1Y3R1cmVkIGFwcHJvYWNoIHRvIHByb2R1Y2luZyBhY2N1cmF0ZSBwcm9qZWN0IGRvY3VtZW50YXRpb24gYW5kIHJlcG9ydGluZywgYmUgc2VsZi1tb3RpdmF0ZWQsIGFuZCBleHBlcmllbmNlZCBhdCB3b3JraW5nIGF0IGEgc3RyYXRlZ2ljIGxldmVsIGFjcm9zcyBhIHZhcmllZCB3b3JrbG9hZC5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlSW4gYWRkaXRpb24sIHlvdSB3aWxsIGJlIGZsZXhpYmxlLCBjYWxtIHVuZGVyIHByZXNzdXJlIGFuZCB3aWxsIGhhdmUgZXhjZWxsZW50IG9yZ2FuaXNhdGlvbmFsIGFuZCBwcmlvcml0aXNhdGlvbiBza2lsbHNcdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJTdHJhdGVnaWMgUHJvamVjdHMgXHUwMDI2IENoYW5nZSBNYW5hZ2VyIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzL2U3MjUwMDgzLWY0NWEtNDRlYy1hNmViLTQ3YzIyOTVkMTY5YyIsInBhdGgiOiIvZW4vcG9zdGluZ3MvZTcyNTAwODMtZjQ1YS00NGVjLWE2ZWItNDdjMjI5NWQxNjljIiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjE1MjIzIiwicmVxdWlzaXRpb25faWQiOiIzNDgvMjMvMjQiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMzYwMzciLCJuYW1lIjoiU3RyYXRlZ2ljIFByb2plY3RzIGFuZCBDaGFuZ2UgVW5pdCJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk3Mjc5IiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlR3JhZGUgQWMyIC0gwqMzNywwOTkgLSDCozQxLDczMiBwZXIgYW5udW1cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlRnVsbCBUaW1lIEZpeGVkIFRlcm0gQ29udHJhY3QgaW5pdGlhbGx5IGZvciAxMiBtb250aHMsIGFsdGhvdWdoIGNhbiBiZSBzaG9ydGVuZWQgb3IgbGVuZ3RoZW5lZCBiYXNlZCBvbiB0aGUgbWF0ZXJuaXR5IGxlYXZlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC0gMTR0aCBBdWd1c3QgMjAyNFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMzcsMDk5IC0gwqM0MSw3MzIgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjM3MDk5LjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjo0MTczMi4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMDhUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgY3VycmVudGx5IHNlZWtpbmcgdG8gcmVjcnVpdCBUZWFjaGluZyBGZWxsb3dzIGluIFBzeWNob2xvZ3kgdG8gam9pbiBvdXIgZGVkaWNhdGVkIGFuZCBjb21taXR0ZWQgdGVhbSBpbiBQc3ljaG9sb2d5Llx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2UoUGxlYXNlIG5vdGUgdGhhdCB0aGUgcm9sZSBpcyBpbml0aWFsbHkgZm9yIDEyIG1vbnRocywgYWx0aG91Z2ggY2FuIGJlIHNob3J0ZW5lZCBvciBsZW5ndGhlbmVkIGJhc2VkIG9uIHRoZSBtYXRlcm5pdHkgbGVhdmUpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmaXhlZF90ZXJtX2Z1bGxfdGltZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRml4ZWQgVGVybSAtIEZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGJlIHRoZSBrZXkgc3VwcG9ydCB0byB1bmRlcmdyYWR1YXRlIHRlYWNoaW5nIGFjcm9zcyBvdXIgcHJvZ3JhbW1lcyB3aXRoaW4gUHN5Y2hvbG9neS4gWW91IHdpbGwgZGVzaWduIGFuZCBkZWxpdmVyIHRlYWNoaW5nIGNvbnRlbnQgYWNyb3NzIGEgcmFuZ2Ugb2YgbW9kdWxlcyBhdCBMZXZlbHMgNCB0byA2IGluIFBzeWNob2xvZ3kgUHJvZ3JhbW1lcywgd2l0aCBhIHBhcnRpY3VsYXIgZm9jdXMgb24gRm9yZW5zaWMgUHN5Y2hvbG9neSwgYXMgd2VsbCBhcyBjb250cmlidXRpbmcgdG8gY3VycmljdWx1bSBwbGFubmluZyBhbmQgZGV2ZWxvcG1lbnQsIGFuZCBlbmdhZ2luZyBpbiByZXNlYXJjaCBvciBzY2hvbGFybHkgYWN0aXZpdHkgaW4gUHN5Y2hvbG9neS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHdpbGwgdW5kZXJ0YWtlIHRlYWNoaW5nIHdpdGhpbiBQc3ljaG9sb2d5IGluIHRoZSBmb3JtIG9mIGxlY3R1cmVzLCBwcmFjdGljYWwgc2Vzc2lvbnMsIHNlbWluYXJzLCBkaXNjdXNzaW9ucyBncm91cHMgYW5kIHR1dG9yaWFscyBhcyBhcHByb3ByaWF0ZSwgd2hpbHN0IHN1cHBvcnRpbmcgdW5kZXJncmFkdWF0ZSBzdHVkZW50cyBpbmRpdmlkdWFsbHkgYW5kIG9ubGluZS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VJbiBhZGRpdGlvbiwgeW91IHdpbGwgaGVscCBtYXJrIGFzc2Vzc21lbnRzIGFzc29jaWF0ZWQgd2l0aCB0aGUgdGVhY2hpbmcgYW5kIHdpbGwgYXR0ZW5kIGFzc2Vzc21lbnQgYW5kIGV4YW1pbmF0aW9uIG1lZXRpbmdzIGFzIHJlcXVpcmVkLlx1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIHNlZWtpbmcgYSBmbGV4aWJsZSBhbmQgcG9zaXRpdmUgaW5kaXZpZHVhbCB3aG8gd2lsbCBiZSBhYmxlIHRvIHRlYWNoIGEgYnJvYWQgcmFuZ2Ugb2YgUHN5Y2hvbG9neSBhdCBhbGwgdW5kZXJncmFkdWF0ZSBsZXZlbHMsIHdpdGggYSBwYXJ0aWN1bGFyIGZvY3VzIG9uIEZvcmVuc2ljIFBzeWNob2xvZ3kgKHRob3VnaCBhbGwgYXJlYXMgb2YgZXhwZXJ0aXNlIGFyZSB3ZWxjb21lKSBhbmQgaGF2ZSBhIEJQUy1BY2NyZWRpdGVkIHVuZGVyZ3JhZHVhdGUgZGVncmVlLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVlvdSB3aWxsIGhhdmUgZXhwZXJpZW5jZSBvZiB0ZWFjaGluZyBhbGwgYXNwZWN0cyBvZiBnZW5lcmFsIFBzeWNob2xvZ3ksIGFzIHdlbGwgYXMgcHJpb3IgZXhwZXJpZW5jZSBvZiBkaWZmZXJlbnQgdGVhY2hpbmcgbWV0aG9kcyBhbmQvb3IgZXhwZXJpZW5jZSBvZiB1bml2ZXJzaXR5IGxldmVsIHRlYWNoaW5nLiBBcyBhbiBleGNlbGxlbnQgY29tbXVuaWNhdG9yLCB5b3Ugd2lsbCB3b3JrIHN1Y2Nlc3NmdWxseSBhcyBwYXJ0IG9mIGEgc21hbGwgdGVhbSwgd2hpbHN0IHNob3dpbmcgdGhlIGFiaWxpdHkgdG8gbWFuYWdlIHlvdXIgb3duIHRpbWUgd2l0aCBsaW1pdGVkIHN1cGVydmlzaW9uLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVRoaXMgcm9sZSBpcyBhdmFpbGFibGUgb24gYSBqb2Itc2hhcmUgYmFzaXMgdGhhdCB3b3VsZCBlbmFibGUgeW91IHRvIGNvbXBsZXRlIHBvc3RncmFkdWF0ZSBzdHVkaWVzIChlLmcuLCBhIFBoRCkgYWxvbmdzaWRlIHRoZSByb2xlLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUZvciBpbmZvcm1hbCBlbnF1aXJpZXMgYWJvdXQgdGhlIHJvbGUsIHBsZWFzZSBjb250YWN0IFByb2YgUGV0ZXIgSGlsbHM7IFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2NhIGhyZWY9XCJtYWlsdG86cC5oaWxsc0BiYXRoc3BhLmFjLnVrXCJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VwLmhpbGxzQGJhdGhzcGEuYWMudWtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJUZWFjaGluZyBGZWxsb3cgaW4gUHN5Y2hvbG9neSAoTWF0ZXJuaXR5IENvdmVyKSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9lMDYwNDYyYy1lZTkzLTQ0YTctYWQ5YS05OTExNzIxNGEyZTQiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2UwNjA0NjJjLWVlOTMtNDRhNy1hZDlhLTk5MTE3MjE0YTJlNCIsIndvcmtwbGFjZV90eXBlIjoib25zaXRlIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ik9uc2l0ZSIsImpvYiI6eyJpZCI6IjIxNTQ5OCIsInJlcXVpc2l0aW9uX2lkIjoiMzQ0LzIzLzI0IiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI1NDgwIiwibmFtZSI6IlNjaG9vbCBvZiBTY2llbmNlcyJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk4MTY3IiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlVGhpcyBpcyBhIHBhcnQgdGltZSByb2xlLCAyOCBob3VycyBwZXIgd2Vlay5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VHcmFkZSA2IC0gwqMyNCw0NTcgLSDCozI3LDI2MSBwZXIgYW5udW0sIHBybyByYXRhIMKjMzIsMzMyLcKjMzYsMDI0XHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlU29tZSBldmVuaW5nIGFuZCB3ZWVrZW5kIHdvcmtpbmcgZHVyaW5nIHRlcm0gdGltZSB3aWxsIGJlIHJlcXVpcmVkLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6IsKjMjQsNDU3IC0gwqMyNywyNjEgcGVyIGFubnVtLCBwcm8gcmF0YSDCozMyLDMzMi3CozM2LDAyNCAiLCJjb21wZW5zYXRpb25fbWluaW11bSI6bnVsbCwiY29tcGVuc2F0aW9uX21heGltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6bnVsbCwiY29tcGVuc2F0aW9uX2ZyZXF1ZW5jeSI6bnVsbCwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0wOFQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBjdXJyZW50bHkgc2Vla2luZyBhbiBkZWRpY2F0ZWQgVGVjaG5pY2FsIERlbW9uc3RyYXRvciAobW92aW5nIGltYWdlKVx1MDAzY3N0cm9uZ1x1MDAzZSBcdTAwM2Mvc3Ryb25nXHUwMDNldG8gYmUgcmVzcG9uc2libGUgZm9yIHRoZSBkZWxpdmVyeSBvZiBzcGVjaWFsaXN0IHRlY2huaWNhbCBza2lsbHMgZGVtb25zdHJhdGlvbnMgdG8gZWl0aGVyIGdyb3VwcyBvZiBzdHVkZW50cyBvciBvbmUtdG8tb25lIHN1cHBvcnQgdG8gaW5kaXZpZHVhbHMgaGVyZSBhdCBCYXRoIFNwYSBVbml2ZXJzaXR5XHUwMDNjYnJcdTAwM2UoVGhpcyBpcyBhIHBhcnQgdGltZSByb2xlLCAyOCBob3VycyBwZXIgd2VlaylcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6InBhcnRfdGltZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiUGFydCBUaW1lIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIHJvbGUgb2YgYSBUZWNobmljYWwgRGVtb25zdHJhdG9yIGNvbWJpbmVzIHRlY2huaWNhbCBrbm93bGVkZ2UgYW5kIGlubm92YXRpdmUgdGhpbmtpbmcgd2l0aCB0aGUgZGVzaWduIGFuZCBkZWxpdmVyeSBvZiBoYXJkd2FyZSBhbmQgc29mdHdhcmUgZGVtb25zdHJhdGlvbnMgdG8gc3R1ZGVudHMuIFdpdGhpbiB0aGUgcm9sZSB5b3Ugd2lsbCBiZSByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgdGhlIG1haW50ZW5hbmNlIG9mIHNwZWNpYWxpc3QgZXF1aXBtZW50IGlzIGNhcnJpZWQgb3V0IHdpdGhpbiBvd24gYXJlYSBvZiB3b3JrIGFuZCB0aGF0IGhlYWx0aCBhbmQgc2FmZXR5IHN0YW5kYXJkcyBhcmUgY29tcGxpZWQgd2l0aC4gVGhpcyByb2xlIHdpbGwgYmUgYmFzZWQgYXJvdW5kIHRoZSBkZWxpdmVyeSBvZiB0cmFpbmluZyBhbmQgZGVtb25zdHJhdGlvbiBvZiBtb3ZpbmcgaW1hZ2UgY2FwdHVyZSwgbW90aW9uIGdyYXBoaWNzIGdlbmVyYXRpb24sIGVkaXRpbmcgYW5kIGdhbGxlcnkgcHJlc2VudGF0aW9uLiBJdCB3aWxsIGJlIGxvY2F0ZWQgYXQgdGhlIExvY2tzYnJvb2sgUmQgY2FtcHVzIG1haW5seSB3b3JraW5nIHdpdGggc3R1ZGVudHMgZW5yb2xsZWQgb24gY291cnNlcyB3aXRoaW4gdGhlIFNjaG9vbHMgb2YgQXJ0LCBGaWxtIGFuZCBNZWRpYSBhbmQgdGhlIFNjaG9vbCBvZiBEZXNpZ24uXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQXMgVGVjaG5pY2FsIERlbW9uc3RyYXRvciB5b3Ugd2lsbCBkZW1vbnN0cmF0ZSBjb21wbGV4IHRlY2huaWNhbCB0ZWNobmlxdWVzIHRvIHN0dWRlbnRzIGZyb20gdmFyaW91cyBwcm9ncmFtcywgc3VwcG9ydCBpbmRpdmlkdWFsIGFuZCBncm91cCBzdHVkZW50IHdvcmssIGFuZCBkZXZlbG9wIGFuZCBydW4gd29ya3Nob3BzIG9uIHRoZSB1c2Ugb2Ygb3VyIGZhY2lsaXRpZXMuIFlvdSB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciBwcmVwYXJpbmcgcmVzb3VyY2VzIGFuZCBlcXVpcG1lbnQsIHN1cGVydmlzaW5nIHN0dWRlbnRzJyBwcm9qZWN0IHdvcmssIGFuZCBlbnN1cmluZyBoZWFsdGggYW5kIHNhZmV0eSBjb21wbGlhbmNlIHdpdGhpbiB0aGUgd29ya3NwYWNlLiBBZGRpdGlvbmFsbHksIHlvdSB3aWxsIGNvbmR1Y3QgcmlzayBhc3Nlc3NtZW50cywgbWFpbnRhaW4gZXF1aXBtZW50LCBhbmQgc3RheSB1cGRhdGVkIHdpdGggbmV3IHRlY2hub2xvZ2llcyBhbmQgY29udGVtcG9yYXJ5IHByYWN0aWNlcyBpbiB5b3VyIGZpZWxkLiBZb3UgbWF5IGFsc28gYWR2aXNlIG9uIGZ1dHVyZSByZXNvdXJjZSByZXF1aXJlbWVudHMgYW5kIHN1cGVydmlzZSBhIHNtYWxsIHRlYW0gb2YgdGVjaG5pY2FsIHN0YWZmLlx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBiZSBhIHF1YWxpZmllZCBXb3Jrc2hvcCBhbmQgTGFib3JhdG9yeSBUZWNobmljaWFuIHdpdGggYW4gTlZRNCwgTkVCU1MsIG9yIGRlZ3JlZSBpbiBhIHJlbGV2YW50IHByYWN0aWNhbCBzdWJqZWN0LCBvciBzaWduaWZpY2FudCBwcm9mZXNzaW9uYWwgZXhwZXJpZW5jZSBpbiBhIHNwZWNpYWxpc3QgYXJlYS4gWW91IHdpbGwgaGF2ZSBleHBlcmllbmNlIGluIGRlbW9uc3RyYXRpb24gb3IgdHJhaW5pbmcsIHN1cGVydmlzb3J5IHNraWxscywgYW5kIGV4cGVydGlzZSBpbiB2aWRlbyBjYXB0dXJlLCBtb3Rpb24gZ3JhcGhpY3MsIGFuaW1hdGlvbiwgYW5kIGdhbGxlcnkgcHJlc2VudGF0aW9uIG9mIG1vdmluZyBpbWFnZXMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHNob3VsZCBkZW1vbnN0cmF0ZSBhIHByb2FjdGl2ZSBhcHByb2FjaCB0byBtYWludGVuYW5jZSwgZGV2ZWxvcG1lbnQsIGFuZCBzYWZldHksIHBvc3Nlc3MgZXhjZWxsZW50IGludGVycGVyc29uYWwsIHdyaXR0ZW4sIGFuZCBvcmFsIGNvbW11bmljYXRpb24gc2tpbGxzLCBhbmQgaGF2ZSBzdHJvbmcgSUNUIGNhcGFiaWxpdGllcy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGUgcm9sZSByZXF1aXJlcyB0aGUgYWJpbGl0eSB0byBwbGFuIGFuZCBvcmdhbmlzZSB3b3JrLCBtYW5hZ2UgcmVzb3VyY2VzLCBsaWFpc2Ugd2l0aCBzdGFmZiwgZGVwYXJ0bWVudHMsIGFuZCBleHRlcm5hbCBhZ2VuY2llcywgdXNlIGluaXRpYXRpdmUgYW5kIHByb2JsZW0tc29sdmluZyBza2lsbHMsIG1ha2UgZGVjaXNpb25zLCBhbmQgd29yayB1bmRlciBwcmVzc3VyZSB0byB0aWdodCBkZWFkbGluZXMuIEZsZXhpYmlsaXR5LCBhZGFwdGFiaWxpdHksIGFuZCBhIHBvc2l0aXZlIGFwcHJvYWNoIHRvIGNoYW5nZSBhcmUgZXNzZW50aWFsLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IlRlY2huaWNhbCBEZW1vbnN0cmF0b3IgKE1vdmluZyBJbWFnZSkiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvNjU5MDMxNzYtZWNkMS00YTEyLTg3YzEtY2I4YTU2NGE3NDAwIiwicGF0aCI6Ii9lbi9wb3N0aW5ncy82NTkwMzE3Ni1lY2QxLTRhMTItODdjMS1jYjhhNTY0YTc0MDAiLCJ3b3JrcGxhY2VfdHlwZSI6Im9uc2l0ZSIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJPbnNpdGUiLCJqb2IiOnsiaWQiOiIyMTYzNzgiLCJyZXF1aXNpdGlvbl9pZCI6IjM0Ny8yMy8yNCIsImRlcGFydG1lbnQiOnsiaWQiOiIzMDc0NiIsIm5hbWUiOiJUZWNobmljYWwgU2VydmljZXMifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OSIsImNpdHkiOiJCYXRoIiwibmFtZSI6IkJhdGggLSBMb2Nrc2Jyb29rIENhbXB1cyIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk4NDcxIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhpcyBwb3N0IHJlZ3JldGZ1bGx5IHdlIGNhbm5vdCBhY2NlcHQgYXBwbGljYXRpb25zIHRoYXQgZG8gbm90IGhhdmUgdGhlIFJpZ2h0IHRvIFdvcmsvTGl2ZSBpbiB0aGUgVUsgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBiZSByZWplY3RlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC0gRnJvbSA1dGggQXVndXN0IDIwMjQuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBub3RlOlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VJTlRFUlZJRVdTIFdJTEwgQkUgT05HT0lORyBBTkQgVEhFIEpPQiBXSUxMIENMT1NFIE9OQ0UgQUxMIFBPU0lUSU9OUyBBUkUgRklMTEVEXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVBsZWFzZSBlbWFpbCBEYXZpZCBDb2JiIGRpcmVjdGx5IGQuY29iYkBiYXRoc3BhLmFjLnVrIGZvciBhbnkgcXVlcmllcyByZWdhcmRpbmcgdGhpcyBwb3NpdGlvbi5cdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6bnVsbCwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMzFUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgc2Vla2luZyBrbm93bGVkZ2VhYmxlIGFuZCBlbnRodXNpYXN0aWMgY29tcHV0aW5nIGVkdWNhdG9ycyB0byBzdXBwb3J0IGxlYXJuaW5nIHdpdGhpbiB0aGUgR2FtZXMgRGV2ZWxvcG1lbnQgYW5kIENyZWF0aXZlIENvbXB1dGluZyAoR2FtZXMpIGNvdXJzZXMgYXQgQmF0aCBTcGEgVW5pdmVyc2l0eS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGUgaW5kaXZpZHVhbChzKSB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcGxhbm5pbmcsIGRlbGl2ZXJ5IGFuZCBhc3Nlc3NtZW50IG9mIG1vZHVsZXMgZm9jdXNlZCBvbiBzdWJqZWN0cyB3aXRoaW4gdGhlIGZpZWxkIG9mIGdhbWVzIGRlc2lnbiBhbmQgZGV2ZWxvcG1lbnQuXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZmxleGlibGUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZsZXhpYmxlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIHN1Y2Nlc3NmdWwgY2FuZGlkYXRlKHMpIHdpbGwgcGxheSBhbiBpbXBvcnRhbnQgcm9sZSBpbiBkZXZlbG9waW5nIHRoZSBrbm93bGVkZ2UgYW5kIHNraWxscyBvZiB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVRoZXkgd2lsbCB3b3JrIGFzIHBhcnQgb2YgdGhlIGNvbXB1dGluZyB0ZWFtIHRvIHByb3ZpZGUgbWVudG9yc2hpcCwgZGVsaXZlciByb2J1c3QgYXNzZXNzbWVudCBhbmQgb3ZlcmFsbCBtYWludGFpbiBhIGhpZ2gtbGV2ZWwgaW5kdXN0cnktaW5mb3JtZWQgZXhwZXJpZW5jZS5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGhhdmUgZXhwZXJpZW5jZSBpbiBkZWxpdmVyaW5nIGFuZCBsZWFkaW5nIHRlYWNoaW5nIGFuZCBsZWFybmluZyBpbiBhIEZ1cnRoZXIgYW5kL29yIEhpZ2hlciBFZHVjYXRpb24gaW5zdGl0dXRpb24gaW4gZ2FtZXMgZGV2ZWxvcG1lbnQgb3Igc2ltaWxhciBDcmVhdGl2ZSBDb21wdXRpbmcgc3ViamVjdHMuIFdlIGV4cGVjdCB0aGF0IGFzIGEgZ2FtZXMgYW5kIGNyZWF0aXZlIHRlY2hub2xvZ3kgc3BlY2lhbGlzdCwgeW91IHdpbGwgYmUgYWN0aXZlbHkgZW5nYWdlZCBpbiByZWxhdGVkIHByYWN0aWNlIGFuZCBhYmxlIHRvIHRyYW5zbGF0ZSB5b3VyIHByb2Zlc3Npb25hbCBpbnRlcmVzdHMgaW50byB0aGUgdGVhY2hpbmcgYW5kIGxlYXJuaW5nIHByYWN0aWNlcyBvbiB0aGUgY291cnNlLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgaWRlYWxseSBoYXZlIGFkZGl0aW9uYWwgaW5kdXN0cnkgYW5kL29yIHRlYWNoaW5nIGV4cGVyaWVuY2UgdXNpbmcgbW9kZXJuIGdhbWUgZW5naW5lcyBzdWNoIFVuaXR5M0QgYW5kIFVucmVhbCwgYW5kIHNvbWUga25vd2xlZGdlIG9mIG90aGVycy4gWW91IHdpbGwgaGF2ZSBhIGRlZ3JlZSBpbiBhIHJlbGV2YW50IGRpc2NpcGxpbmUsIGFuZCB5b3UgbWF5IGhhdmUsIG9yIGJlIHdvcmtpbmcgdG93YXJkcywgYSBwb3N0IGdyYWR1YXRlIHF1YWxpZmljYXRpb24uIEV4cGVyaWVuY2UgaW4gYSBnYW1lIHByb2R1Y3Rpb24gcm9sZSBpcyBhIGJvbnVzLlx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkFzc29jaWF0ZSBMZWN0dXJlciDigJMgR2FtZXMgRGV2ZWxvcG1lbnQiLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvMGMwMDZlMWEtOTA3Yi00MjUyLWJmNDEtNzJmNzJkN2E4NjQ5IiwicGF0aCI6Ii9lbi9wb3N0aW5ncy8wYzAwNmUxYS05MDdiLTQyNTItYmY0MS03MmY3MmQ3YTg2NDkiLCJ3b3JrcGxhY2VfdHlwZSI6Imh5YnJpZCIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJIeWJyaWQiLCJqb2IiOnsiaWQiOiIyMTY2NzQiLCJyZXF1aXNpdGlvbl9pZCI6IiIsImRlcGFydG1lbnQiOnsiaWQiOiIxOTA4OCIsIm5hbWUiOiJTY2hvb2wgb2YgRGVzaWduIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTgiLCJjaXR5IjoiQmF0aCAiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIxOTg0ODMiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VEdWUgdG8gdGhlIG5hdHVyZSBvZiB0aGlzIHBvc3QgcmVncmV0ZnVsbHkgd2UgY2Fubm90IGFjY2VwdCBhcHBsaWNhdGlvbnMgdGhhdCBkbyBub3QgaGF2ZSB0aGUgUmlnaHQgdG8gV29yay9MaXZlIGluIHRoZSBVSyB0aGVyZWZvcmUgeW91ciBhcHBsaWNhdGlvbiB3aWxsIGJlIHJlamVjdGVkLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlR3JhZGUgQWMyIC0gwqMxOS4yMyBwZXIgaG91ciAoYSBtdWx0aXBsaWVyIG9mIDIuNSBtYXkgYmUgYXBwbGllZCBkZXBlbmRpbmcgb24gdGhlIHdvcmsgb2ZmZXJlZClcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlSW50ZXJ2aWV3IERhdGUgLSBGcm9tIDV0aCBBdWd1c3QgMjAyNC5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUGxlYXNlIG5vdGU6XHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZUlOVEVSVklFV1MgV0lMTCBCRSBPTkdPSU5HIEFORCBUSEUgSk9CIFdJTEwgQ0xPU0UgT05DRSBBTEwgUE9TSVRJT05TIEFSRSBGSUxMRURcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUGxlYXNlIGVtYWlsIERhdmlkIENvYmIgZGlyZWN0bHkgZC5jb2JiQGJhdGhzcGEuYWMudWsgZm9yIGFueSBxdWVyaWVzIHJlZ2FyZGluZyB0aGlzIHBvc2l0aW9uLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6bnVsbCwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMzFUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgc2Vla2luZyBrbm93bGVkZ2VhYmxlIGFuZCBlbnRodXNpYXN0aWMgY29tcHV0aW5nIGVkdWNhdG9ycyB0byBzdXBwb3J0IGxlYXJuaW5nIHdpdGhpbiB0aGUgQlNjIChIT05TKSBDb21wdXRpbmcgY291cnNlIGF0IEJhdGggU3BhIFVuaXZlcnNpdHkuIFx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VUaGUgaW5kaXZpZHVhbChzKSB3aWxsIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgcGxhbm5pbmcsIGRlbGl2ZXJ5IGFuZCBhc3Nlc3NtZW50IG9mIG1vZHVsZXMgZm9jdXNlZCBvbiBzdWJqZWN0cyB3aXRoaW4gdGhlIGZpZWxkIG9mIENvbXB1dGluZy5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZmxleGlibGUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZsZXhpYmxlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIHN1Y2Nlc3NmdWwgY2FuZGlkYXRlKHMpIHdpbGwgcGxheSBhbiBpbXBvcnRhbnQgcm9sZSBpbiBkZXZlbG9waW5nIHRoZSBrbm93bGVkZ2UgYW5kIHNraWxscyBvZiB1bmRlcmdyYWR1YXRlIHN0dWRlbnRzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVRoZXkgd2lsbCB3b3JrIGFzIHBhcnQgb2YgdGhlIGNvbXB1dGluZyB0ZWFtIHRvIHByb3ZpZGUgbWVudG9yc2hpcCwgZGVsaXZlciByb2J1c3QgYXNzZXNzbWVudCBhbmQgb3ZlcmFsbCBtYWludGFpbiBhIGhpZ2gtbGV2ZWwgaW5kdXN0cnktaW5mb3JtZWQgZXhwZXJpZW5jZS5cdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgdGhlIFJvbGUiLCJyZXBvcnRpbmdfdG8iOm51bGwsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVlvdSB3aWxsIGhhdmUgZXhwZXJpZW5jZSBpbiBkZWxpdmVyaW5nIGFuZCBsZWFkaW5nIHRlYWNoaW5nIGFuZCBsZWFybmluZyBpbiBhIEZ1cnRoZXIgYW5kL29yIEhpZ2hlciBFZHVjYXRpb24gaW5zdGl0dXRlIGluIENvbXB1dGluZyBzdWJqZWN0cy4gV2UgZXhwZWN0IHRoYXQgYXMgYSBDb21wdXRpbmcgc3BlY2lhbGlzdCwgeW91IHdpbGwgYmUgYWN0aXZlbHkgZW5nYWdlZCBpbiBjb21wdXRpbmcgcHJhY3RpY2UgYW5kIGFibGUgdG8gdHJhbnNsYXRlIHlvdXIgcHJvZmVzc2lvbmFsIGludGVyZXN0cyBpbnRvIHRoZSB0ZWFjaGluZyBhbmQgbGVhcm5pbmcgcHJhY3RpY2VzIG9uIHRoZSBjb3Vyc2UuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIGluZHVzdHJ5IGFuZC9vciB0ZWFjaGluZyBleHBlcmllbmNlIHdpdGhpbiBvbmUgb3IgbW9yZSBvZiB0aGUgZm9sbG93aW5nIGFyZWFzOiBPTyBzb2Z0d2FyZSBkZXZlbG9wbWVudCB1c2luZyBDKyssIHNvZnR3YXJlIGVuZ2luZWVyaW5nLCBhbmQgYnVzaW5lc3MgYW5hbHlzaXMuIFlvdSB3aWxsIGhhdmUgYSBkZWdyZWUgaW4gYSByZWxldmFudCBkaXNjaXBsaW5lLCBhbmQgeW91IG1heSBoYXZlLCBvciBiZSB3b3JraW5nIHRvd2FyZHMsIGEgcG9zdCBncmFkdWF0ZSBxdWFsaWZpY2F0aW9uLiBFeHBlcmllbmNlIGRldmVsb3BpbmcgY3JlYXRpdmUgYW5kIGVudGVydGFpbm1lbnQgc29mdHdhcmUgaXMgYSBib251cy5cdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJBc3NvY2lhdGUgTGVjdHVyZXIgLSBDb21wdXRpbmciLCJ1cmwiOiJodHRwczovL2JhdGhzcGEucGlucG9pbnRocS5jb20vZW4vcG9zdGluZ3MvNGY2N2U1ODUtNTI0OC00ZTFhLWIzYjEtNTc5Zjk1ZWM3MjI3IiwicGF0aCI6Ii9lbi9wb3N0aW5ncy80ZjY3ZTU4NS01MjQ4LTRlMWEtYjNiMS01NzlmOTVlYzcyMjciLCJ3b3JrcGxhY2VfdHlwZSI6Imh5YnJpZCIsIndvcmtwbGFjZV90eXBlX3RleHQiOiJIeWJyaWQiLCJqb2IiOnsiaWQiOiIyMTY2ODYiLCJyZXF1aXNpdGlvbl9pZCI6IiIsImRlcGFydG1lbnQiOnsiaWQiOiIxOTA4OCIsIm5hbWUiOiJTY2hvb2wgb2YgRGVzaWduIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTgiLCJjaXR5IjoiQmF0aCAiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIxOTg4MjIiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VXZSBlbmNvdXJhZ2UgYXBwbGljYXRpb25zIGZyb20gZGlzYWJsZWQgcGVvcGxlIGFuZCBjYW4gcHJvdmlkZSByZWFzb25hYmxlIGFkanVzdG1lbnRzLCBzbyBwbGVhc2UgbGV0IHVzIGtub3cgaWYgdGhlcmUgaXMgYW55dGhpbmcgd2UgY2FuIGRvIHRvIG1ha2UgYXBwbHlpbmcgZm9yIHRoaXMgcm9sZSBtb3JlIGFjY2Vzc2libGUgZm9yIHlvdS4gXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlU2FsYXJ5OiBHcmFkZSA1IC0gwqMyNyw5NzkgdG8gwqMzMSwzOTYgKHBlciBhbm51bSksIMKjNSw1OTUuODAgdG8gwqM2LDI3OS4yMCAocHJvLXJhdGEpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVRoaXMgaXMgYSAwLjIgRlRFIHBhcnQtdGltZSwgb25lIHllYXIgZml4ZWQtdGVybSByb2xlLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VSZWNlbnQgYWRqdXN0bWVudCBpbiB0aGUgVUvigJlzIFNwb25zb3JzaGlwIFRocmVzaG9sZFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlUGxlYXNlIG5vdGUgdGhhdCBhcyBvZiBBcHJpbCAyMDI0LCB0aGVyZSBoYXMgYmVlbiBhIGNoYW5nZSBpbiB0aGUgVUvigJlzIHNwb25zb3JzaGlwIHRocmVzaG9sZC4gUmVncmV0dGFibHkgYXMgdGhlIHNhbGFyeSBmb3IgdGhpcyByb2xlIGZhbGxzIGJlbmVhdGggdGhpcywgeW91IHdpbGwgbm90IGJlIGVsaWdpYmxlIGZvciBzcG9uc29yc2hpcCB0aGVyZWZvcmUgeW91ciBhcHBsaWNhdGlvbiB3aWxsIGF1dG9tYXRpY2FsbHkgYmUgcmVqZWN0ZWQuXHUwMDI2bmJzcDtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOiLCozI3LDk3OSAtIMKjMzEsMzk2IC8geWVhciIsImNvbXBlbnNhdGlvbl9taW5pbXVtIjoyNzk3OS4wLCJjb21wZW5zYXRpb25fbWF4aW11bSI6MzEzOTYuMCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjoiR0JQIiwiY29tcGVuc2F0aW9uX2ZyZXF1ZW5jeSI6InllYXIiLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTE5VDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlV2UgYXJlIGN1cnJlbnRseVx1MDAzY3N0cm9uZ1x1MDAzZSBcdTAwM2Mvc3Ryb25nXHUwMDNlc2Vla2luZyB0byBhcHBvaW50IGEgUmVzZWFyY2ggQXNzaXN0YW50IHRvIHN1cHBvcnQgdGhlIGNyZWF0aW9uIGFuZCBkZXZlbG9wbWVudCBvZiBhIGRpc2FiaWxpdHkgaHViIHdoaWNoIGFpbXMgdG8gYnJpbmcgdG9nZXRoZXIgYW5kIGRpc3NlbWluYXRlIFdlIEFyZSBUaGUgUGVvcGxlIHJlc2VhcmNoIHRvIHRoZSBTb3V0aCBXZXN0LiBcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIEFyZSBUaGUgUGVvcGxlIChXQVRQKSBpcyBhIHNtYWxsIHJlc2VhcmNoIHRlYW0gb2YgZGlzYWJsZWQgYWNhZGVtaWNzIGFuZCBub24tZGlzYWJsZWQgYWxsaWVzIGVuZ2FnZWQgaW4gZGlzYWJpbGl0eSByZXNlYXJjaCBhbmQgZGlzYWJpbGl0eSBhY3RpdmlzbS4gV2UndmUgYmVlbiBhd2FyZGVkIGEgZml2ZS15ZWFyLCDCozFtaWxsaW9uIGdyYW50IGZyb20gdGhlIFx1MDAzY2EgaHJlZj1cImh0dHBzOi8vd2VsbGNvbWUub3JnL1wiXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlV2VsbGNvbWUgVHJ1c3RcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2UgdG8gZXhwbG9yZSBpc3N1ZXMgd2hpY2ggYWZmZWN0IGRpc2FibGVkIHBlb3BsZSBpbiBTb3V0aCBXZXN0IEVuZ2xhbmQuXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZml4ZWRfdGVybV9wYXJ0X3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZpeGVkIFRlcm0gLSBQYXJ0IFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgcm9sZSBpbnZvbHZlcyBkZXZlbG9waW5nIGFuIHVuZGVyc3RhbmRpbmcgb2Ygb25nb2luZyByZXNlYXJjaCBieSBEaXNhYmxlZCBQZW9wbGXigJlzIE9yZ2FuaXNhdGlvbnMgKERQT3MpLCBjcmVhdGluZyBhIGRpc2FiaWxpdHkgdHJhaW5pbmcgcHJvZ3JhbW1lIGxlZCBieSBkaXNhYmxlZCBpbmRpdmlkdWFscywgYW5kIG9yZ2FuaXppbmcgZXZlbnRzIHRvIHNob3djYXNlIGZpbmRpbmdzLiBZb3Ugd2lsbCBlbnN1cmUgdGhlIGFjY2Vzc2libGUgZGlzc2VtaW5hdGlvbiBvZiByZXNlYXJjaCByZXN1bHRzLCBpbnZlc3RpZ2F0ZSBjb2xsYWJvcmF0aXZlIG9wcG9ydHVuaXRpZXMgd2l0aCBEUE9zLCBhbmQgYnVpbGQgcmVsYXRpb25zaGlwcyB3aXRoIGNvbW11bml0eSBjb250YWN0cyBmb3IgZnV0dXJlIGZ1bmRpbmcuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlS2V5IHJlc3BvbnNpYmlsaXRpZXMgaW5jbHVkZSBwcm92aWRpbmcgZ3VpZGFuY2UgdG8gY29tbXVuaXR5IHBhcnRuZXJzLCBjb250cmlidXRpbmcgdG8gbWVldGluZ3MsIGFkaGVyaW5nIHRvIEhlYWx0aCBhbmQgU2FmZXR5IGd1aWRlbGluZXMsIGFuZCBkZXZlbG9waW5nIHJlc2VhcmNoIG1ldGhvZHMgd2l0aGluIHRoZSBwcm9ncmFtbWUgZnJhbWV3b3JrLlx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBiZSBwYXNzaW9uYXRlIGFib3V0IGRpc2FiaWxpdHkgZXF1YWxpdHkgYW5kIGhvbGQgYSBnb29kIGZpcnN0IGRlZ3JlZSBpbiBhIHJlbGV2YW50IGRpc2NpcGxpbmUgc3VjaCBhcyBEaXNhYmlsaXR5IFN0dWRpZXMsIFBzeWNob2xvZ3ksIFNvY2lhbCBTY2llbmNlLCBBcnRzLCBldGMuIFlvdSB3aWxsIGFsc28gaGF2ZSBkZW1vbnN0cmFibGUgZXhwZXJpZW5jZSBvZiB3b3JraW5nIGluIGEgY28tcHJvZHVjdGl2ZSB3YXkgd2l0aCBwcm9qZWN0IHBhcnRuZXJzLCBjb250cmlidXRpbmcgdG8gYSBjb21tdW5pdHksIGNoYXJpdHkgb3IgcmVzZWFyY2ggZW52aXJvbm1lbnQuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHdpbGwgYWxzbyBzaG93IGEgZGVtb25zdHJhYmxlIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHNlbnNpdGl2aXRpZXMgb2Ygd29ya2luZyB3aXRoIHVuZGVycmVwcmVzZW50ZWQgZ3JvdXBzLCBhbmQgdG8gcmVzcG9uZCB0byBwb3RlbnRpYWwgYmFycmllcnMgaW4gYSBjb21wYXNzaW9uYXRlIHdheS4gSW4gYWRkaXRpb24sIHlvdSB3aWxsIGJlIGFuIGV4Y2VsbGVudCBwcm9ibGVtIHNvbHZlciwgZmxleGlibGUsIGFkYXB0YWJsZSBhbmQgYSBjb21taXR0ZWQgdGVhbSBwbGF5ZXIuIFx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlRm9yIGFuIGluZm9ybWFsIGRpc2N1c3Npb24gcmVnYXJkaW5nIHRoaXMgcG9zdCwgcGxlYXNlIGNvbnRhY3QgdGhlIHRlYW0gYXQ6IFx1MDAzY2EgaHJlZj1cIm1haWx0bzpXZUFyZVRoZVBlb3BsZUBiYXRoc3BhLmFjLnVrXCJcdTAwM2VXZUFyZVRoZVBlb3BsZUBiYXRoc3BhLmFjLnVrXHUwMDNjL2FcdTAwM2UgXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlIiwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2VfaGVhZGVyIjoiQWJvdXQgWW91IiwidGl0bGUiOiJSZXNlYXJjaCBBc3Npc3RhbnQgLSBXZSBBcmUgVGhlIFBlb3BsZSBwcm9qZWN0IiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzL2QxMjdhODY4LTJhMDItNDgyYS1hYWU4LWQ5MzQzYzBkMTY3ZSIsInBhdGgiOiIvZW4vcG9zdGluZ3MvZDEyN2E4NjgtMmEwMi00ODJhLWFhZTgtZDkzNDNjMGQxNjdlIiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjE3MDMyIiwicmVxdWlzaXRpb25faWQiOiIzNjBfMjNfMjTigK8gIiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI1NDc5IiwibmFtZSI6IlNjaG9vbCBvZiBFZHVjYXRpb24ifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk1OCIsImNpdHkiOiJCYXRoICIsIm5hbWUiOiJCYXRoIC0gTmV3dG9uIFBhcmsiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjE5OTM2MCIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVRoaXMgcm9sZSBpcyBhIG9uZSB5ZWFyIGZpeGVkLXRlcm0gY29udGFjdC5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlU2FsYXJ5OiBHcmFkZSA4cywgwqM0Miw5NzggdG8gwqM0NCwyNjNcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImJlbmVmaXRzX2hlYWRlciI6IkFkZGl0aW9uYWwgSW5mb3JtYXRpb24iLCJjb21wZW5zYXRpb24iOiLCozQyLDk3OCAtIMKjNDQsMjYzIC8geWVhciIsImNvbXBlbnNhdGlvbl9taW5pbXVtIjo0Mjk3OC4wLCJjb21wZW5zYXRpb25fbWF4aW11bSI6NDQyNjMuMCwiY29tcGVuc2F0aW9uX2N1cnJlbmN5IjoiR0JQIiwiY29tcGVuc2F0aW9uX2ZyZXF1ZW5jeSI6InllYXIiLCJjb21wZW5zYXRpb25fdmlzaWJsZSI6dHJ1ZSwiZGVhZGxpbmVfYXQiOiIyMDI0LTA4LTExVDIzOjU5OjU5KzAxOjAwIiwiZGVzY3JpcHRpb24iOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQmF0aCBTcGEgVW5pdmVyc2l0eSBpcyBzZWVraW5nIGEgZHluYW1pYyBhbmQgaW5ub3ZhdGl2ZSBIZWFkIG9mIFJlY3J1aXRtZW50IHRvIGxlYWQgYW5kIGRlbGl2ZXIgY3V0dGluZy1lZGdlIHJlc291cmNpbmcgc29sdXRpb25zLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVRoaXMgcm9sZSBmb2N1c2VzIG9uIGRldmVsb3Bpbmcgc3VzdGFpbmFibGUgc3RhZmYgcmVjcnVpdG1lbnQgc3RyYXRlZ2llcywgb3B0aW1pemluZyBvdXIgZW1wbG95ZXIgdmFsdWUgcHJvcG9zaXRpb24gKEVWUCksIGFuZCBlbmhhbmNpbmcgb3VyIHJlY3J1aXRtZW50IGJyYW5kaW5nIGFjcm9zcyBhbGwgcGxhdGZvcm1zLiAoVGhpcyBpcyBhIDEgeWVhciBGaXhlZCBUZXJtIENvbnRyYWN0KVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZpeGVkX3Rlcm1fZnVsbF90aW1lIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGaXhlZCBUZXJtIC0gRnVsbCBUaW1lIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgb3ZlcnNlZSBhIHNtb290aCBhbmQgZWZmaWNpZW50IHJlY3J1aXRtZW50IHByb2Nlc3MsIGVuaGFuY2luZyBib3RoIHRoZSBjYW5kaWRhdGUgYW5kIGhpcmluZyBtYW5hZ2VyIGV4cGVyaWVuY2UgYW5kIHdpbGwgbGVhZCB0aGUgcmVjcnVpdG1lbnQgdGVhbSwgcHJvdmlkaW5nIGV4cGVydCBndWlkYW5jZSBhbmQgc3VwcG9ydC4gQ29sbGFib3JhdGluZyB3aXRoIHNlbmlvciBtYW5hZ2VycywgeW91IHdpbGwgdW5kZXJzdGFuZCBzdHJhdGVnaWMgcmVjcnVpdG1lbnQgbmVlZHMgYW5kIGRldGVybWluZSB0aGUgYmVzdCByZXNvdXJjaW5nIHN0cmF0ZWdpZXMuIFByb2FjdGl2ZSBzb3VyY2luZyBvZiBoYXJkLXRvLWZpbGwgb3Igc2VuaW9yIHJvbGVzIHRocm91Z2ggaGVhZGh1bnRpbmcsIG1pY3Jvc2l0ZXMsIGFuZCB2aWRlbyBjb250ZW50IHdpbGwgYmUgZXNzZW50aWFsLlx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVNldHRpbmcgYW5kIHJldmlld2luZyBrZXkgcGVyZm9ybWFuY2UgaW5kaWNhdG9ycyAoS1BJcykgd2lsbCBiZSBhIGNyaXRpY2FsIHBhcnQgb2YgdGhlIHJvbGUsIGVuc3VyaW5nIGVmZmVjdGl2ZSByZWNydWl0bWVudCBwcm9jZXNzZXMgYW5kIGFubnVhbCByZXBvcnRpbmcgb24gdHJlbmRzLiBZb3Ugd2lsbCBlbWJlZCBvdXIgRVZQIHRocm91Z2ggcmVjcnVpdG1lbnQgbWFya2V0aW5nIHRlY2huaXF1ZXMgYWxpZ25lZCB3aXRoIHRoZSBVbml2ZXJzaXR5J3MgdmFsdWVzIGFuZCBjdWx0dXJlIGFuZCB3aWxsIGJ1aWxkIEJTVeKAmXMgcHJlc2VuY2Ugb24gc29jaWFsIG1lZGlhIHRvIGluY3JlYXNlIGVuZ2FnZW1lbnQuIEltcGxlbWVudGluZyBpbml0aWF0aXZlcyB0byBpbXByb3ZlIHdvcmtmb3JjZSBkaXZlcnNpdHkgYW5kIGVuc3VyaW5nIHJlY3J1aXRtZW50IGVmZm9ydHMgYWxpZ24gd2l0aCB0aGUgVW5pdmVyc2l0eeKAmXMgRXF1YWxpdHksIERpdmVyc2l0eSwgYW5kIEluY2x1c2lvbiAoRURcdTAwMjZhbXA7SSkgU3RyYXRlZ3kgaXMgdml0YWwuIEluY2x1c2l2ZSByZWNydWl0bWVudCBwcmFjdGljZXMgbXVzdCBiZSBtYWludGFpbmVkIHRocm91Z2hvdXQgdGhlIGNhbmRpZGF0ZSBqb3VybmV5LCBhbmQgeW91IHdpbGwgaW5mbHVlbmNlIGxpbmUgbWFuYWdlcnMgdG8gcHJpb3JpdGlzZSB0YWxlbnQgZGl2ZXJzaXR5Llx1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUVzdGFibGlzaGluZyBhbmQgbWFuYWdpbmcgYSB0YWxlbnQgcG9vbCBwcm9jZXNzIGZvciBmdXR1cmUgdmFjYW5jaWVzIHdpbGwgYmUgcGFydCBvZiB5b3VyIHJlbWl0LCBhcyB3ZWxsIGFzIGJ1aWxkaW5nIGV4dGVybmFsIG5ldHdvcmtzIHRvIHN0YXkgdXBkYXRlZCBvbiByZWNydWl0bWVudCB0cmVuZHMgYW5kIGFkdmlzaW5nIHRoZSBVbml2ZXJzaXR5IGFjY29yZGluZ2x5Llx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VZb3Ugd2lsbCBoYXZlIHByb3ZlbiBleHBlcnRpc2UgaW4gZW1wbG95ZWUgcmVzb3VyY2luZyBzdHJhdGVnaWVzIGFuZCByZWNydWl0bWVudCBwcm9jZXNzZXMsIHN0cm9uZyBsZWFkZXJzaGlwIGFuZCB0ZWFtIG1hbmFnZW1lbnQgc2tpbGxzLCBhbmQgZXhwZXJpZW5jZSBpbiBkZXZlbG9waW5nIGFuZCBpbXBsZW1lbnRpbmcgRVZQLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVByb2ZpY2llbmN5IGluIHV0aWxpc2luZyBzb2NpYWwgbWVkaWEgZm9yIHJlY3J1aXRtZW50LCBhIGNvbW1pdG1lbnQgdG8gZGl2ZXJzaXR5IGFuZCBpbmNsdXNpb24gaW4gdGhlIHdvcmtwbGFjZSwgYW5kIGV4Y2VsbGVudCBjb21tdW5pY2F0aW9uIGFuZCByZWxhdGlvbnNoaXAtYnVpbGRpbmcgc2tpbGxzIGFyZSBlc3NlbnRpYWwuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiSGVhZCBvZiBSZWNydWl0bWVudCIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9mM2QyYjA1ZS1mNjRmLTQ5MmMtOTE0Yi05ZjVlM2RiZTFhYWUiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2YzZDJiMDVlLWY2NGYtNDkyYy05MTRiLTlmNWUzZGJlMWFhZSIsIndvcmtwbGFjZV90eXBlIjoiaHlicmlkIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ikh5YnJpZCIsImpvYiI6eyJpZCI6IjIxNzU2NiIsInJlcXVpc2l0aW9uX2lkIjoiMjU0LTIzLTI0IiwiZGVwYXJ0bWVudCI6eyJpZCI6IjE5MDg3IiwibmFtZSI6IkhSIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTgiLCJjaXR5IjoiQmF0aCAiLCJuYW1lIjoiQmF0aCAtIE5ld3RvbiBQYXJrIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIxOTk4MTAiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VEdWUgdG8gdGhlIG5hdHVyZSBvZiB0aGlzIHBvc3QgcmVncmV0ZnVsbHkgd2UgY2Fubm90IGFjY2VwdCBhcHBsaWNhdGlvbnMgdGhhdCBkbyBub3QgaGF2ZSB0aGUgUmlnaHQgdG8gV29yay9MaXZlIGluIHRoZSBVSyB0aGVyZWZvcmUgeW91ciBhcHBsaWNhdGlvbiB3aWxsIGJlIHJlamVjdGVkLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlVGVtcG9yYXJ5LCBmaXhlZCB0ZXJtIFNlbWVzdGVyL1RyaW1lc3RlciBvbmUgYW5kIHR3byAyMDI0IC0yMDI1LiBQYXJ0IFRpbWUgSG91cnMgdG8gYmUgYWdyZWVkLlx1MDAzY2JyXHUwMDNlXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlR3JhZGUgQWMyIC0gwqMxOS4yMyBwZXIgaG91ciAoYSBtdWx0aXBsaWVyIG9mIDIuNSBtYXkgYmUgYXBwbGllZCBkZXBlbmRpbmcgb24gdGhlIHdvcmsgb2ZmZXJlZClcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlR2VuZXJhbCB0ZWFjaGluZyBjb21tZW5jZXMgd2VlayBiZWdpbm5pbmcgMzB0aCBTZXB0ZW1iZXIgMjAyNCBidXQgbW9kdWxlIGRldmVsb3BtZW50IHdpbGwgYmVmb3JlIHRoZXNlIGRhdGUuIE91ciAyMDI0LzUgdGVybSBkYXRlcyBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly93d3cuYmF0aHNwYS5hYy51ay9hYm91dC11cy90ZXJtLWRhdGVzL1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6bnVsbCwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMTlUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBhcmUgbG9va2luZyBmb3IgdGFsZW50ZWQgQXNzb2NpYXRlIExlY3R1cmVycyBpbiBMYXcgdG8gam9pbiBvdXIgY29sbGVnaWFsIHRlYW0sIGNvbnRyaWJ1dGluZyB0byB0ZWFjaGluZyBhbmQgZGV2ZWxvcG1lbnQgb2YgbGF3IG1vZHVsZXMgb24gYSBwYXJ0IHRpbWUgYmFzaXMgYXQgdmFyaW91cyB0aW1lcyB0aHJvdWdoIHRoZSAyMDI0LzIwMjUgYWNhZGVtaWMgeWVhci5cdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUaGUgQXNzb2NpYXRlIExlY3R1cmVyIHBvc3RzIHJlcXVpcmUgbGVjdHVyaW5nLCB0YWtpbmcgc2VtaW5hciBncm91cHMsIGFzc2Vzc21lbnQgYW5kIHdvcmtpbmcgYXMgcGFydCBvZiBhIHRlYW0gb2YgdHV0b3JzLlx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmbGV4aWJsZSIsImVtcGxveW1lbnRfdHlwZV90ZXh0IjoiRmxleGlibGUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VBdCBCYXRoIFNwYSBVbml2ZXJzaXR5IHdlIHdvcmsgd2l0aCBvbmUgY2xlYXIgdmlzaW9uOiB0byBiZSBhIGxlYWRpbmcgdW5pdmVyc2l0eSBpbiBjcmVhdGl2aXR5LCBjdWx0dXJlIGFuZCBlbnRlcnByaXNlLiBBbmQgd2UgcGxhY2UgY29sbGFib3JhdGlvbiBhdCB0aGUgaGVhcnQgb2YgZXZlcnl0aGluZyB3ZSBkby4gV2l0aCBldmVyIGdyb3dpbmcgc3R1ZGVudCBudW1iZXJzLCB3ZSBtYWtlIHN1cmUgb3VyIHBlb3BsZSBhcmUgZW5nYWdlZCBhbmQgZW1wb3dlcmVkIGJ5IGJsZW5kaW5nIGRpZ2l0YWwgdGVjaG5vbG9naWVzLCBpbnRlcm5hdGlvbmFsIHBlcnNwZWN0aXZlcywgd29yay1vcmllbnRlZCBjb25uZWN0aW9ucyBhbmQgaW5zcGlyYXRpb25hbCB0ZWFjaGluZy4gVG9nZXRoZXIgd2XigJlyZSBvbiBhIGpvdXJuZXkgdG8gdHJhbnNmb3JtIG91ciBzdHVkZW50c+KAmSBsaXZlcy4gQW5kIGl0IHN0YXJ0cyB3aXRoIHBlb3BsZSBsaWtlIHlvdS5cdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VBYm91dCBCYXRoIEJ1c2luZXNzIFNjaG9vbFx1MDAyNm5ic3A7XHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUJhdGggQnVzaW5lc3MgU2Nob29sIGlzIHNldCB3aXRoaW4gYSBiZWF1dGlmdWwgY291bnRyeXNpZGUgbG9jYXRpb24sIGNsb3NlIHRvIHRoZSB3b3JsZCBoZXJpdGFnZSBjaXR5IG9mIEJhdGguIE91ciBzdGFmZiBhbmQgc3R1ZGVudHMgYXJlIGV0aGljYWxseSBhd2FyZSwgc29jaWFsbHkgZW5nYWdlZCBhbmQgZ2xvYmFsbHkgY29ubmVjdGVkIHRocm91Z2ggb3VyIGxpbmtzIHRvIHJlc2VhcmNoLCBhbmQgcHJvZmVzc2lvbmFsIGFuZCBjcmVhdGl2ZSBpbmR1c3RyeSBuZXR3b3Jrcy5cdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZU91ciBMYXcgRGVncmVlXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZU91ciBuZXcgTExCIExhdyBkZWdyZWUgaGFzIGJlZW4gZGVzaWduZWQgdG8gYmUgdW5pcXVlIGFuZCBpbmNvcnBvcmF0ZXMgYSByYW5nZSBvZiBidXNpbmVzcyBza2lsbHMgYW5kIG9wdGlvbmFsIG1vZHVsZXMgd2hpbHN0IGVuY29tcGFzc2luZyB0aGUgZm91bmRhdGlvbnMgb2YgbGVnYWwga25vd2xlZGdlIGZvdW5kIGluIFNRRSAxIGFuZCBtYW55IGVsZW1lbnRzIG9mIFNRRSAyLlx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVRoZSBCYXRoIFNwYSBMTEIgaXMgYXQgdGhlIGN1dHRpbmcgZWRnZSBvZiBsZWdhbCBlZHVjYXRpb24uIE91ciBMTEIgb2ZmZXJzIGEgcmFuZ2Ugb2YgYXV0aGVudGljIGFzc2Vzc21lbnRzLCB0aGUgb2ZmZXIgb2YgbXVsdGlwbGUgcGxhY2VtZW50IG9wcG9ydHVuaXRpZXMgaW5jbHVkaW5nIGEgcGxhY2VtZW50IHllYXIsIGFzIHdlbGwgYXMgdGhlIG9wcG9ydHVuaXR5IG9mIHVuZGVydGFraW5nIHRoZSBMYXcgQ2xpbmljIG1vZHVsZSBmb3IgZmluYWwgeWVhciBzdHVkZW50cy5cdTAwMjZuYnNwOyBPdXIgTGF3IENsaW5pYyBpcyBhIHJlc3VsdCBvZiBhbiBpbXByZXNzaXZlIGpvaW50IHZlbnR1cmUgYmV0d2VlbiBCYXRoIFNwYSBVbml2ZXJzaXR5LCBTdG9uZSBLaW5nIExMUCBhbmQgdGhlIENpdGl6ZW5zIEFkdmljZSBCdXJlYXUgQkFORVMuXHUwMDI2bmJzcDtcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VXZSBiZWxpZXZlIGluIGdpdmluZyBvdXIgc3R1ZGVudHMgYSBoaWdoLXF1YWxpdHkgZWR1Y2F0aW9uYWwgZXhwZXJpZW5jZSwgZXhjZXB0aW9uYWwgb3Bwb3J0dW5pdGllcyB0byBiZWNvbWUgaGlnaGx5IGVtcGxveWFibGUgYXMgd2VsbCBhcyB1bnJpdmFsbGVkIHBhc3RvcmFsIGNhcmUuXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUZvciBmdXJ0aGVyIGluZm9ybWF0aW9uIGNvbnRhY3QgU3RldmVuIEdvdWx0b24sIExhdyBDb3Vyc2UgRGlyZWN0b3IsIEJhdGggQnVzaW5lc3MgU2Nob29sLCBcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYSBocmVmPVwibWFpbHRvOnMuZ291bHRvbkBiYXRoc3BhLmFjLnVrXCJcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VzLmdvdWx0b25AYmF0aHNwYS5hYy51a1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvYVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZS5cdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwia2V5X3Jlc3BvbnNpYmlsaXRpZXNfaGVhZGVyIjoiQWJvdXQgVXMuIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VJZGVhbGx5IHlvdSB3aWxsIGhhdmUgZXhwZXJ0aXNlIGluIG9uZSBvciBtb3JlIG9mIHRoZSBmb2xsb3dpbmcgYXJlYXMgKHBsZWFzZSBzZWUgYmVsb3cgZm9yIGZ1cnRoZXIgaW5mb3JtYXRpb24gb24gQXNzb2NpYXRlIExlY3R1cmVyIHJvbGUgc3BlY2lmaWNzKTpcdTAwM2MvZGl2XHUwMDNlXHUwMDNjdWxcdTAwM2VcdTAwM2NsaVx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VUb3J0IExhd1x1MDAzYy9saVx1MDAzZVx1MDAzY2xpXHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUVtcGxveW1lbnQgTGF3XHUwMDNjL2xpXHUwMDNlXHUwMDNjbGlcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlQnVzaW5lc3MgTGF3XHUwMDNjL2xpXHUwMDNlXHUwMDNjbGlcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlRGlzc2VydGF0aW9uIHN1cGVydmlzaW9uXHUwMDNjL2xpXHUwMDNlXHUwMDNjbGlcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlRXF1aXR5IGFuZCB0cnVzdHNcdTAwM2MvbGlcdTAwM2VcdTAwM2NsaVx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VQcm9wZXJ0eSBMYXdcdTAwMjZuYnNwO1x1MDAzYy9saVx1MDAzZVx1MDAzY2xpXHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUVtZXJnaW5nIHRlY2hub2xvZ2llcyDigJMgQUksIGN5YmVybGF3IGV0Y1x1MDAzYy9saVx1MDAzZVx1MDAzYy91bFx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiQXNzb2NpYXRlIExlY3R1cmVyIGluIExhdyIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9jYmNmNWEyOS0yYmFmLTRhOTgtYTUyMy04ZjJkMDA2NDlhYmMiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2NiY2Y1YTI5LTJiYWYtNGE5OC1hNTIzLThmMmQwMDY0OWFiYyIsIndvcmtwbGFjZV90eXBlIjoib25zaXRlIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ik9uc2l0ZSIsImpvYiI6eyJpZCI6IjIxODAxMyIsInJlcXVpc2l0aW9uX2lkIjoiIiwiZGVwYXJ0bWVudCI6eyJpZCI6IjE5MDg1IiwibmFtZSI6IkJ1c2luZXNzIFNjaG9vbCJ9LCJkaXZpc2lvbiI6bnVsbCwic3RydWN0dXJlX2N1c3RvbV9ncm91cF9vbmUiOm51bGx9LCJsb2NhdGlvbiI6eyJpZCI6IjE0OTU4IiwiY2l0eSI6IkJhdGggIiwibmFtZSI6IkJhdGggLSBOZXd0b24gUGFyayIsInByb3ZpbmNlIjoiQmF0aCJ9fSx7ImlkIjoiMTk5ODczIiwiYmVuZWZpdHMiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlRHVlIHRvIHRoZSBuYXR1cmUgb2YgdGhpcyBwb3N0IHJlZ3JldGZ1bGx5IHdlIGNhbm5vdCBhY2NlcHQgYXBwbGljYXRpb25zIHRoYXQgZG8gbm90IGhhdmUgdGhlIFJpZ2h0IHRvIFdvcmsvTGl2ZSBpbiB0aGUgVUsgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBiZSByZWplY3RlZC5cdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZUdyYWRlIEFjMiAtIMKjMTkuMjMgcGVyIGhvdXIgKGEgbXVsdGlwbGllciBvZiAyLjUgbWF5IGJlIGFwcGxpZWQgZGVwZW5kaW5nIG9uIHRoZSB3b3JrIG9mZmVyZWQpXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlldyBEYXRlIC0gMTF0aCBcdTAwMjZhbXA7IDEydGggU2VwdGVtYmVyIDIwMjRcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUGxlYXNlIGVtYWlsIENsYXJhIEdpYW1pbmFyZGkgXHUwMDNjL3N0cm9uZ1x1MDAzZVx1MDAzY2EgaHJlZj1cIm1haWx0bzpjLmdpYW1pbmFyZGlAYmF0aHNwYS5hYy51a1wiXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlYy5naWFtaW5hcmRpQGJhdGhzcGEuYWMudWtcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2FcdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2UgZGlyZWN0bHkgZm9yIGFueSBxdWVyaWVzIHJlZ2FyZGluZyB0aGlzIHBvc2l0aW9uLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiYmVuZWZpdHNfaGVhZGVyIjoiQWRkaXRpb25hbCBJbmZvcm1hdGlvbiIsImNvbXBlbnNhdGlvbiI6bnVsbCwiY29tcGVuc2F0aW9uX21pbmltdW0iOm51bGwsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjpudWxsLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOm51bGwsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMzFUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VPdXIgQkEgKEhvbnMpIEZhc2hpb24gUGhvdG9ncmFwaHkgY291cnNlIGlzIGxvb2tpbmcgZm9yIGFzc29jaWF0ZSBsZWN0dXJlcnMgd2l0aCBpbi1kZXB0aCBrbm93bGVkZ2UgYW5kL29yIGluZHVzdHJ5IGV4cGVyaWVuY2UgaW4gdGhlIGFyZWFzIG9mIGZhc2hpb24gcGhvdG9ncmFwaHksIGZhc2hpb24gc3R5bGluZyBhbmQgZmFzaGlvbiBjb21tdW5pY2F0aW9uIHRvIGRlbGl2ZXIgdGVhY2hpbmcgb24gb3VyIGxldmVsIDQgYW5kIGxldmVsIDUgbW9kdWxlcy5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImVtcGxveW1lbnRfdHlwZSI6ImZsZXhpYmxlIiwiZW1wbG95bWVudF90eXBlX3RleHQiOiJGbGV4aWJsZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUFzIGFuIGFzc29jaWF0ZSBsZWN0dXJlciBvbiBCQSAoSG9ucykgRmFzaW9uIFBob3RvZ3JhcGh5LCB5b3VyIHByaW1hcnkgcmVzcG9uc2liaWxpdHkgd2lsbCBiZSBkZWxpdmVyaW5nIGVuZ2FnaW5nIGFuZCBoaWdoIHF1YWxpdHkgdGVhY2hpbmcgaW4gdGhlIGFwcHJvcHJpYXRlIHN1YmplY3QgYXJlYS4gVGhpcyBpbmNsdWRlcyBkZXZlbG9waW5nIGFuZCB1bmRlcnRha2luZyBpbi1wZXJzb24gbGVjdHVyZXMsIHByYWN0aWNhbCB3b3Jrc2hvcHMsIHNlbWluYXJzIGFuZCB0dXRvcmlhbHMgdG8gc3VwcG9ydCBvdXIgbGV2ZWwgNCBhbmQgbGV2ZWwgNSBzdHVkZW50cyBpbiB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlaXIgd29yay5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VJbiB0aGUgcm9sZSwgeW91IHdpbGwgYWxzbyBiZSBtYXJraW5nIGFuZCBhc3Nlc3NpbmcgbW9kdWxlIHdvcmssIHByb3ZpZGluZyBjb25zdHJ1Y3RpdmUgZmVlZGJhY2sgYW5kIGF0dGVuZGluZyBhc3Nlc3NtZW50IG1lZXRpbmdzIHdoZXJlIHJlcXVpcmVkIHRvIGVuc3VyZSBmYWlyIGFuZCBjb25zaXN0ZW50IGdyYWRpbmcuIFlvdSB3aWxsIGFsc28gYmUgZXhwZWN0ZWQgdG8gd29yayBjbG9zZWx5IHdpdGggbW9kdWxlIHN0YWZmIGFuZCBzdXBwb3J0IG9uIHNvbWUgYWRtaW5pc3RyYXRpdmUgdGFza3MsIGVuc3VyaW5nIHRoZSBzbW9vdGggcnVubmluZyBvZiB0aGUgbW9kdWxlLiBUaGlzIGluY2x1ZGVzIGVuZ2FnaW5nIHdpdGggZXhpc3RpbmcgdmlydHVhbCBsZWFybmluZyBlbnZpcm9ubWVudHMgdG8gZW5zdXJlIGNvaGVzaXZlIGRpc3NlbWluYXRpb24gb2YgbW9kdWxlIG1hdGVyaWFscyBhbmQgc3R1ZGVudCBjb21tdW5pY2F0aW9uIGFjcm9zcyB0aGUgY291cnNlLlx1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlVGhlIHJvbGUgcmVxdWlyZXMgYW4gaW4tZGVwdGggc3ViamVjdCBrbm93bGVkZ2UgYW5kL29yIGluZHVzdHJ5IGV4cGVydGlzZSBpbiB0aGUgYXJlYXMgb2YgZmFzaGlvbiBwaG90b2dyYXBoeSwgZmFzaGlvbiBzdHlsaW5nIGFuZC9vciBmYXNoaW9uIGNvbW11bmljYXRpb24uIFlvdSB3aWxsIGhhdmUgZXhjZWxsZW50IGNvbW11bmljYXRpb24gYW5kIGludGVycGVyc29uYWwgc2tpbGxzIGFuZCB3aWxsIGJlIGFibGUgdG8gdHJhbnNsYXRlIGtleSBza2lsbHMgYW5kIGNvbmNlcHRzIGludG8gYXBwcm9wcmlhdGUgbGFuZ3VhZ2UgYW5kIHRhc2tzIGZvciBsZXZlbCA0IGFuZCBsZXZlbCA1IHN0dWRlbnRzLiBBIHNvbGlkIHVuZGVyc3RhbmRpbmcgb2YgY29udGVtcG9yYXJ5IHRyZW5kcyBhbmQgaW5kdXN0cnkgcHJhY3RpY2VzIGlzIGVzc2VudGlhbCB0byBlbnN1cmUgaGlnaCBxdWFsaXR5IG9mIHRlYWNoaW5nIGZvciBzdHVkZW50cyBnb2luZyBpbnRvIGZ1dHVyZSBpbmR1c3RyeS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VQcmlvciBleHBlcmllbmNlIHRlYWNoaW5nIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgaW4gdGhlc2UgYXJlYXMgaXMgZGVzaXJhYmxlLiBZb3Ugd2lsbCBoYXZlIGV4Y2VsbGVudCBvcmdhbmlzYXRpb25hbCBhbmQgdGltZSBtYW5hZ2VtZW50IHNraWxscywgYW5kIGJlIGFibGUgdG8gd29yayBzdWNjZXNzZnVsbHkgYXMgcGFydCBvZiBhIHNtYWxsIHRlYW0uIEFsb25nc2lkZSBzb2xpZCBJVCBza2lsbHMsIGV4cGVydGlzZSBpbiBpbmR1c3RyeSBzcGVjaWZpYyBkaWdpdGFsIHRvb2xzIHN1Y2ggYXMgdGhlIEFkb2JlIENyZWF0aXZlIFN1aXRlIGlzIGJlbmVmaWNpYWwuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiQXNzb2NpYXRlIExlY3R1cmVyLCBCQSAoSG9ucykgRmFzaGlvbiBQaG90b2dyYXBoeSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy85NWJhNTY0ZC1mOTk1LTRhZjYtYjMzMy1jMzcxOWE0NTI2NGMiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzLzk1YmE1NjRkLWY5OTUtNGFmNi1iMzMzLWMzNzE5YTQ1MjY0YyIsIndvcmtwbGFjZV90eXBlIjoib25zaXRlIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ik9uc2l0ZSIsImpvYiI6eyJpZCI6IjIxODA3NyIsInJlcXVpc2l0aW9uX2lkIjoiIiwiZGVwYXJ0bWVudCI6eyJpZCI6IjM2MjcyIiwibmFtZSI6IlNjaG9vbCBvZiBBcnQsIEZpbG0gXHUwMDI2IE1lZGlhIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMTQ5NTkiLCJjaXR5IjoiQmF0aCIsIm5hbWUiOiJCYXRoIC0gTG9ja3Nicm9vayBDYW1wdXMiLCJwcm92aW5jZSI6IkJhdGgifX0seyJpZCI6IjIwMDYyMyIsImJlbmVmaXRzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVRoaXMgaXMgYSBGaXhlZCBUZXJtIENvbnRyYWN0IHVudGlsIE5vdmVtYmVyIDIwMjQuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVNhbGFyeTogR3JhZGUgMiwgwqMyMywxNTJcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlUmVjZW50IGFkanVzdG1lbnQgaW4gdGhlIFVL4oCZcyBTcG9uc29yc2hpcCBUaHJlc2hvbGRcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2MvZGl2XHUwMDNlXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVx1MDAzY3N0cm9uZ1x1MDAzZVBsZWFzZSBub3RlIHRoYXQgYXMgb2YgQXByaWwgMjAyNCwgdGhlcmUgaGFzIGJlZW4gYSBjaGFuZ2UgaW4gdGhlIFVL4oCZcyBzcG9uc29yc2hpcCB0aHJlc2hvbGQuIFJlZ3JldHRhYmx5IGFzIHRoZSBzYWxhcnkgZm9yIHRoaXMgcm9sZSBmYWxscyBiZW5lYXRoIHRoaXMsIHlvdSB3aWxsIG5vdCBiZSBlbGlnaWJsZSBmb3Igc3BvbnNvcnNoaXAgdGhlcmVmb3JlIHlvdXIgYXBwbGljYXRpb24gd2lsbCBhdXRvbWF0aWNhbGx5IGJlIHJlamVjdGVkLlx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2VcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMyMywxNTIgLyB5ZWFyIiwiY29tcGVuc2F0aW9uX21pbmltdW0iOjIzMTUyLjAsImNvbXBlbnNhdGlvbl9tYXhpbXVtIjoyMzE1Mi4wLCJjb21wZW5zYXRpb25fY3VycmVuY3kiOiJHQlAiLCJjb21wZW5zYXRpb25fZnJlcXVlbmN5IjoieWVhciIsImNvbXBlbnNhdGlvbl92aXNpYmxlIjp0cnVlLCJkZWFkbGluZV9hdCI6IjIwMjQtMDgtMDVUMjM6NTk6NTkrMDE6MDAiLCJkZXNjcmlwdGlvbiI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VFeGNpdGluZyBvcHBvcnR1bml0eSBmb3IgYSByZWxpYWJsZSBhbmQgZGVkaWNhdGVkIGluZGl2aWR1YWwgdG8gam9pbiBvdXIgZWxpdGUgRmFjaWxpdGllcyBhbmQgU2VydmljZXMgdGVhbSBpbiBoZWxwaW5nIG1haW50YWluIGEgY2xlYW4gYW5kIHNhZmUgZW52aXJvbm1lbnQgb24gb3VyIFNpb24gSGlsbCBDYW1wdXMuIChUaGlzIGlzIGEgRml4ZWQgVGVybSBDb250cmFjdCB1bnRpbCBOb3ZlbWJlciAyMDI0KVx1MDAzY2JyXHUwMDNlXHUwMDNjc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2Mvc3Ryb25nXHUwMDNlXHUwMDNjYnJcdTAwM2VcdTAwM2MvZGl2XHUwMDNlIiwiZW1wbG95bWVudF90eXBlIjoiZml4ZWRfdGVybV9mdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZpeGVkIFRlcm0gLSBGdWxsIFRpbWUiLCJrZXlfcmVzcG9uc2liaWxpdGllcyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VPdXIgdGVhbSBwcmlkZXMgb3Vyc2VsdmVzIG9uIG91ciBwb3NpdGl2ZSDigJhjYW4gZG/igJkgYXBwcm9hY2ggdG93YXJkcyBzdXBwb3J0aW5nIG91ciBzdHVkZW50cywgc3RhZmYgYW5kIHZpc2l0b3JzLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlQXMgYSB2YWx1ZWQgbWVtYmVyIG9mIG91ciB2aWJyYW50IHRlYW0sIHlvdSdsbCBiZSB0aGUgdW5zdW5nIGhlcm8gYmVoaW5kIHRoZSBzY2VuZXMsIHRyYW5zZm9ybWluZyBldmVyeSBjb3JuZXIgb2Ygb3VyIGNhbXB1cyBpbnRvIGEgc3BhcmtsaW5nIGhhdmVuIG9mIGtub3dsZWRnZSBhbmQgaW5ub3ZhdGlvbiBhdCB0aGUgc2FtZSB0aW1lIGFzIHByb3ZpZGluZyBleGNlbGxlbnQgY3VzdG9tZXIgc2VydmljZS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZUVtYnJhY2UgdGhlIGV4Y2l0ZW1lbnQgb2YgYSBkeW5hbWljIGVudmlyb25tZW50IHdoZXJlIG5vIHR3byBkYXlzIGFyZSBhbGlrZS5cdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZSIsImtleV9yZXNwb25zaWJpbGl0aWVzX2hlYWRlciI6IkFib3V0IHRoZSBSb2xlIiwicmVwb3J0aW5nX3RvIjpudWxsLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZSI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VEdWUgdG8gdGhlIFVuaXZlcnNpdHnigJlzIGxvY2F0aW9ucywgaGF2aW5nIHlvdXIgb3duIHRyYW5zcG9ydCBpcyByZWNvbW1lbmRlZCwgaG93ZXZlciwgdGhlcmUgaXMgdGhlIG9wdGlvbiBvZiBwdWJsaWMgdHJhbnNwb3J0ICh0aGlzIGlzIGxpbWl0ZWQgZHVyaW5nIHRoZSBzdW1tZXIgbW9udGhzKS5cdTAwM2Niclx1MDAzZVx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VDbGVhbmluZyBleHBlcmllbmNlIGlzIGJlbmVmaWNpYWwgYnV0IHdoYXQgd2XigJlyZSBsb29raW5nIGZvciBtb3N0IGlzIHJlbGlhYmlsaXR5LCBhdHRlbnRpb24gdG8gZGV0YWlsIGFuZCBhIHdpbGxpbmduZXNzIHRvIGxlYXJuLlx1MDAzY2JyXHUwMDNlXHUwMDI2bmJzcDtcdTAwM2NzdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJza2lsbHNfa25vd2xlZGdlX2V4cGVydGlzZV9oZWFkZXIiOiJBYm91dCBZb3UiLCJ0aXRsZSI6IkZ1bGwgVGltZSBDbGVhbmVyIChGaXhlZCBUZXJtIENvbnRyYWN0KSIsInVybCI6Imh0dHBzOi8vYmF0aHNwYS5waW5wb2ludGhxLmNvbS9lbi9wb3N0aW5ncy9lZWY1OTg0ZC04ZTBhLTQ2MDQtYjk0MS1kYTU5NzMzMmQ5NWIiLCJwYXRoIjoiL2VuL3Bvc3RpbmdzL2VlZjU5ODRkLThlMGEtNDYwNC1iOTQxLWRhNTk3MzMyZDk1YiIsIndvcmtwbGFjZV90eXBlIjoib25zaXRlIiwid29ya3BsYWNlX3R5cGVfdGV4dCI6Ik9uc2l0ZSIsImpvYiI6eyJpZCI6IjIxODc4MyIsInJlcXVpc2l0aW9uX2lkIjoiIiwiZGVwYXJ0bWVudCI6eyJpZCI6IjI1NDczIiwibmFtZSI6IkVzdGF0ZXMifSwiZGl2aXNpb24iOm51bGwsInN0cnVjdHVyZV9jdXN0b21fZ3JvdXBfb25lIjpudWxsfSwibG9jYXRpb24iOnsiaWQiOiIxNDk2MCIsImNpdHkiOiJCYXRoIiwibmFtZSI6IkJhdGggLSBTaW9uIEhpbGwgQ2FtcHVzIiwicHJvdmluY2UiOiJCYXRoIn19LHsiaWQiOiIyMDIzNzQiLCJiZW5lZml0cyI6Ilx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwM2NzdHJvbmdcdTAwM2VQbGVhc2UgTm90ZTogVGhpcyByb2xlIHdpbGwgaW52b2x2ZSBzb21lIHdlZWtlbmQgKFNhdHVyZGF5KSB3b3JraW5nIGluIGxpbmUgd2l0aCB0ZWFjaGluZyBibG9ja3MuXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUludGVydmlld3Mgd2lsbCBiZSB0YWtpbmcgcGxhY2UgaW4gU2VwdGVtYmVyIFx1MDAzYy9zdHJvbmdcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlXHUwMDNjL2Rpdlx1MDAzZVx1MDAzY2Rpdlx1MDAzZVx1MDAzYyEtLWJsb2NrLS1cdTAwM2VcdTAwMjZuYnNwO1x1MDAzYy9kaXZcdTAwM2UiLCJiZW5lZml0c19oZWFkZXIiOiJBZGRpdGlvbmFsIEluZm9ybWF0aW9uIiwiY29tcGVuc2F0aW9uIjoiwqMzMiwzMzIgLSDCozM2LDAyNCAvIHllYXIiLCJjb21wZW5zYXRpb25fbWluaW11bSI6MzIzMzIuMCwiY29tcGVuc2F0aW9uX21heGltdW0iOjM2MDI0LjAsImNvbXBlbnNhdGlvbl9jdXJyZW5jeSI6IkdCUCIsImNvbXBlbnNhdGlvbl9mcmVxdWVuY3kiOiJ5ZWFyIiwiY29tcGVuc2F0aW9uX3Zpc2libGUiOnRydWUsImRlYWRsaW5lX2F0IjoiMjAyNC0wOC0yMlQyMzo1OTo1OSswMTowMCIsImRlc2NyaXB0aW9uIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZVdlIGFyZSBjdXJyZW50bHkgc2Vla2luZyBhIFRlY2huaWNhbCBEZW1vbnN0cmF0b3JcdTAwM2NzdHJvbmdcdTAwM2UgXHUwMDNjL3N0cm9uZ1x1MDAzZVRvIGJlIHJlc3BvbnNpYmxlIGZvciB0aGUgZGVsaXZlcnkgdHJhaW5pbmcgb2Ygc3BlY2lhbGlzdCB0ZWNobmljYWwgc2tpbGxzIGFuZCB0cmFpbmluZyBpbiBkaWZmZXJlbnQgbGVhcm5pbmcgdG9vbHMgdG8gZWl0aGVyIGdyb3VwcyBvZiBzdHVkZW50cyBvciBvbmUtdG8tb25lIHN1cHBvcnQgdG8gaW5kaXZpZHVhbHMgYXQgQmF0aCBTcGEgVW5pdmVyc2l0eSwgTG9uZG9uXHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZVx1MDAzYy9kaXZcdTAwM2UiLCJlbXBsb3ltZW50X3R5cGUiOiJmdWxsX3RpbWUiLCJlbXBsb3ltZW50X3R5cGVfdGV4dCI6IkZ1bGwgVGltZSIsImtleV9yZXNwb25zaWJpbGl0aWVzIjoiXHUwMDNjZGl2XHUwMDNlXHUwMDNjIS0tYmxvY2stLVx1MDAzZUFzIFRlY2huaWNhbCBEZW1vbnN0cmF0b3IgeW91IHdpbGwgYmUgdGVhY2hpbmcgdGhlIHVzZSBvZiBkaWdpdGFsIGxlYXJuaW5nIHRvb2xzLCBsZWFkaW5nIEFWIGFuZCBFZHVjYXRpb25hbCBUZWNobm9sb2d5IHRyYWluaW5nIGZvciBzdGFmZiwgYW5kIHByZXBhcmluZyBjb21wcmVoZW5zaXZlIHRyYWluaW5nIGd1aWRlcywgYXMgd2VsbCBhcyBiZWluZyByZXNwb25zaWJsZSBmb3IgZW5zdXJpbmcgdGhlIG1haW50ZW5hbmNlIG9mIHNwZWNpYWxpc3QgZXF1aXBtZW50IGlzIGNhcnJpZWQgb3V0IHdpdGhpbiBvd24gYXJlYSBvZiB3b3JrIGFuZCB0aGF0IGhlYWx0aCBhbmQgc2FmZXR5IHN0YW5kYXJkcyBhcmUgY29tcGxpZWQgd2l0aCBhdCBhbGwgdGltZXMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlWW91IHdpbGwgZGV2ZWxvcCBhbmQgY29uZHVjdCBkaWdpdGFsIGxlYXJuaW5nIHdvcmtzaG9wcywgc3VwZXJ2aXNlIHN0dWRlbnRzIGluIHdvcmtzaG9wIGZhY2lsaXRpZXMsIGFuZCBlbnN1cmUgSGVhbHRoIGFuZCBTYWZldHkgY29tcGxpYW5jZS4gUmVzcG9uc2liaWxpdGllcyBpbmNsdWRlIG1hbmFnaW5nIGFuZCBtYWludGFpbmluZyBlcXVpcG1lbnQsIGNvbmR1Y3RpbmcgcmlzayBhc3Nlc3NtZW50cywgYW5kIGFkdmlzaW5nIG9uIGZ1dHVyZSByZXNvdXJjZSByZXF1aXJlbWVudHMuXHUwMDI2bmJzcDtcdTAwM2Niclx1MDAzZVx1MDAzY2JyXHUwMDNlQ29sbGFib3JhdGlvbiB3aXRoIEFWLCBsZWFybmluZyB0ZWNobm9sb2d5LCBhbmQgcHJvZmVzc2lvbmFsIHNlcnZpY2VzIGNvbGxlYWd1ZXMgaXMgZXNzZW50aWFsLlx1MDAzYy9kaXZcdTAwM2UiLCJrZXlfcmVzcG9uc2liaWxpdGllc19oZWFkZXIiOiJBYm91dCB0aGUgUm9sZSIsInJlcG9ydGluZ190byI6bnVsbCwic2tpbGxzX2tub3dsZWRnZV9leHBlcnRpc2UiOiJcdTAwM2NkaXZcdTAwM2VcdTAwM2MhLS1ibG9jay0tXHUwMDNlWW91IHdpbGwgYmUgaGlnaGx5IHNraWxsZWQgd2l0aCBhIGZpcnN0IGRlZ3JlZSBpbiBhIHJlbGV2YW50IHByYWN0aWNhbCBzdWJqZWN0IG9yIHNpZ25pZmljYW50IHByb2Zlc3Npb25hbCBleHBlcmllbmNlLiBZb3Ugd2lsbCBoYXZlIGV4dGVuc2l2ZSBBViBleHBlcmllbmNlLCBrbm93bGVkZ2Ugb2YgZWR1Y2F0aW9uYWwgdGVjaG5vbG9naWVzIGxpa2UgVGVhbXMsIHZpZGVvIGNvbmZlcmVuY2luZywgYW5kIGxlY3R1cmUgY2FwdHVyZSwgYW5kIGEgcHJvYWN0aXZlIGFwcHJvYWNoIHRvIG1haW50ZW5hbmNlLCBkZXZlbG9wbWVudCwgYW5kIHNhZmV0eS5cdTAwMjZuYnNwO1x1MDAzY2JyXHUwMDNlXHUwMDNjYnJcdTAwM2VTdHJvbmcgZGlnaXRhbCBsaXRlcmFjeSwgcGFydGljdWxhcmx5IGluIEFkb2JlIENyZWF0aXZlIENhbXB1cyB0b29scywgZXhjZWxsZW50IGludGVycGVyc29uYWwgYW5kIGNvbW11bmljYXRpb24gc2tpbGxzLCBhbmQgdGhlIGFiaWxpdHkgdG8gbWFuYWdlIHJlc291cmNlcyBhbmQgd29yayB1bmRlciBwcmVzc3VyZSBhcmUgZXNzZW50aWFsLlx1MDAyNm5ic3A7XHUwMDNjYnJcdTAwM2VcdTAwM2Niclx1MDAzZUZsZXhpYmlsaXR5LCBhZGFwdGFiaWxpdHksIGFuZCBhIHBvc2l0aXZlIGFwcHJvYWNoIHRvIGNoYW5nZSwgYWxvbmcgd2l0aCB0aGUgYWJpbGl0eSB0byB3b3JrIGNvbGxhYm9yYXRpdmVseSB0b3dhcmRzIHNoYXJlZCBnb2FscywgYXJlIGtleSBhdHRyaWJ1dGVzIGZvciB0aGlzIHJvbGUuXHUwMDNjL2Rpdlx1MDAzZSIsInNraWxsc19rbm93bGVkZ2VfZXhwZXJ0aXNlX2hlYWRlciI6IkFib3V0IFlvdSIsInRpdGxlIjoiVGVjaG5pY2FsIERlbW9uc3RyYXRvciBpbiBFZHVjYXRpb25hbCBUZWNobm9sb2d5IChMb25kb24pIiwidXJsIjoiaHR0cHM6Ly9iYXRoc3BhLnBpbnBvaW50aHEuY29tL2VuL3Bvc3RpbmdzL2U1NTMwMjhiLWFkYmEtNDQwYi04MDNmLTdmMWZjZjA4Yjc2OSIsInBhdGgiOiIvZW4vcG9zdGluZ3MvZTU1MzAyOGItYWRiYS00NDBiLTgwM2YtN2YxZmNmMDhiNzY5Iiwid29ya3BsYWNlX3R5cGUiOiJoeWJyaWQiLCJ3b3JrcGxhY2VfdHlwZV90ZXh0IjoiSHlicmlkIiwiam9iIjp7ImlkIjoiMjIwNTIzIiwicmVxdWlzaXRpb25faWQiOiIyNDkvMjMvMjQiLCJkZXBhcnRtZW50Ijp7ImlkIjoiMjk5NjIiLCJuYW1lIjoiQmF0aCBTcGEgVW5pdmVyc2l0eSBMb25kb24gIn0sImRpdmlzaW9uIjpudWxsLCJzdHJ1Y3R1cmVfY3VzdG9tX2dyb3VwX29uZSI6bnVsbH0sImxvY2F0aW9uIjp7ImlkIjoiMjM0NzAiLCJjaXR5IjoiTG9uZG9uIiwibmFtZSI6IkJhdGggU3BhIFVuaXZlcnNpdHkgTG9uZG9uIiwicHJvdmluY2UiOiJCYXRoIn19XX0=
  recorded_at: Thu, 01 Aug 2024 20:03:31 GMT
- request:
    method: post
    uri: https://api.crunchbase.com/api/v4/searches/organizations?user_key=412884ba49f101427f2e0dc7007db5d0
    body:
      encoding: UTF-8
      string: '{"field_ids":["name","short_description","linkedin","website_url","rank_org"],"order":[{"field_id":"rank_org","sort":"asc"}],"query":[{"type":"predicate","field_id":"website_url","operator_id":"domain_eq","values":["https://www.bathspa.ac.uk/"]}],"limit":1}'
    headers:
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Cache-Control:
      - no-cache, private
      Content-Type:
      - application/json
      Date:
      - Thu, 01 Aug 2024 20:03:32 GMT
      Etag:
      - W/"1722542612452"
      Server:
      - openresty
      X-Cb-Engine:
      - search:elastic
      X-Cb-Engine-Cached:
      - 'false'
      X-Cb-Engine-Minimum-Count:
      - '1'
      X-Cb-Engine-Page-Count:
      - '1'
      X-Cb-Engine-Took:
      - '4'
      X-Cb-Engine-Total-Count:
      - '1'
      X-Cb-Request-Took:
      - '14'
      Content-Length:
      - '615'
      Connection:
      - keep-alive
    body:
      encoding: UTF-8
      string: '{"count":1,"entities":[{"uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","properties":{"name":"Bath
        Spa University","identifier":{"permalink":"bath-spa-university-2","image_id":"v1488530438/cej4b9ng1amolmbwoqp0.png","uuid":"f221c78f-54eb-1f68-967d-87d6046d43e5","entity_def_id":"organization","value":"Bath
        Spa University"},"linkedin":{"value":"https://www.linkedin.com/company/bath-spa-university"},"short_description":"Bath
        Spa offers undergraduate and postgraduate study and research opportunities
        with a focus on creativity, culture and enterprise.","rank_org":460748,"website_url":"https://www.bathspa.ac.uk/"}}]}'
  recorded_at: Thu, 01 Aug 2024 20:03:32 GMT
recorded_with: VCR 6.2.0
